[
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 58,
        "title": "【PaddlePaddle Hackathon 2】100、PaddleDTX/xdb支持负载均衡策略",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleDTX/xdb支持负载均衡策略\r\n\r\n- 技术标签：区块链、Golang\r\n\r\n- 任务难度：困难\r\n\r\n- 详细描述：PaddleDTX/xdb在文件分发时随机选择存储节点进行分片存储，没有考虑存储节点当前可用存储资源，可能存在目标存储节点资源不足的情况，也可能导致存储资源很多的节点分配到的分片较少，资源未被充分利用。因此新增负载均衡策略，综合考虑存储节点健康状态和可用存储资源，在文件分发时优先选择健康且资源充足的节点分发文件。\r\n\r\n【提交流程】\r\n\r\n请将代码提交至 https://github.com/PaddlePaddle/PaddleDTX 开源仓库\r\n\r\n【提交内容】\r\n\r\n- 设计负载均衡的文件分发策略，提交方案至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/PaddleDTX 目录下，综合考虑存储节点健康状态和可用存储资源\r\n\r\n- Fabric&xchain合约新增方法，实现存储节点可用资源的记录和更新，可参考 PaddleDTX/xdb/blockchain/xchain/contract\r\n\r\n- Fabric&xchain合约调用获取存储节点资源，可参考 PaddleDTX/xdb/blockchain/xchain\r\n\r\n- 命令行工具支持更新存储节点存储资源，可参考PaddleDTX/xdb/cmd/client/cmd/nodes\r\n\r\n- 服务端接口支持更新存储节点存储资源，可参考PaddleDTX/xdb/server和PaddleDTX/xdb/engine/handler_node.go\r\n\r\n- 文件分发时根据负载策略选择存储节点，而非随机选择，可参考 PaddleDTX/xdb/engine/copier\r\n\r\n【合入标准】\r\n\r\n- 1、完成功能实现、单测、功能测试；\r\n\r\n【技术要求】\r\n\r\n- 熟悉区块链技术\r\n\r\n- 熟练Golang\r\n\r\n【参考内容】\r\n\r\n- [文档：https://paddledtx.readthedocs.io/zh_CN/latest/](http://agroup.baidu.com/paddlepaddle/md/article/4727422)\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发过程中对于上述任务有任何问题，欢迎在 https://github.com/PaddlePaddle/PaddleDTX 上提issue\r\n\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T10:21:31+00:00",
        "updated_at": "2022-06-13T08:33:51+00:00",
        "closed_at": "2022-06-13T08:33:51+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 50,
        "title": "编译xdb失败",
        "body": "环境:\r\n![2](https://user-images.githubusercontent.com/4935705/154003421-018b3429-63e7-4f43-9250-9603da0873aa.png)\r\n\r\n错误:\r\n![1](https://user-images.githubusercontent.com/4935705/154003458-d6ebbda3-1ed9-4e8e-8e17-0adb4ad66c35.png)\r\n\r\n",
        "state": "closed",
        "user": "springrain",
        "closed_by": "hongyanwang",
        "created_at": "2022-02-15T06:15:58+00:00",
        "updated_at": "2022-02-16T02:29:04+00:00",
        "closed_at": "2022-02-16T02:29:04+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 53,
        "title": "xdb部署和性能问题",
        "body": "PaddleDTX中的xdb支持跨广域网部署能力吗？有相关的性能测试数据吗？",
        "state": "closed",
        "user": "luoweb",
        "closed_by": "MyYuan",
        "created_at": "2022-02-23T00:00:02+00:00",
        "updated_at": "2022-03-03T02:14:18+00:00",
        "closed_at": "2022-02-26T03:31:41+00:00",
        "comments_count": [
            "MyYuan",
            "luoweb",
            "MyYuan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 32,
        "title": "手册创建命名空间命令参数出错",
        "body": "## 创建命名空间报错\r\n手册位置：https://paddledtx.readthedocs.io/zh_CN/latest/quickstart/client.html\r\n操作XuperDB ，创建命名空间这步：\r\n\r\n在AIStudio BML notebook环境中，使用的命令为：\r\n!cd ~/PaddleDTX/xdb/output &&  ./xdb-cli files addns  --host http://127.0.0.1:8122 -k eae7344064e1d5b53af6da1a23407b1e7e265d15eaf0442c476e3caac3003406 -n paddlempc  -r 2\r\n报错信息为：\r\n```\r\nerr：{\"code\":\"XDAT0004\",\"message\":\"from xdb api: request url not found\"}\r\n```\r\n调试的时候百思不得其解，甚至一度怀疑端口监听到ipv6地址了。但是查看前面开服务的时候，已经测试连接，输出状态信息了。\r\n\r\n后来仔细看，发现是连通数据持有节点，而8122端口是数据存储节点，原来文档上面写错端口号了。\r\n\r\n修改命令端口号到8123，搞定！\r\n\r\n!cd ~/PaddleDTX/xdb/output &&  ./xdb-cli files addns  --host http://127.0.0.1:8123 -k eae7344064e1d5b53af6da1a23407b1e7e265d15eaf0442c476e3caac3003406 -n paddlempc  -r 2\r\n",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "skywalk163",
        "created_at": "2021-12-28T03:15:58+00:00",
        "updated_at": "2021-12-28T05:15:13+00:00",
        "closed_at": "2021-12-28T05:15:12+00:00",
        "comments_count": [
            "gaoweibupt",
            "skywalk163"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 34,
        "title": "训练提交后长时间处于Processing并最终在几十分钟之后Failed失败",
        "body": "采用单xuperchain，双执行节点，双数据持有节点，双数据存储节点构建的PaddleDTX环境。\r\n采用AIStudio BMLcolab环境，在普通版和高端版（gpu版）下都是一样的情况。\r\n根据手册https://paddledtx.readthedocs.io/zh_CN/latest/quickstart/client.html\r\n执行任务，\r\n不同命令之后任务状态也不同：\r\n```\r\n发布任务\r\nTaskStatus: Confirming\r\n\r\n一个节点确认之后还是\r\nconfirming\r\n\r\n两个节点确认后成为ready\r\nTaskStatus: Ready\r\n\r\n启动任务之后进入Processing\r\nTaskStatus: Processing\r\n\r\n```\r\n但是Processing执行的时间非常长，在大约几十分钟到1个多小时后，Failed失败\r\n\r\n在本机docker环境下测试，训练是几分钟就可以完成的。",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "skywalk163",
        "created_at": "2022-01-02T15:11:21+00:00",
        "updated_at": "2022-01-07T15:35:54+00:00",
        "closed_at": "2022-01-07T15:35:54+00:00",
        "comments_count": [
            "skywalk163",
            "skywalk163",
            "hongyanwang",
            "skywalk163",
            "MyYuan",
            "skywalk163",
            "skywalk163"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 48,
        "title": "新版本docker script模式启动失败",
        "body": "在启动执行节点的时候报错，在docker里面看到的报错信息为：\r\n```\r\n\r\nexecutor2.node.com  | 2022/02/08 21:21:47 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:21:47 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com  | 2022/02/08 21:22:20 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:22:20 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor1.node.com  | 2022/02/08 21:21:40 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor1.node.com  | 2022/02/08 21:21:40 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor1.node.com  | 2022/02/08 21:22:26 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor1.node.com  | 2022/02/08 21:22:26 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com exited with code 255\r\n\r\nexecutor2.node.com  | 2022/02/08 21:21:47 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:21:47 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com  | 2022/02/08 21:22:20 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:22:20 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com  | 2022/02/08 21:25:16 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:25:16 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com  | 2022/02/08 21:25:33 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n\r\nexecutor2.node.com  | 2022/02/08 21:25:33 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\n\r\nexecutor2.node.com exited with code 255\r\n```\r\n\r\ndocker里面手动启动执行节点也是报错的。",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "MyYuan",
        "created_at": "2022-02-08T13:27:44+00:00",
        "updated_at": "2022-03-01T01:28:08+00:00",
        "closed_at": "2022-02-26T03:31:52+00:00",
        "comments_count": [
            "MyYuan",
            "skywalk163",
            "MyYuan",
            "skywalk163",
            "MyYuan",
            "skywalk163"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 47,
        "title": "启动数据存储节点报错",
        "body": "xuper和PaddleDTX更新版本后，启动数据存储节点报错 。\r\n```\r\n2022/01/29 11:11:41 Config yamlFile get error #open ./conf/sdk.yaml: no such file or directory\r\n2022/01/29 11:11:41 GetConfig: &{10.144.94.18:8848 {false false 10 XBbhR82cB6PvaLJs3D4uB9f12bhmKkHeX TYyA3y8wdFZyzExtcbRNVd7ZZ2XXcfjdw} 100 xchain}\r\nt=2022-01-29T11:11:41+0800 lvl=info msg=\"xchain rpc access request\" module=xchain r_call=server.go:1003 r_pid=36569 r_logid=1643425901739830258_286_3387 r_ntce=false rpc_method=/pb.Xchain/PreExec\r\nt=2022-01-29T11:11:41+0800 lvl=info msg=MetaReservedContracts module=xchain reservedContracts=[]\r\nt=2022-01-29T11:11:41+0800 lvl=info msg=\"xchain rpc service done\" module=xchain r_call=server.go:1016 r_pid=36569 r_logid=1643425901739830258_286_3387 r_ntce=true cost_time=\"total: 0.18ms\" rpc_method=/pb.Xchain/PreExec resp_error=\"Vm not exist in vm manager\"\r\n```\r\n存储在log文件中的内容：\r\n```\r\ntime=\"2022-01-29T11:11:41+08:00\" level=info msg=\"monitor initialize...\" answer-interval=10m0s monitor=challenging request-interval=1h7m0s\r\ntime=\"2022-01-29T11:11:41+08:00\" level=info msg=\"monitor initialize...\" fileclear-interval=24h0m0s fileretain-interval=168h0m0s heartbeat-interval=1m0s monitor=nodemaintainer\r\ntime=\"2022-01-29T11:11:41+08:00\" level=error msg=\"failed to read blockchain: {\\\"code\\\":\\\"XDAT0001\\\",\\\"message\\\":\\\"failed to QueryNativeContract: rpc error: code = Unknown desc = Vm not exist in vm manager\\\"}\"\r\ntime=\"2022-01-29T11:11:41+08:00\" level=error msg=\"app exit\" error=\"failed to read blockchain: {\\\"code\\\":\\\"XDAT0001\\\",\\\"message\\\":\\\"failed to QueryNativeContract: rpc error: code = Unknown desc = Vm not exist in vm manager\\\"}\"\r\n\r\n```\r\n\r\n使用docker方式，启动第二个数据存储节点的时候报错(命令`bash network_up.sh  start`)：\r\n```\r\n==========> Install paddlempc contract successfully ! \r\n==========> Decentralized storage network start ...\r\nCreating storage1.node.com   ... done\r\nCreating dataowner2.node.com ... done\r\nCreating dataowner1.node.com ... done\r\nCreating storage2.node.com   ... \r\n\r\nERROR: for storage2.node.com  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out.\r\n\r\nERROR: for storage2  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out.\r\nERROR: An HTTP request took too long to complete. Retry with --verbose to obtain debug information.\r\nIf you encounter this issue regularly because of slow network conditions, consider setting COMPOSE_HTTP_TIMEOUT to a higher value (current value: 60).\r\n==========> Decentralized storage network start error ...\r\n```\r\n后将docker内存从2G升级到4G，报错信息改为：\r\n```\r\n==========> Install paddlempc contract successfully ! \r\n==========> Decentralized storage network start ...\r\nCreating storage1.node.com   ... done\r\nCreating dataowner2.node.com ... done\r\nCreating dataowner1.node.com ... done\r\nCreating storage2.node.com   ... done\r\nCreating storage3.node.com   ... done\r\n==========> Decentralized storage network start error ...\r\n```",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "MyYuan",
        "created_at": "2022-01-29T04:06:03+00:00",
        "updated_at": "2022-02-15T11:42:10+00:00",
        "closed_at": "2022-02-15T11:42:10+00:00",
        "comments_count": [
            "skywalk163",
            "MyYuan",
            "MyYuan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 30,
        "title": "XuperDB源代码编译安装在XuperDB这里碰到了问题",
        "body": "首先Docker快速案例是可以跑通的。\r\n\r\n但是源代码编译安装碰到了问题，在AIStudio的BML环境下：\r\n按照手册源码编译安装，执行到部署 XuperDB 启动数据存储节点这块，\r\n执行命令：\r\n./xdb -c conf/config-storage.toml > storage.log后报错：\r\n\r\nERRO[0000] app exit                                      error=\"missing log config\"\r\n\r\n按照手册里修改成如下配置文件\r\n```\r\n# vim conf/config-dataowner.toml\r\n# \r\nlistenAddress = \":8123\"\r\npublicAddress = \"127.0.0.1:8123\"\r\n\r\n# genkey创建的私钥, 对账户使用不熟悉的话建议使用默认账户\r\nprivateKey = \"5572e2fa0c259fe798e5580884359a4a6ac938cfff62d027b90f2bac3eceef79\"\r\n\r\n[dataOwner.blockchain]\r\n    [dataOwner.blockchain.xchain]\r\n        # 助记词为用户安装合约过程中创建的区块链账户，取值./ukeys/mnemonic\r\n        mnemonic = \"充 雄 孔 坝 低 狠 争 短 摸 拜 晨 造\"\r\n        contractName = \"paddlempc\"\r\n        contractAccount = \"XC1234567890123456@xuper\"\r\n        chainAddress = \"127.0.0.1:37101\"\r\n        chainName = \"xuper\"\r\n```\r\n则执行后会报错：\r\n\r\n```\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0xe8 pc=0xa8bb81]\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/spf13/viper.(*Viper).AllKeys(0x0)\r\n\t/home/aistudio/go/pkg/mod/github.com/spf13/viper@v1.7.1/viper.go:1824 +0xa1\r\ngithub.com/spf13/viper.(*Viper).AllSettings(0x0)\r\n\t/home/aistudio/go/pkg/mod/github.com/spf13/viper@v1.7.1/viper.go:1904 +0x45\r\ngithub.com/spf13/viper.(*Viper).Unmarshal(0xc0005f1cd8, {0x1165a40, 0xc000a4a8e0}, {0x0, 0x0, 0x0})\r\n\t/home/aistudio/go/pkg/mod/github.com/spf13/viper@v1.7.1/viper.go:908 +0x32\r\ngithub.com/PaddlePaddle/PaddleDTX/xdb/config.InitConfig({0x7fff43948c94, 0x12})\r\n\t/home/aistudio/PaddleDTX/xdb/config/config.go:87 +0x1aa\r\nmain.init.0()\r\n\t/home/aistudio/PaddleDTX/xdb/main.go:63 +0xbe\r\n```\r\n因为对go语言报错实在看不懂，所以不知道该怎么查找和纠错。\r\n\r\n 我的项目已经公开，放在这里：https://aistudio.baidu.com/aistudio/projectdetail/3255074\r\ngo version go1.17.5 linux/amd64\r\nGNU Make 4.1\r\n\r\n",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "hongyanwang",
        "created_at": "2021-12-22T08:49:42+00:00",
        "updated_at": "2021-12-28T07:02:34+00:00",
        "closed_at": "2021-12-28T07:02:34+00:00",
        "comments_count": [
            "MyYuan",
            "skywalk163",
            "skywalk163",
            "MyYuan",
            "skywalk163",
            "skywalk163",
            "MyYuan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 38,
        "title": "编译区域链合约报错",
        "body": "编译区域链合约命令：\r\n`!cd ~/PaddleDTX/dai &&  go build -o paddlempc ./blockchain/xchain/contract`\r\n\r\n报错：\r\n```\r\n../../go/pkg/mod/github.com/!paddle!paddle/!paddle!d!t!x/xdb@v0.0.0-20220105070447-3045ca6cf1af/blockchain/xchain/contract/core/challenging.go:25:2: missing go.sum entry for module providing package github.com/xuperchain/xuperchain/core/contractsdk/go/code (imported by github.com/PaddlePaddle/PaddleDTX/dai/blockchain/xchain/contract); to add:\r\n\tgo get github.com/PaddlePaddle/PaddleDTX/dai/blockchain/xchain/contract\r\nblockchain/xchain/contract/main.go:17:2: missing go.sum entry for module providing package github.com/xuperchain/xuperchain/core/contractsdk/go/driver (imported by github.com/PaddlePaddle/PaddleDTX/dai/blockchain/xchain/contract); to add:\r\n\tgo get github.com/PaddlePaddle/PaddleDTX/dai/blockchain/xchain/contract\r\n```\r\n\r\n用了go 16和17两个版本。\r\n不知道为什么go会抽风...",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "skywalk163",
        "created_at": "2022-01-08T16:26:15+00:00",
        "updated_at": "2022-01-10T13:29:24+00:00",
        "closed_at": "2022-01-10T13:29:23+00:00",
        "comments_count": [
            "skywalk163",
            "skywalk163"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 59,
        "title": "【PaddlePaddle Hackathon 2】99、PaddleDTX/crypto中Paillier算法实现的性能优化",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleDTX/crypto中Paillier算法实现的性能优化\r\n\r\n- 技术标签：密码算法，Golang\r\n\r\n- 任务难度：中等\r\n\r\n- 详细描述：PaddleDTX当前实现了两类纵向联邦学习算法，均采用Paillier同态进行加密参数传输，在训练的迭代过程中需多次进行同态加解密运算，因此Paiilier算法的性能会大大影响分布式AI的整体性能，\r\n\r\n【提交流程】\r\n\r\n请将代码提交至 https://github.com/PaddlePaddle/PaddleDTX 开源仓库\r\n\r\n【提交内容】\r\n\r\n\r\n- 设计算法性能优化方案，提交方案至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/PaddleDTX 目录下。\r\n- 在已有Paillier实现的基础上进行性能优化，参考PaddleDTX/crypto/common/math/homomorphism/paillier\r\n\r\n【合入标准】\r\n\r\n- 1、完成功能实现、单测、性能测试；\r\n\r\n【技术要求】\r\n\r\n- 熟悉密码学技术\r\n\r\n- 熟练Golang\r\n\r\n【参考内容】\r\n\r\n- [文档：https://paddledtx.readthedocs.io/zh_CN/latest/](http://agroup.baidu.com/paddlepaddle/md/article/4727422)\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发过程中对于上述任务有任何问题，欢迎在 https://github.com/PaddlePaddle/PaddleDTX 上提issue\r\n\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T10:21:55+00:00",
        "updated_at": "2022-06-13T08:33:51+00:00",
        "closed_at": "2022-06-13T08:33:51+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 60,
        "title": "【PaddlePaddle Hackathon 2】98、PaddleDTX支持k8s启动DAI网络",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleDTX支持k8s启动DAI网络\r\n\r\n- 技术标签：区块链，k8s\r\n\r\n- 任务难度：中等\r\n\r\n- 详细描述：PaddleDTX当前提供的网络（包括区块链网络、去中心化存储网络、分布式计算网络）一键启动脚本，是通过docker-compose，该方式只支持在单主机上运行，而实际应用场景中，用户需要跨主机集群部署，保障服务的高可用，因此需要支持K8S方式部署PaddleDTX。\r\n\r\n【提交流程】\r\n\r\n请将代码提交至 https://github.com/PaddlePaddle/PaddleDTX 开源仓库\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/PaddleDTX 目录\r\n- 启动区块链网络、去中心化存储网络、可信计算网络所需的K8S配置yaml文件，conf配置可通过configmap方式挂载\r\n- 集群中的服务通过Service方式进行互相通信，可以支持通过Ingress实现全局的负载均衡，可参考 https://kubernetes.io/zh/docs/concepts/services-networking/ingress/\r\n- 服务启动后产生的日志、存储或计算等数据需支持持久化存储（如NFS）\r\n- 支持脚本或者helm方式一键启停网络，并有服务启动使用说明，可参考PaddleDTX/scripts\r\n\r\n【合入标准】\r\n\r\n1、完成功能实现、功能测试；\r\n\r\n【技术要求】\r\n\r\n- 熟悉区块链技术\r\n\r\n- 熟悉k8s、docker\r\n\r\n【参考内容】\r\n\r\n- 文档：https://paddledtx.readthedocs.io/zh_CN/latest/【答疑交流】\r\n\r\n- 如果在开发过程中对于上述任务有任何问题，欢迎在 https://github.com/PaddlePaddle/PaddleDTX 上提issue\r\n\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T10:22:24+00:00",
        "updated_at": "2022-06-13T08:33:51+00:00",
        "closed_at": "2022-06-13T08:33:51+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 61,
        "title": "【PaddlePaddle Hackathon 2】97、PaddleDTX/xdb支持数据集查询功能",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleDTX/xdb支持数据集查询功能\r\n\r\n- 技术标签：区块链，Golang\r\n\r\n- 任务难度：简单\r\n\r\n- 详细描述：PaddleDTX/xdb是基于区块链的去中心化存储系统，目前支持通过数据拥有方的公钥查询网络中的数据列表。但在实际应用中，需求方可能需要查询网络中所有可用的数据，不区分拥有者，因此需要新增查询网络中所有数据列表的功能。\r\n\r\n【提交流程】\r\n\r\n请将代码提交至 https://github.com/PaddlePaddle/PaddleDTX 开源仓库\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/PaddleDTX 目录\r\n- Fabric&xchain合约实现查询所有数据列表功能，可参考 PaddleDTX/xdb/blockchain/xchain/contract\r\n- Fabric&xchain合约调用，可参考 PaddleDTX/xdb/blockchain/xchain\r\n- 命令行工具支持全体数据查询，可参考PaddleDTX/xdb/cmd/client/cmd/files\r\n- 服务端接口支持全体数据查询，参考PaddleDTX/xdb/server和PaddleDTX/xdb/engine/handler_file.go\r\n\r\n【合入标准】\r\n\r\n- 1、完成功能实现、功能测试；\r\n\r\n【技术要求】\r\n\r\n- 熟悉区块链技术\r\n- 熟练Golang\r\n\r\n【参考内容】\r\n\r\n- [文档：https://paddledtx.readthedocs.io/zh_CN/latest/](http://agroup.baidu.com/paddlepaddle/md/article/4727422)\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发过程中对于上述任务有任何问题，欢迎在 https://github.com/PaddlePaddle/PaddleDTX 上提issue\r\n\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T10:22:51+00:00",
        "updated_at": "2022-06-13T08:33:52+00:00",
        "closed_at": "2022-06-13T08:33:52+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 62,
        "title": "【PaddlePaddle Hackathon 2】96、PaddleDTX/dai网络支持Fabric",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleDTX/dai网络支持Fabric\r\n\r\n- 技术标签：区块链，Golang\r\n\r\n- 任务难度：简单\r\n\r\n- 详细描述：PaddleDTX是基于区块链的可信分布式AI，底层区块链目前采用百度自研的XuperChain，为提高系统的灵活易用性，计划后期支持Fabric\r\n\r\n【提交流程】\r\n\r\n请将代码提交至 https://github.com/PaddlePaddle/PaddleDTX 开源仓库\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/PaddleDTX 目录\r\n\r\n- Fabric合约实现，包括任务管理和计算节点管理，可参考 PaddleDTX/dai/blockchain/xchain/contract\r\n\r\n- Fabric合约调用，可参考 PaddleDTX/dai/blockchain/xchain\r\n\r\n- PaddleDTX/dai/conf添加Fabric相关配置，参考PaddleDTX/xdb/conf\r\n\r\n- PaddleDTX/dai/executor/engine中支持Fabric配置\r\n\r\n- PaddleDTX/testdata支持Fabric区块链网络，参考PaddleDTX/xdb/testdata/blockchain\r\n\r\n【合入标准】\r\n\r\n- 1、完成功能实现、功能测试；\r\n\r\n【技术要求】\r\n\r\n- 熟悉区块链技术\r\n\r\n- 熟练Golang\r\n\r\n【参考内容】\r\n\r\n- [文档：https://paddledtx.readthedocs.io/zh_CN/latest/](http://agroup.baidu.com/paddlepaddle/md/article/4727422)\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发过程中对于上述任务有任何问题，欢迎在 https://github.com/PaddlePaddle/PaddleDTX 上提issue\r\n\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T10:23:18+00:00",
        "updated_at": "2022-06-13T08:33:52+00:00",
        "closed_at": "2022-06-13T08:33:52+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 63,
        "title": "【PaddlePaddle Hackathon 2】PaddleDTX 任务合集",
        "body": "大家好，非常高兴地告诉大家，第二期 [PaddlePaddle Hackathon](https://www.paddlepaddle.org.cn/PaddlePaddleHackathon-2022-3?fr=paddledtx) 开始了。PaddlePaddle Hackathon 是面向全球开发者的深度学习领域编程活动，鼓励开发者了解与参与 PaddlePaddle 开源社区。本次共有四大专区：PaddlePaddle、Paddle Family、Paddle Friends、Paddle Eval，共计100+个任务供大家认领。详细信息可以参考 [PaddlePaddle Hackathon 说明](https://www.paddlepaddle.org.cn/contributionguide?docPath=hackathon_cn)。大家是否已经迫不及待了呢~\r\n\r\n本 ISSUE 是 Paddle Friends 专区 PaddleDTX 方向任务合集。具体任务列表如下：\r\n\r\n| 序号 | 难度 | 任务 ISSUE |\r\n| ---- | ---- | --- | \r\n| 96 | ⭐️ | [PaddleDTX/dai网络支持Fabric](https://github.com/PaddlePaddle/PaddleDTX/issues/62) |\r\n| 97 | ⭐️ | [PaddleDTX/xdb支持数据集查询功能](https://github.com/PaddlePaddle/PaddleDTX/issues/61) |\r\n| 98 | ⭐️⭐️ | [PaddleDTX支持k8s启动DAI网络](https://github.com/PaddlePaddle/PaddleDTX/issues/60) |\r\n| 99 | ⭐️⭐️ | [PaddleDTX/crypto中Paillier算法实现的性能](https://github.com/PaddlePaddle/PaddleDTX/issues/59) |\r\n| 100 | ⭐️⭐️⭐️ | [PaddleDTX/xdb支持负载均衡策略](https://github.com/PaddlePaddle/PaddleDTX/issues/58)|\r\n\r\n若想要认领本次活动任务，请至 [PaddlePaddle Hackathon 2 Pinned ISSUE](https://github.com/PaddlePaddle/Paddle/issues/40234) 完成任务 ISSUE 认领。\r\n\r\n活动官网：[PaddlePaddle Hackathon 2](https://www.paddlepaddle.org.cn/PaddlePaddleHackathon-2022-3?fr=paddledtx)",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "hongyanwang",
        "created_at": "2022-03-08T11:02:03+00:00",
        "updated_at": "2022-06-13T08:33:52+00:00",
        "closed_at": "2022-06-13T08:33:52+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 147,
        "title": "xdb编译有问题",
        "body": null,
        "state": "closed",
        "user": "nihaoqingtuan",
        "closed_by": "nihaoqingtuan",
        "created_at": "2023-04-13T02:40:08+00:00",
        "updated_at": "2023-09-08T03:52:33+00:00",
        "closed_at": "2023-09-08T03:52:33+00:00",
        "comments_count": [
            "hongyanwang",
            "nihaoqingtuan",
            "hongyanwang",
            "hongyanwang",
            "hongyanwang"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleDTX",
        "number": 69,
        "title": "在AIStudio中执行训练任务报错",
        "body": "在AIStudio中，已经启动xuperchina，两个数据管理节点，3个数据存储节点，两个执行节点，已经上传训练文件，在\r\n提交训练任务的时候报错：\r\n\r\n```\r\n命令：\r\n!cd ~/PaddleDTX/localtestdatatmp/executor/node1 && requester-cli task publish -a \"linear-vl\" -l \"MEDV\" \\\r\n-k 716ae5ad5a374e54cc9a6770faa03213b03fc0fdeccd9319517383e2837cbacd -t \"train\" -n \"房价预测-训练任务v1\" -d \"用飞桨，划时代\" -p \"id,id\" \\\r\n--conf ./conf/config.toml \\\r\n-f \"6fadfc82-db15-46b7-ad70-3fef902f7b49,2372c2ec-c983-4a33-a0d6-9fb8708b86b8\" \\\r\n-e  '127.0.0.1:8011,127.0.0.1:8012'\r\n\r\n报错信息为：\r\nPublish task failed: failed to get executor node by node name: failed to QueryNativeContract: {\"code\":\"XDAT0004\",\"message\":\"node not found: rpc error: code = Unknown desc = Key not found\"}\r\n\r\n```\r\n看着好像获取节点名字就出问题了。\r\n",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "skywalk163",
        "created_at": "2022-03-27T14:42:55+00:00",
        "updated_at": "2022-03-28T01:16:48+00:00",
        "closed_at": "2022-03-28T01:16:48+00:00",
        "comments_count": [
            "skywalk163"
        ],
        "labels": []
    }
]