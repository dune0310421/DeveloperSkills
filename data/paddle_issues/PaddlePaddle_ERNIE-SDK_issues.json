[
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 40,
        "title": "README中关于提取语义向量部分，示例代码有误",
        "body": "#### 运行环境\r\n```text\r\nerniebot 0.3.1\r\npython 3.10\r\n```\r\n\r\n#### 运行代码\r\n```python\r\nimport erniebot\r\n\r\nerniebot.api_type = 'aistudio'\r\nerniebot.access_token = '<access-token-for-aistudio>'\r\n\r\nresponse = erniebot.Embedding.create(\r\n    model='ernie-text-embedding',\r\n    input=[\r\n        \"我是百度公司开发的人工智能语言模型，我的中文名是文心一言，英文名是ERNIE-Bot，可以协助您完成范围广泛的任务并提供有关各种主题的信息，比如回答问题，提供定义和解释及建议。如果您有任何问题，请随时向我提问。\",\r\n        \"2018年深圳市各区GDP\"\r\n        ])\r\n\r\nprint(response.get_result())\r\n```\r\n\r\n#### 报错信息\r\n```bash\r\n(py310) ➜  ✗ python test_erniebot.py\r\nTraceback (most recent call last):\r\n  File \"/Users/xxxx/opt/miniconda3/envs/py310/lib/python3.10/site-packages/erniebot/response.py\", line 120, in __getattr__\r\n    val = self.__dict[key]\r\nKeyError: 'get_result'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/xxxx/projects/Knowledge-QA-LLM/test_erniebot.py\", line 36, in <module>\r\n    print(response.get_result())\r\n  File \"/Users/xxxx/opt/miniconda3/envs/py310/lib/python3.10/site-packages/erniebot/response.py\", line 123, in __getattr__\r\n    raise AttributeError\r\nAttributeError\r\n```",
        "state": "closed",
        "user": "SWHL",
        "closed_by": "SWHL",
        "created_at": "2023-10-14T10:02:21+00:00",
        "updated_at": "2023-10-17T01:04:28+00:00",
        "closed_at": "2023-10-17T01:04:27+00:00",
        "comments_count": [
            "Bobholamovic",
            "SWHL"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 20,
        "title": "删减了Gradio示例的部分代码，在百度飞桨AI Studio成功部署，和我一样的小白可以尝试线上运行体验",
        "body": "我发现了一篇高质量的实训项目，使用免费算力即可一键运行，还能额外获取8小时免费GPU运行时长，快来Fork一下体验吧。\r\n文心SDK-Gradio示例：https://aistudio.baidu.com/projectdetail/6728883?sUid=4316224&shared=1&ts=1694703589320",
        "state": "open",
        "user": "madagastar",
        "closed_by": null,
        "created_at": "2023-09-14T15:00:37+00:00",
        "updated_at": "2024-02-28T06:13:20+00:00",
        "closed_at": null,
        "comments_count": [
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 62,
        "title": "我想知道怎么微调它。",
        "body": "如题，我真的很想知道，可以Lora微调吗，数据集格式是什么样。\r\n我打算在对话中调用文生图功能，这个可以训练吧。",
        "state": "closed",
        "user": "CQxiaocaimi",
        "closed_by": "sijunhe",
        "created_at": "2023-11-07T14:29:25+00:00",
        "updated_at": "2024-03-01T10:20:38+00:00",
        "closed_at": "2024-03-01T10:20:38+00:00",
        "comments_count": [
            "Bobholamovic",
            "CQxiaocaimi",
            "Bobholamovic",
            "CQxiaocaimi",
            "Bobholamovic",
            "CQxiaocaimi",
            "oukohou",
            "Bobholamovic",
            "itagan",
            "itagan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 14,
        "title": "流式支持",
        "body": "https://github.com/yuanjie-ai/ChatLLM/blob/master/LLMS.md#%E7%99%BE%E5%BA%A6%E6%96%87%E5%BF%83",
        "state": "closed",
        "user": "yuanjie-ai",
        "closed_by": "juncaipeng",
        "created_at": "2023-09-07T03:03:21+00:00",
        "updated_at": "2023-09-07T12:27:09+00:00",
        "closed_at": "2023-09-07T12:27:09+00:00",
        "comments_count": [
            "Bobholamovic",
            "yuanjie-ai",
            "Bobholamovic",
            "yuanjie-ai",
            "Bobholamovic"
        ],
        "labels": [
            "bug"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 48,
        "title": "在linux下无法安装SDK库的依赖",
        "body": "![2KZDA1AOS{C1V0Q3R0KSQ_8](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/99968055/0b3f7610-9885-45b7-9344-07703d8672c8)\r\n系统环境如图所示\r\n使用pip安装时没有对应的包",
        "state": "closed",
        "user": "fangfangssj",
        "closed_by": "fangfangssj",
        "created_at": "2023-10-28T08:32:28+00:00",
        "updated_at": "2024-12-18T07:54:53+00:00",
        "closed_at": "2024-12-18T07:54:53+00:00",
        "comments_count": [
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 38,
        "title": "调用文本转图像的demo出错",
        "body": "请教下，这个报错是啥原因？erniebot最新版本以及早点的版本都试过，一样的报错\r\npython 版本：3.9.7，windows下。\r\n示例程序：\r\n`import erniebot\r\n\r\nerniebot.api_type = \"yinian\"\r\nerniebot.access_token = \"***************\"\r\n\r\nresponse = erniebot.Image.create(model=\"ernie-vilg-v2\", prompt=\"请帮我画一只可爱的大猫咪\", width=512, height=512, version=\"v2\", image_num=1)\r\n\r\nprint(response)\r\n\r\nimg_url = response[\"data\"][\"sub_task_result_list\"][0][\"final_image_list\"][0][\"img_url\"]\r\nprint(img_url)\r\nprint(response)`\r\n\r\n运行时报错：\r\nException has occurred: HTTPRequestError\r\nUnexpected content type: 'text/html; charset=utf-8' \r\nResponse:\r\n  code: 200\r\n  body: '<!DOCTYPE html><html style=\"font-size:initial\"><head><meta charSet=\"utf-8\"/><meta name=\"baidu-site-verification\" content=\"code-G5HmRz7LQc\"/><meta name=\"description\" content=\"百度开发者中心是一个面向开发者的知识分享平台，专注于为开发者打造一个有温度的技术交流社区，开发者通过平台来分享知识、相互交流。\"/><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/><link rel=\"shortcut icon\" href=\"https://developer-resource.bj.bcebos.com/images/developerLogo.ico\"/><title>热门问题-技术问答-百度开发者中心-汇聚开放、助力、共赢</title><meta name=\"keywords\" content=\"DurOS,超级链,API商城,百度网盘开放平台,百度地图开放平台,百度开发者中心,论坛,社区\"/><meta name=\"next-head-count\" content=\"7\"/><link rel=\"preload\" href=\"https://bce.bdstatic.com/developer-server/online/_next/static/css/7ea58671f4422d96f12a.css\" ...",
        "state": "closed",
        "user": "kuaizilh",
        "closed_by": "Bobholamovic",
        "created_at": "2023-10-09T02:14:29+00:00",
        "updated_at": "2023-10-11T13:46:57+00:00",
        "closed_at": "2023-10-11T13:46:56+00:00",
        "comments_count": [
            "Bobholamovic",
            "kuaizilh",
            "Bobholamovic",
            "Bobholamovic",
            "kuaizilh",
            "Bobholamovic",
            "kuaizilh",
            "Bobholamovic",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 11,
        "title": "按教程写代码。报错",
        "body": "    chat_completion = erniebot.ChatCompletion.create(model=\"ernie-bot-3.5\", messages=[{\"role\": \"user\", \"content\": \"你好，请介绍下你自己\"}])\r\n\r\nprint(chat_completion.result)\r\n\r\n\r\n\r\n 19 # Create a chat completion\r\n---> 20 chat_completion = erniebot.ChatCompletion.create(model=\"ernie-bot-3.5\", messages=[{\"role\": \"user\", \"content\": \"你好，请介绍下你自己\"}])\r\n     22 print(chat_completion.result)\r\n\r\nFile /opt/conda/lib/python3.9/site-packages/erniebot/resources/abc/creatable.py:39, in Creatable.create(cls, **create_kwargs)\r\n     28 @classmethod\r\n     29 def create(cls,\r\n     30            **create_kwargs: Any) -> Union[EBResponse, Iterator[EBResponse]]:\r\n     31     \"\"\"Create a new resource.\r\n     32 \r\n     33     Args:\r\n   (...)\r\n     37         Response from the server.\r\n     38     \"\"\"\r\n---> 39     resource = cls.new_object()\r\n     40     return resource.create_resource(**create_kwargs)\r\n\r\nFile /opt/conda/lib/python3.9/site-packages/erniebot/resources/resource.py:68, in EBResource.new_object(cls, **kwargs)\r\n     66 @classmethod\r\n     67 def new_object(cls, **kwargs: Any) -> Self:\r\n---> 68     return cls(**kwargs)\r\n\r\nFile /opt/conda/lib/python3.9/site-packages/erniebot/resources/resource.py:55, in EBResource.__init__(self, **kwargs)\r\n     54 def __init__(self, **kwargs: Any) -> None:\r\n---> 55     super().__init__()\r\n     57     self._cfg = self._create_config_dict(**kwargs)\r\n     59     self.api_type = self._cfg['api_type']\r\n\r\nFile /opt/conda/lib/python3.9/typing.py:1083, in _no_init(self, *args, **kwargs)\r\n   1082 def _no_init(self, *args, **kwargs):\r\n-> 1083     raise TypeError('Protocols cannot be instantiated')\r\n\r\nTypeError: Protocols cannot be instantiated",
        "state": "open",
        "user": "D-Cyans",
        "closed_by": null,
        "created_at": "2023-09-04T06:55:26+00:00",
        "updated_at": "2023-09-07T08:53:32+00:00",
        "closed_at": null,
        "comments_count": [
            "Bobholamovic",
            "D-Cyans",
            "Bobholamovic",
            "D-Cyans",
            "Bobholamovic"
        ],
        "labels": [
            "question"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 25,
        "title": "图床",
        "body": null,
        "state": "closed",
        "user": "Bobholamovic",
        "closed_by": "Bobholamovic",
        "created_at": "2023-09-18T08:31:33+00:00",
        "updated_at": "2023-09-18T11:22:55+00:00",
        "closed_at": "2023-09-18T08:31:36+00:00",
        "comments_count": [
            "Bobholamovic",
            "Bobholamovic",
            "Bobholamovic",
            "Bobholamovic",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 44,
        "title": "有考虑出 js-sdk 么",
        "body": "如题。",
        "state": "open",
        "user": "zhengxs2018",
        "closed_by": null,
        "created_at": "2023-10-23T11:55:56+00:00",
        "updated_at": "2023-10-24T04:31:56+00:00",
        "closed_at": null,
        "comments_count": [
            "ZeyuChen",
            "zhengxs2018"
        ],
        "labels": [
            "enhancement"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 80,
        "title": "想咨询下输入最大长度只有4800吗？",
        "body": "<img width=\"1261\" alt=\"image\" src=\"https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/52858395/f5c08b39-5a62-402f-b6d4-d729e556661e\">\r\n",
        "state": "closed",
        "user": "longranger2",
        "closed_by": "longranger2",
        "created_at": "2023-11-19T04:05:24+00:00",
        "updated_at": "2023-11-20T15:47:20+00:00",
        "closed_at": "2023-11-20T15:47:20+00:00",
        "comments_count": [
            "Bobholamovic",
            "qqeip",
            "qqeip",
            "longranger2"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 87,
        "title": "可以在XAgent中调用ernie-bot-4吗？",
        "body": "如题，我知道是可以的，但是遇到一些问题，报错：KeyError: 'Could not automatically map ernie-bot-4 to a tokeniser. Please use tiktoken.get_encoding to explicitly get the tokeniser you expect.\r\n需要提供模型的分词器给XAgent以支持Context管理功能，但是我不知道该怎么做，不太懂代码。\r\nXAgent中的utils.py代码部分有：\r\nfrom enum import Enum, unique\r\nimport abc\r\nfrom colorama import Fore, Style\r\nimport json\r\nimport requests\r\nfrom dataclasses import dataclass, field\r\nfrom typing import List, Dict\r\nimport tiktoken\r\nfrom XAgent.config import CONFIG\r\n\r\nencoding = tiktoken.encoding_for_model(CONFIG.default_completion_kwargs['model'])\r\n\r\ndef get_token_nums(text:str)->int:\r\n    return len(encoding.encode(text))\r\n\r\ndef clip_text(text:str,max_tokens:int=None,clip_end=False)->str|int:\r\n    encoded = encoding.encode(text)\r\n    decoded = encoding.decode(encoded[:max_tokens] if clip_end else encoded[-max_tokens:])\r\n    if len(decoded) != len(text):\r\n        decoded = decoded + '`wrapped`' if clip_end else '`wrapped`' + decoded\r\n    return decoded, len(encoded)\r\n\r\n@unique\r\nclass LLMStatusCode(Enum):\r\n    SUCCESS = 0\r\n    ERROR = 1\r\n\r\n@unique\r\nclass ToolCallStatusCode(Enum):\r\n    TOOL_CALL_FAILED = -1\r\n    TOOL_CALL_SUCCESS = 0\r\n    FORMAT_ERROR = 1\r\n    HALLUCINATE_NAME = 2 \r\n    OTHER_ERROR = 3 \r\n    TIMEOUT_ERROR = 4\r\n    TIME_LIMIT_EXCEEDED = 5\r\n    SERVER_ERROR = 6\r\n是需要克隆ernie-bot-sdk？还是需要下载paddlepaddle，还是paddleNLP。我以为仅仅需要API就可以的。。。。",
        "state": "closed",
        "user": "CQxiaocaimi",
        "closed_by": "sijunhe",
        "created_at": "2023-11-23T06:59:19+00:00",
        "updated_at": "2024-03-01T10:21:20+00:00",
        "closed_at": "2024-03-01T10:21:20+00:00",
        "comments_count": [
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 97,
        "title": "ERNIE模型对message的轮次，role的限制",
        "body": "如下图所示，错误示例及[错误代码](https://cloud.baidu.com/doc/WENXINWORKSHOP/s/tlmyncueh)。ERNIE模型对message的轮次，role有一定的限制，但这些限制会导致模型无法在复杂场景下应用。\r\n\r\n![image](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/3197038/df9b9bf8-ebd7-4e9f-9412-eead7dec0809)\r\n\r\n![image](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/3197038/48b935be-1176-420c-8739-d44e3c6b13fc)\r\n\r\n这个限制在openAI里是没有的：\r\n![image](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/3197038/d2e82790-7268-401b-ac71-86945883db09)\r\n\r\n\r\n",
        "state": "open",
        "user": "thinkall",
        "closed_by": null,
        "created_at": "2023-11-28T03:42:52+00:00",
        "updated_at": "2023-12-04T03:03:30+00:00",
        "closed_at": null,
        "comments_count": [
            "Bobholamovic",
            "thinkall",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 96,
        "title": "erniebot config cause pytest KeyError: '__wrapped__'",
        "body": "运行 pytest doctest 时，erniebot config 模块会导致下面的报错。\r\n\r\n```python\r\n../../.pyenv/versions/3.9.11/lib/python3.9/doctest.py:939: in find\r\n    self._find(tests, obj, name, module, source_lines, globs, {})\r\n../../.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/_pytest/doctest.py:536: in _find\r\n    super()._find(  # type:ignore[misc]\r\n../../.pyenv/versions/3.9.11/lib/python3.9/doctest.py:998: in _find\r\n    if ((inspect.isroutine(inspect.unwrap(val))\r\n../../.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/_pytest/doctest.py:478: in _mock_aware_unwrap\r\n    return real_unwrap(func, stop=_is_mocked)\r\n../../.pyenv/versions/3.9.11/lib/python3.9/inspect.py:521: in unwrap\r\n    while _is_wrapper(func):\r\n../../.pyenv/versions/3.9.11/lib/python3.9/inspect.py:515: in _is_wrapper\r\n    return hasattr(f, '__wrapped__') and not stop(f)\r\n../../.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/erniebot/__init__.py:45: in __getattr__\r\n    return GlobalConfig().get_value(name)\r\n../../.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/erniebot/config.py:42: in get_value\r\n    cfg = self._cfg_dict[key]\r\nE   KeyError: '__wrapped__'\r\n============================================================== warnings summary ===============================================================\r\n../../.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/_pytest/doctest.py:482\r\n  /Users/kk/.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/_pytest/doctest.py:482: PytestWarning: Got KeyError('__wrapped__') when unwrapping <module 'erniebot' from '/Users/kk/.pyenv/versions/3.9.11/envs/easyai/lib/python3.9/site-packages/erniebot/__init__.py'>.  This is usually caused by a violation of Python's object protocol; see e.g. https://github.com/pytest-dev/pytest/issues/5080\r\n    warnings.warn(\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n\r\n```\r\n\r\nconfig.py 模块 `__getattr__` 函数需要将 `KeyError` 转成 `AttributeError` 再抛出，才能正确处理key不存在的情况。修复如下：\r\n\r\n```python\r\ndef __getattr__(name):\r\n    try:\r\n        return GlobalConfig().get_value(name)\r\n    except KeyError as ex:\r\n        raise AttributeError(name) from ex\r\n```",
        "state": "closed",
        "user": "guyskk",
        "closed_by": "guyskk",
        "created_at": "2023-11-27T15:32:48+00:00",
        "updated_at": "2023-12-14T13:38:00+00:00",
        "closed_at": "2023-12-14T13:38:00+00:00",
        "comments_count": [
            "sijunhe",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 107,
        "title": "APIError: 访问过于频繁，请稍候再试",
        "body": "调用 ErnieEmbeddings，提示 **“APIError: 访问过于频繁，请稍候再试”** ，不会解决！！！\r\n\r\n\r\n```bash\r\n---------------------------------------------------------------------------\r\nAPIError                                  Traceback (most recent call last)\r\nCell In[11], line 12\r\n      9 docs = text_splitter.split_documents(documents)\r\n     10 # print(len(docs))\r\n     11 # print(docs[0])\r\n---> 12 db = FAISS.from_documents(docs, embeddings)\r\n     13 db.save_local(faiss_name)\r\n\r\nFile /opt/conda/envs/python35-paddle120-env/lib/python3.10/site-packages/langchain_core/vectorstores.py:510, in VectorStore.from_documents(cls, documents, embedding, **kwargs)\r\n    508 texts = [d.page_content for d in documents]\r\n    509 metadatas = [d.metadata for d in documents]\r\n--> 510 return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\r\n\r\nFile /opt/conda/envs/python35-paddle120-env/lib/python3.10/site-packages/langchain/vectorstores/faiss.py:911, in FAISS.from_texts(cls, texts, embedding, metadatas, ids, **kwargs)\r\n    884 @classmethod\r\n    885 def from_texts(\r\n    886     cls,\r\n   (...)\r\n    891     **kwargs: Any,\r\n    892 ) -> FAISS:\r\n    893     \"\"\"Construct FAISS wrapper from raw documents.\r\n    894 \r\n    895     This is a user friendly interface that:\r\n   (...)\r\n    909             faiss = FAISS.from_texts(texts, embeddings)\r\n    910     \"\"\"\r\n--> 911     embeddings = embedding.embed_documents(texts)\r\n    912     return cls.__from(\r\n    913         texts,\r\n    914         embeddings,\r\n   (...)\r\n    918         **kwargs,\r\n    919     )\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot-agent/erniebot_agent/extensions/langchain/embeddings/ernie.py:68, in ErnieEmbeddings.embed_documents(self, texts)\r\n     66 lst = []\r\n     67 for chunk in text_in_chunks:\r\n---> 68     resp = self.client.create(_config_=self._get_auth_config(), input=chunk, model=self.model)\r\n     69     lst.extend([res[\"embedding\"] for res in resp[\"data\"]])\r\n     70 return lst\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/resources/abc/creatable.py:33, in Creatable.create(cls, **kwargs)\r\n     31 resource = cls.new_object(**config)\r\n     32 create_kwargs = kwargs\r\n---> 33 return resource.create_resource(**create_kwargs)\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/resources/abc/creatable.py:46, in Creatable.create_resource(self, **create_kwargs)\r\n     44 def create_resource(self, **create_kwargs: Any) -> Union[EBResponse, Iterator[EBResponse]]:\r\n     45     path, params, headers, files, stream, request_timeout = self._prepare_create(create_kwargs)\r\n---> 46     resp = self.request(\r\n     47         method=\"POST\",\r\n     48         path=path,\r\n     49         stream=stream,\r\n     50         params=params,\r\n     51         headers=headers,\r\n     52         files=files,\r\n     53         request_timeout=request_timeout,\r\n     54     )\r\n     55     # See https://github.com/python/mypy/issues/1533\r\n     56     resp = self._postprocess_create(resp)  # type: ignore\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/resources/resource.py:142, in EBResource.request(self, method, path, stream, params, headers, files, request_timeout)\r\n    129 @final\r\n    130 def request(\r\n    131     self,\r\n   (...)\r\n    139     request_timeout: Optional[float] = None,\r\n    140 ) -> Union[EBResponse, Iterator[EBResponse]]:\r\n    141     if self.timeout is None:\r\n--> 142         return self._request(\r\n    143             method=method,\r\n    144             path=path,\r\n    145             stream=stream,\r\n    146             params=params,\r\n    147             headers=headers,\r\n    148             files=files,\r\n    149             request_timeout=request_timeout,\r\n    150         )\r\n    151     else:\r\n    152         st_time = time.time()\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/resources/resource.py:363, in EBResource._request(self, method, path, stream, params, headers, files, request_timeout)\r\n    352 @final\r\n    353 def _request(\r\n    354     self,\r\n   (...)\r\n    361     request_timeout: Optional[float],\r\n    362 ) -> Union[EBResponse, Iterator[EBResponse]]:\r\n--> 363     resp = self._backend.request(\r\n    364         method,\r\n    365         path,\r\n    366         stream,\r\n    367         params=params,\r\n    368         headers=headers,\r\n    369         files=files,\r\n    370         request_timeout=request_timeout,\r\n    371     )\r\n    372     if stream:\r\n    373         if not isinstance(resp, Iterator):\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/backends/aistudio.py:82, in AIStudioBackend.request(self, method, path, stream, params, headers, files, request_timeout)\r\n     74 url, headers, data = self._client.prepare_request(\r\n     75     method,\r\n     76     url,\r\n   (...)\r\n     79     files=files,\r\n     80 )\r\n     81 headers = self._add_aistudio_fields_to_headers(headers)\r\n---> 82 return self._client.send_request(\r\n     83     method,\r\n     84     url,\r\n     85     stream,\r\n     86     data=data,\r\n     87     headers=headers,\r\n     88     files=files,\r\n     89     request_timeout=request_timeout,\r\n     90     base_url=self.base_url,\r\n     91 )\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/http_client.py:145, in EBClient.send_request(self, method, url, stream, data, headers, files, request_timeout, base_url)\r\n    124 def send_request(\r\n    125     self,\r\n    126     method: str,\r\n   (...)\r\n    133     base_url: Optional[str] = None,\r\n    134 ) -> Union[EBResponse, Iterator[EBResponse]]:\r\n    135     result = self.send_request_raw(\r\n    136         method.lower(),\r\n    137         url,\r\n   (...)\r\n    143         request_timeout=request_timeout,\r\n    144     )\r\n--> 145     resp, got_stream = self._interpret_response(result, stream)\r\n    146     if stream != got_stream:\r\n    147         logger.warning(\"Unexpected response: %s\", resp)\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/http_client.py:339, in EBClient._interpret_response(self, result, stream)\r\n    333     return (\r\n    334         self._interpret_stream_response(result.iter_lines(), result.status_code, result.headers),\r\n    335         True,\r\n    336     )\r\n    337 else:\r\n    338     return (\r\n--> 339         self._interpret_response_line(\r\n    340             result.content.decode(\"utf-8\"),\r\n    341             result.status_code,\r\n    342             result.headers,\r\n    343             stream=False,\r\n    344         ),\r\n    345         False,\r\n    346     )\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/http_client.py:442, in EBClient._interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    434     raise errors.HTTPRequestError(\r\n    435         f\"Status code is not {http.HTTPStatus.OK}.\",\r\n    436         rcode=resp.rcode,\r\n    437         rbody=str(resp.rbody),\r\n    438         rheaders=resp.rheaders,\r\n    439     )\r\n    441 if self._resp_handler is not None:\r\n--> 442     resp = self._resp_handler(resp)\r\n    443 return resp\r\n\r\nFile ~/ERNIE-Bot-SDK/erniebot/backends/aistudio.py:59, in AIStudioBackend.handle_response(self, resp)\r\n     57         raise errors.TryAgain(emsg, ecode=ecode)\r\n     58     else:\r\n---> 59         raise errors.APIError(emsg, ecode=ecode)\r\n     60 else:\r\n     61     return EBResponse(resp.rcode, resp.result, resp.rheaders)\r\n\r\n```\r\n",
        "state": "closed",
        "user": "livingbody",
        "closed_by": "sijunhe",
        "created_at": "2023-11-29T16:29:49+00:00",
        "updated_at": "2023-12-28T06:05:26+00:00",
        "closed_at": "2023-12-28T06:05:26+00:00",
        "comments_count": [
            "livingbody",
            "Bobholamovic",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 119,
        "title": "能有语音输出不",
        "body": "能有语音输出不，不要文字,\r\nTTS流语音输出",
        "state": "open",
        "user": "monkeycc",
        "closed_by": null,
        "created_at": "2023-12-02T07:54:40+00:00",
        "updated_at": "2024-02-28T06:13:11+00:00",
        "closed_at": null,
        "comments_count": [
            "shiyutang",
            "monkeycc",
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 102,
        "title": "暂无权限使用，请在 AI Studio 正确获取访问令牌(access tok",
        "body": "暂无权限使用，请在 AI Studio 正确获取访问令牌(access tok，查了还有tokens\r\n![image](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/5858920/133f85a7-5cf4-4095-bbec-8cd0bf0ba464)\r\n",
        "state": "closed",
        "user": "myboyliu",
        "closed_by": "sijunhe",
        "created_at": "2023-11-29T04:29:04+00:00",
        "updated_at": "2024-03-01T10:21:54+00:00",
        "closed_at": "2024-03-01T10:21:54+00:00",
        "comments_count": [
            "Bobholamovic",
            "itagan",
            "itagan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 112,
        "title": "function_calling 目录中没有 gradio_demo.py这个文件",
        "body": null,
        "state": "closed",
        "user": "liuzhengcai",
        "closed_by": "sijunhe",
        "created_at": "2023-11-30T06:13:49+00:00",
        "updated_at": "2023-12-04T05:32:18+00:00",
        "closed_at": "2023-12-04T05:32:18+00:00",
        "comments_count": [
            "shiyutang",
            "Bobholamovic",
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 108,
        "title": "建议 ErnieEmbeddings 支持 qianfan的ak/sk鉴权方式",
        "body": "# 目前 ErnieEmbeddings 仅支持aistudio模式，不支持 qianfan的ak/sk鉴权方式\r\n\r\n\r\n```python\r\nembeddings = ErnieEmbeddings(aistudio_access_token=aistudio_access_token, \r\n                             chunk_size=16,\r\n                             sleep_time=0.5)\r\n```",
        "state": "open",
        "user": "livingbody",
        "closed_by": null,
        "created_at": "2023-11-29T16:31:26+00:00",
        "updated_at": "2023-11-30T03:55:52+00:00",
        "closed_at": null,
        "comments_count": [
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 197,
        "title": "REAMDE鉴权相关链接全部失效",
        "body": "在develop的[README](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/blob/52d23f4196b89b98f892969c6acb0b3b69425160/README.md)中鉴权相关文档链接均已失效。\r\n",
        "state": "closed",
        "user": "SWHL",
        "closed_by": "sijunhe",
        "created_at": "2023-12-22T05:55:40+00:00",
        "updated_at": "2023-12-28T04:01:45+00:00",
        "closed_at": "2023-12-27T12:42:00+00:00",
        "comments_count": [
            "sijunhe",
            "SWHL",
            "Southpika",
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 307,
        "title": "自定义 Remote Tool，FastAPI 的web 服务",
        "body": "官方提供的代码：\r\n<img width=\"945\" alt=\"image\" src=\"https://github.com/PaddlePaddle/ERNIE-SDK/assets/44015698/c60cec96-082d-4841-9e87-eb8abb93b8ec\">\r\n服务可以起来，信息如下：\r\nINFO:     Started server process [66580]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://0.0.0.0:8020 (Press CTRL+C to quit)\r\nINFO:     127.0.0.1:49190 - \"GET /.well-known/openapi.yaml HTTP/1.1\" 200 OK\r\nINFO:     10.10.58.119:36570 - \"GET /.well-known/openapi.yaml HTTP/1.1\" 200 OK\r\n\r\n但是通过官方提供这段代码调用，失败了：\r\n<img width=\"965\" alt=\"image\" src=\"https://github.com/PaddlePaddle/ERNIE-SDK/assets/44015698/2e59c4d0-57d8-4abe-b226-f91c7332cc65\">\r\n失败信息如下：\r\n toolkit = RemoteToolkit.from_url(\"http://127.0.0.1:8020\")  # 必须存在：http://xxx.com/.well-known/openapi.yaml\r\n  File \"/home/envs/Paddle/lib/python3.8/site-packages/erniebot_agent/tools/remote_toolkit.py\", line 295, in from_url\r\n    toolkit = RemoteToolkit.from_openapi_file(\r\n  File \"/home/envs/Paddle/lib/python3.8/site-packages/erniebot_agent/tools/remote_toolkit.py\", line 229, in from_openapi_file\r\n    return cls.from_openapi_dict(\r\n  File \"/home/envs/Paddle/lib/python3.8/site-packages/erniebot_agent/tools/remote_toolkit.py\", line 175, in from_openapi_dict\r\n    info = EndpointInfo(**openapi_dict[\"info\"])\r\nTypeError: __init__() missing 1 required positional argument: 'description'\r\n\r\n",
        "state": "open",
        "user": "zongking123",
        "closed_by": null,
        "created_at": "2024-01-23T10:09:54+00:00",
        "updated_at": "2024-04-17T09:09:02+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 164,
        "title": "The access token provided is invalid or has expired",
        "body": "控制台的访问令牌：\r\n![image](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/16237619/a9383f58-8e60-4d6b-b9d9-646242711cbd)\r\n可以使用“aistudio”，但是不能使用“yinian”进行文生图，报错token失效：\r\n![error1-masked](https://github.com/PaddlePaddle/ERNIE-Bot-SDK/assets/16237619/362d27da-c03c-4486-824d-3d07bc98a700)\r\n请问怎么解决，谢谢",
        "state": "closed",
        "user": "oukohou",
        "closed_by": "oukohou",
        "created_at": "2023-12-18T02:33:13+00:00",
        "updated_at": "2023-12-18T06:11:54+00:00",
        "closed_at": "2023-12-18T06:11:53+00:00",
        "comments_count": [
            "oukohou",
            "oukohou"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 196,
        "title": "兼容openai的api格式",
        "body": "现如今，有很多应用框架都是基于openai的api格式开发的，能否提供一种方式，让它彻底兼容openai.api的格式？",
        "state": "closed",
        "user": "China-MYJSY",
        "closed_by": "China-MYJSY",
        "created_at": "2023-12-22T01:34:15+00:00",
        "updated_at": "2024-01-12T03:00:34+00:00",
        "closed_at": "2024-01-12T03:00:34+00:00",
        "comments_count": [
            "Bobholamovic",
            "China-MYJSY"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 207,
        "title": "[Enhancement] using jsonref to parse oepnapi.yaml",
        "body": "[jsonref](https://pypi.org/project/jsonref/)  lets you use a data structure with JSON reference objects, as if the references had been replaced with the referent data.\r\n\r\n```python\r\n>>> from pprint import pprint\r\n>>> import jsonref\r\n\r\n>>> # An example json document\r\n>>> json_str = \"\"\"{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}\"\"\"\r\n>>> data = jsonref.loads(json_str)\r\n>>> pprint(data)  # Reference is not evaluated until here\r\n{'real': [1, 2, 3, 4], 'ref': [1, 2, 3, 4]}\r\n```\r\n\r\n\r\nrefer to:\r\n\r\n* https://cookbook.openai.com/examples/function_calling_with_an_openapi_spec",
        "state": "closed",
        "user": "wj-Mcat",
        "closed_by": "wj-Mcat",
        "created_at": "2023-12-25T04:07:48+00:00",
        "updated_at": "2024-02-29T02:36:50+00:00",
        "closed_at": "2024-02-29T02:36:50+00:00",
        "comments_count": [
            "wj-Mcat"
        ],
        "labels": [
            "enhancement"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 256,
        "title": "请问支持tool_calls吗？",
        "body": " - 版本 0.4.0\r\n\r\n我看文档的Function Calling只有functions参数，请问支持tools参数吗？因为我想实现一句话中可以同时识别多个意图。\r\n例如`请打开灯，然后开始煮米饭`，这里面有两个意图。\r\n\r\n如果用functions，只返回一个json，而不是list。",
        "state": "closed",
        "user": "yeyupiaoling",
        "closed_by": "sijunhe",
        "created_at": "2024-01-02T08:26:56+00:00",
        "updated_at": "2024-01-14T08:39:32+00:00",
        "closed_at": "2024-01-14T08:39:32+00:00",
        "comments_count": [
            "Southpika",
            "Xtaiyang",
            "Xtaiyang",
            "Southpika",
            "Xtaiyang",
            "Xtaiyang",
            "Xtaiyang"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 310,
        "title": "官方提供的remote tool识别ocr报错",
        "body": "相关代码如下：\r\nfile_manager = GlobalFileManagerHandler().get()\r\n   file = await file_manager.create_file_from_path(\"road_sign.jpeg\")\r\n    response = await agent_all.run(\"帮我把图片中的第一个英语单词进行解释之后添加到单词本中\", files=[file])\r\n    print(response.text)\r\n    \r\n 报错信息如下：\r\n  function_call: \r\n{\r\n  \"name\": \"highacc-ocr/v1.8/OCR\",\r\n  \"thoughts\": \"图片格式错误，我需要重新调用OCR工具来提取图片中的文字。\",\r\n  \"arguments\": \"{\\\"image\\\":\\\"file-local-e8215a4a-ba5b-11ee-95be-ac1f6bb32462\\\",\\\"language_type\\\":\\\"auto_detect\\\"}\"\r\n} \r\nINFO - [Tool][Start] RemoteTool is about to start running with input:\r\n{\r\n  \"image\": \"file-local-e8215a4a-ba5b-11ee-95be-ac1f6bb32462\",\r\n  \"language_type\": \"auto_detect\"\r\n}\r\nINFO - [Tool][End] RemoteTool finished running with output:\r\n{\r\n  \"error_msg\": \"image format error\",\r\n  \"error_code\": 216201\r\n}\r\n更换了好几张图片都是报这个错误",
        "state": "open",
        "user": "zongking123",
        "closed_by": null,
        "created_at": "2024-01-24T01:59:48+00:00",
        "updated_at": "2024-05-15T11:19:11+00:00",
        "closed_at": null,
        "comments_count": [
            "ddz-mark"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 299,
        "title": "多代理模式目前实现了吗",
        "body": "目前单代理（任务为导向）已经实现\r\n多代理",
        "state": "open",
        "user": "Xtaiyang",
        "closed_by": null,
        "created_at": "2024-01-18T01:53:18+00:00",
        "updated_at": "2024-03-11T14:11:34+00:00",
        "closed_at": null,
        "comments_count": [
            "Bobholamovic",
            "Bobholamovic",
            "Xtaiyang",
            "Xtaiyang",
            "Bobholamovic",
            "Xtaiyang",
            "Xtaiyang",
            "Bobholamovic",
            "Xtaiyang"
        ],
        "labels": [
            "multi-agents"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 297,
        "title": "请问使用ERNIE Bot Agent开发，怎么设置system呢？",
        "body": "erniebot 使用function calling是无法设置system的，也不需要设置system。\r\n但是agent是需要设置的，否则限制非常多，我找了开发文档，没也找到相关的说明，希望能指导一下，谢谢！",
        "state": "closed",
        "user": "ailijian",
        "closed_by": "sijunhe",
        "created_at": "2024-01-17T08:32:31+00:00",
        "updated_at": "2024-03-04T13:28:57+00:00",
        "closed_at": "2024-03-04T13:28:57+00:00",
        "comments_count": [
            "sijunhe",
            "ailijian",
            "ailijian",
            "sijunhe",
            "ailijian",
            "Bobholamovic",
            "ailijian",
            "Bobholamovic",
            "ailijian",
            "ailijian",
            "Bobholamovic",
            "ailijian",
            "ailijian",
            "ailijian",
            "Southpika",
            "Xtaiyang",
            "ailijian",
            "ailijian",
            "Xtaiyang"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 320,
        "title": "请问能够接入其他的模型吗？",
        "body": "看docs上现在是只能用文心一言？能不能用本地的chatglm或者是openai的接口呀？\r\n\r\n感谢回复🙏目前的使用体验感真的很棒❤️～",
        "state": "open",
        "user": "caizhuoyue77",
        "closed_by": null,
        "created_at": "2024-02-23T02:30:08+00:00",
        "updated_at": "2024-02-28T06:13:02+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 316,
        "title": "请求对agents的文档和使用说明进行补全",
        "body": "根据代码可以观察到`erniebot-agent/src/erniebot_agent/agents/agent.py`已经支持了system的参数，因此Agent[class]具有角色扮演的基础功能。\r\n\r\n希望可以补全该模块的文档，并将`角色扮演`作为预制方法或样例。\r\n\r\n请求完成上述需求。",
        "state": "closed",
        "user": "Liyulingyue",
        "closed_by": "Liyulingyue",
        "created_at": "2024-02-15T11:16:36+00:00",
        "updated_at": "2024-02-24T08:01:08+00:00",
        "closed_at": "2024-02-24T08:00:44+00:00",
        "comments_count": [
            "Liyulingyue"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 318,
        "title": "请问我自定义的本地工具报这个错误咋回事    for field_name, field_info in cls.model_fields.items(): AttributeError: type object 'BihaiAddTimeIn' has no attribute 'model_fields'",
        "body": null,
        "state": "open",
        "user": "yst-one",
        "closed_by": null,
        "created_at": "2024-02-21T02:44:43+00:00",
        "updated_at": "2024-03-05T03:03:21+00:00",
        "closed_at": null,
        "comments_count": [
            "yst-one",
            "itagan",
            "itagan",
            "itagan",
            "Bobholamovic"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 323,
        "title": "自己写了一个RUST SDK，有大佬愿意看看嘛哈哈哈",
        "body": "[erniebot-rs](https://github.com/chenwanqq/erniebot-rs)，欢迎各位大佬批评指正哈，v0.1版本还很不完善，文档基本等于没有",
        "state": "closed",
        "user": "chenwanqq",
        "closed_by": "sijunhe",
        "created_at": "2024-02-26T10:05:02+00:00",
        "updated_at": "2024-04-17T09:08:16+00:00",
        "closed_at": "2024-04-17T09:08:16+00:00",
        "comments_count": [
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 317,
        "title": "有计划出rust的SDK么",
        "body": "RT，如果近期没计划的话我打算做一个练练手^^",
        "state": "closed",
        "user": "chenwanqq",
        "closed_by": "sijunhe",
        "created_at": "2024-02-18T06:52:54+00:00",
        "updated_at": "2024-04-17T09:08:39+00:00",
        "closed_at": "2024-04-17T09:08:39+00:00",
        "comments_count": [
            "itagan",
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 321,
        "title": "ernie-bot-agent 不支持在aistudio的notebook环境中运行",
        "body": "在AIStudio中无法通过\r\n```\r\n! export EB_AGENT_ACCESS_TOKEN=<aistudio-access-token>\r\n! export EB_AGENT_LOGGING_LEVEL=info\r\n```\r\n导入环境变量，从而增加ernie-bot-agent在aistudio上应用和部署的难度。",
        "state": "closed",
        "user": "Liyulingyue",
        "closed_by": "Liyulingyue",
        "created_at": "2024-02-24T08:14:18+00:00",
        "updated_at": "2024-03-09T12:53:57+00:00",
        "closed_at": "2024-03-09T12:53:57+00:00",
        "comments_count": [
            "itagan",
            "Bobholamovic",
            "Liyulingyue"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 326,
        "title": "运行question_bot.py报错请问是哪里出问题了，安装了langchain-community依然报错",
        "body": "E:\\jupyter\\ERNIE-SDK\\py311\\Scripts\\python.exe E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\question_bot.py --init=True --access-token xxxxxxxxxxxxxxxxxxxxxxxxxxxx \r\n  0%|          | 0/8 [00:00<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 85, in upsert_auth_token\r\n    auth_token = token_requestor()\r\n                 ^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 172, in _request_auth_token\r\n    raise RuntimeError(\"Invalid API key or secret key\")\r\nRuntimeError: Invalid API key or secret key\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\question_bot.py\", line 99, in <module>\r\n    agent = load_agent()\r\n            ^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\question_bot.py\", line 67, in load_agent\r\n    init_db(faiss_name, faiss_name_module, embeddings)\r\n  File \"E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\init_vector_db.py\", line 93, in init_db\r\n    content_doc = load_md_files_to_doc(md_file_path, chunk_size, chunk_overlap)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\init_vector_db.py\", line 75, in load_md_files_to_doc\r\n    splits[i].page_content = get_summary(splits[i].page_content)\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\erniebot-agent\\applications\\eb-agent-qa-bot\\init_vector_db.py\", line 24, in get_summary\r\n    summary = erniebot.ChatCompletion.create(\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\resources\\chat_completion.py\", line 261, in create\r\n    resp = resource.create_resource(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\resources\\abc\\creatable.py\", line 67, in create_resource\r\n    resp = self.request(\r\n           ^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\resources\\resource.py\", line 144, in request\r\n    for attempt in retrying:\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\tenacity\\__init__.py\", line 347, in __iter__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"C:\\Users\\ThinkPad\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\ThinkPad\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\resources\\resource.py\", line 146, in request\r\n    return self._request(\r\n           ^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\resources\\resource.py\", line 340, in _request\r\n    resp = self._backend.request(\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\backends\\bce.py\", line 71, in request\r\n    access_token = self._auth_manager.get_auth_token()\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 113, in get_auth_token\r\n    self._token = self._init_auth_token()\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 137, in _init_auth_token\r\n    token = self._update_cache(init=True)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 144, in _update_cache\r\n    token, upserted = self._cache.upsert_auth_token(\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"E:\\jupyter\\ERNIE-SDK\\py311\\Lib\\site-packages\\erniebot\\auth.py\", line 87, in upsert_auth_token\r\n    raise errors.TokenUpdateFailedError from e\r\nerniebot.errors.TokenUpdateFailedError\r\n\r\n",
        "state": "open",
        "user": "ATM006",
        "closed_by": null,
        "created_at": "2024-02-29T08:16:12+00:00",
        "updated_at": "2024-10-18T03:14:39+00:00",
        "closed_at": null,
        "comments_count": [
            "w5688414",
            "Southpika",
            "JRYan888",
            "JRYan888",
            "JRYan888"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 327,
        "title": "faiss升级faiss.swigfaiss.IndexFlatIP改为faiss.IndexFlatIP",
        "body": "文件erniebot/examples/quick_start/gradio_demo.py\r\n\r\n运行报错：module 'faiss' has no attribute 'swigfaiss'\r\n\r\n解决方法：因faiss升级，将原代码中的“faiss.swigfaiss.IndexFlatIP“修改为“faiss.IndexFlatIP“\r\n\r\n位置：\r\nhttps://github.com/PaddlePaddle/ERNIE-SDK/blob/157ca7ea006dc302f173f0919d4df4562c666590/erniebot/examples/quick_start/gradio_demo.py#L556\r\nhttps://github.com/PaddlePaddle/ERNIE-SDK/blob/157ca7ea006dc302f173f0919d4df4562c666590/erniebot/examples/quick_start/gradio_demo.py#L564\r\n\r\n",
        "state": "open",
        "user": "madagastar",
        "closed_by": null,
        "created_at": "2024-03-03T07:05:36+00:00",
        "updated_at": "2024-03-04T03:18:06+00:00",
        "closed_at": null,
        "comments_count": [
            "w5688414"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 325,
        "title": "function call出了正确结果了，但是最后一步模型回答的还是错误的答案。",
        "body": "按照官方的erniebot-agent/cookbook/local_tool.ipynb，改了一个天气查询的demo，明明function call出了正确的结果，但是最后一步模型回答的还是错误的答案。\r\n```Python\r\nfrom __future__ import annotations\r\nimport os\r\nos.environ[\"EB_AGENT_LOGGING_LEVEL\"] = \"DEBUG\"\r\nos.environ['EB_AGENT_ACCESS_TOKEN'] = 'xxx'\r\n\r\nimport asyncio\r\n\r\nfrom typing import Any, Dict, Type, List\r\nfrom pydantic import Field\r\nfrom erniebot_agent.tools.base import Tool\r\nfrom erniebot_agent.tools.schema import ToolParameterView\r\nfrom erniebot_agent.agents.function_agent import FunctionAgent\r\nfrom erniebot_agent.chat_models import ERNIEBot\r\nfrom erniebot_agent.memory import WholeMemory\r\n\r\nclass WeatherInput(ToolParameterView):\r\n    location: str = Field(description=\"要查询天气的地点\")\r\n\r\nclass WeatherOutput(ToolParameterView):\r\n    result: str = Field(description=\"查询天气的结果\")\r\n\r\nclass WeatherTool(Tool):\r\n    description: str = \"查询某地天气，返回结果\"\r\n    input_type: Type[ToolParameterView] = WeatherInput\r\n    ouptut_type: Type[ToolParameterView] = WeatherOutput\r\n\r\n    def __init__(self) -> None:\r\n        super().__init__()\r\n\r\n    async def __call__(self, location: str) -> Dict[str, Any]:\r\n        return location + '多云，25-30度'\r\n    \r\nagent = FunctionAgent(ERNIEBot(\"ernie-3.5\"), tools=[WeatherTool()], memory=WholeMemory())\r\nresult =  asyncio.run(agent.run(\"今天北京天气怎么样？\"))\r\nprint(result)\r\n```\r\n\r\n结果：\r\n![image](https://github.com/PaddlePaddle/ERNIE-SDK/assets/25955924/d370e712-c73a-4d8b-a6ca-fa3537663a80)\r\n",
        "state": "closed",
        "user": "illiterate",
        "closed_by": "illiterate",
        "created_at": "2024-02-29T01:11:12+00:00",
        "updated_at": "2024-02-29T07:52:13+00:00",
        "closed_at": "2024-02-29T07:36:19+00:00",
        "comments_count": [
            "itagan",
            "itagan",
            "itagan",
            "illiterate",
            "itagan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 333,
        "title": "请问一下运行retrieval_function_call的时候报错是什么原因",
        "body": "pydantic.errors.PydanticSchemaGenerationError: Unable to generate pydantic-core schema for <class 'pandas.core.frame.DataFrame'>. Set `arbitrary_types_allowed=True` in the model_config to ignore this error or implement `__get_pydantic_core_schema__` on your type to fully support it.\r\n\r\nIf you got this error by calling handler(<some type>) within `__get_pydantic_core_schema__` then you likely need to call `handler.generate_schema(<some type>)` since we do not call `__get_pydantic_core_schema__` on `<some type>` otherwise to avoid infinite recursion.\r\n\r\nFor further information visit https://errors.pydantic.dev/2.6/u/schema-for-unknown-type\r\n在配置完环境之后运行demo报出如上错误",
        "state": "open",
        "user": "Huanghongli",
        "closed_by": null,
        "created_at": "2024-03-14T11:01:55+00:00",
        "updated_at": "2024-03-14T11:01:59+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 328,
        "title": "多代理模式目前实现了吗，coze那个设计的不错",
        "body": null,
        "state": "open",
        "user": "Xtaiyang",
        "closed_by": null,
        "created_at": "2024-03-03T13:50:03+00:00",
        "updated_at": "2024-03-11T14:10:47+00:00",
        "closed_at": null,
        "comments_count": [
            "w5688414",
            "Xtaiyang"
        ],
        "labels": [
            "multi-agents"
        ]
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 330,
        "title": "星河社区的token（令牌）采用智能体包中的ERNIEBot访问时报[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)')（在Aistudio中调用是正常的）",
        "body": "星河社区的token（令牌）采用智能体包中的（from erniebot_agent.chat_models import ERNIEBot）ERNIEBot访问时报[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)')错误。而采用erniebot包时正常。\r\n代码：\r\nos.environ[\"EB_AGENT_LOGGING_LEVEL\"] = \"INFO\"  #  这个是日志包\r\nos.environ[\"EB_AGENT_ACCESS_TOKEN\"] = \"********\"  #  这是星河社区的token（令牌）输入你自己的token\r\nasync def func():\r\n    ai_message = await model.chat(messages=messages)\r\n    print(ai_message.content)\r\n\r\nasyncio.run(func())\r\n错误：\r\n/home/ernie/bin/python /home/ernie/erniebot/2.py\r\nTraceback (most recent call last):\r\n  File \"/home/ernie/lib/python3.10/site-packages/aiohttp/connector.py\", line 992, in _wrap_create_connection\r\n    return await self._loop.create_connection(*args, **kwargs)\r\n  File \"/home/zhougx/python3.10/lib/python3.10/asyncio/base_events.py\", line 1089, in create_connection\r\n    transport, protocol = await self._create_connection_transport(\r\n  File \"/home/zhougx/python3.10/lib/python3.10/asyncio/base_events.py\", line 1119, in _create_connection_transport\r\n    await waiter\r\n  File \"/home/zhougx/python3.10/lib/python3.10/asyncio/sslproto.py\", line 534, in data_received\r\n    ssldata, appdata = self._sslpipe.feed_ssldata(data)\r\n  File \"/home/zhougx/python3.10/lib/python3.10/asyncio/sslproto.py\", line 188, in feed_ssldata\r\n    self._sslobj.do_handshake()\r\n  File \"/home/zhougx/python3.10/lib/python3.10/ssl.py\", line 975, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)\r\n\r\n",
        "state": "closed",
        "user": "zhougx88",
        "closed_by": "zhougx88",
        "created_at": "2024-03-05T01:00:09+00:00",
        "updated_at": "2024-03-05T03:12:34+00:00",
        "closed_at": "2024-03-05T02:24:11+00:00",
        "comments_count": [
            "itagan",
            "itagan",
            "zhougx88",
            "itagan"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 332,
        "title": "智能体需要多次执法FC，而在文心返回结果中只有一个FC及其相关参数",
        "body": "智能体已经判断出需要执行两个FC:get_current_temperature,get_current_swing.（这需要我调用'get_current_temperature'和'get_current_swing'工具）\r\n但在返回结果中只有一个FC:\r\n    name': 'get_current_temperature', 'arguments': '{\"location\":\"深圳\",\"unit\":\"摄氏度\"}\r\n第二个需要执行的FC没有返回结果，应该如何处理？\r\n如下：\r\nenv3.10) [root@localhost Langchain-Chatchat-2.6]# /home/env3.10/bin/python3.10 /home/env3.10/Langchain-Chatchat-2.6/erniebot/agent_tool.py\r\n{'name': 'get_current_temperature', 'thoughts': \"用户想要知道深圳市今天的天气情况，以及是否适合进行户外活动。这需要我调用'get_current_temperature'和'get_current_swing'工具。任务拆解：[sub-task1: 使用[get_current_temperature]获取深圳市今天的温度，sub-task2: 使用[get_current_swing]获取深圳市今天的风力]。接下来需要调用[get_current_temperature]工具来获取深圳市今天的温度信息。\", 'arguments': '{\"location\":\"深圳\",\"unit\":\"摄氏度\"}'}\r\n2024-03-13 14:39:45,271 - _client.py[line:1013] - INFO: HTTP Request: GET http://10.74.1.13:8020/get_current_temperature1?city=%E5%8C%97%E4%BA%AC&unit=%E6%91%84%E6%B0%8F%E5%BA%A6 \"HTTP/1.1 200 OK\"\r\n根据您提供的信息，深圳市今天的温度为20摄氏度。这个温度对于户外活动来说是比较适宜的，但具体是否适合还需要考虑其他因素，如风力、降水等。如果您需要更详细的信息，建议查询当地的天气预报或咨询相关专业人士。希望这个回答能对您有所帮助。",
        "state": "closed",
        "user": "zhougx88",
        "closed_by": "zhougx88",
        "created_at": "2024-03-13T06:48:58+00:00",
        "updated_at": "2024-03-25T00:53:36+00:00",
        "closed_at": "2024-03-25T00:53:36+00:00",
        "comments_count": [
            "itagan",
            "itagan",
            "zhougx88"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 331,
        "title": "RemoteToolkit.from_url(\"http://127.0.0.1:8020\")读取openapi.yaml成功，但解析时报错。",
        "body": "通过FastAPI定义了接口，发布了.well-known/openapi.yaml。其中\r\n\"openapi\": \"3.1.0\",\r\n  \"info\": {\r\n    \"title\": \"FastAPI\",\r\n    \"version\": \"0.1.0\"\r\n  },\r\n......\r\n      \"HTTPValidationError\": {\r\n        \"properties\": {\r\n          \"detail\": {\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ValidationError\"\r\n            },\r\n            \"type\": \"array\",\r\n            \"title\": \"Detail\"\r\n          }\r\n        },\r\n        \"type\": \"object\",\r\n        \"title\": \"HTTPValidationError\"\r\n      },\r\n \r\n但通过RemoteToolkit.from_url(\"http://127.0.0.1:8020\") 时报以下错误：\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/ernie/erniebot/4.py\", line 114, in <module>\r\n    toolkit = RemoteToolkit.from_url(\"http://127.0.0.1:8020\")  # 必须存在：http://xxx.com/.well-known/openapi.yaml\r\n  File \"/home/ernie/lib/python3.10/site-packages/erniebot_agent/tools/remote_toolkit.py\", line 305, in from_url\r\n    toolkit = RemoteToolkit.from_openapi_dict(\r\n  File \"/home/ernie/lib/python3.10/site-packages/erniebot_agent/tools/remote_toolkit.py\", line 185, in from_openapi_dict\r\n    parameter_view = ToolParameterView.from_openapi_dict(schema)\r\n  File \"/home/ernie/lib/python3.10/site-packages/erniebot_agent/tools/schema.py\", line 252, in from_openapi_dict\r\n    field_type = python_type_from_json_type(field_dict)\r\n  File \"/home/ernie/lib/python3.10/site-packages/erniebot_agent/tools/schema.py\", line 108, in python_type_from_json_type\r\n    assert \"type\" in json_type_dict[\"items\"], \"<items> field must be defined when 'type'=array\"\r\nAssertionError: <items> field must be defined when 'type'=array",
        "state": "closed",
        "user": "zhougx88",
        "closed_by": "zhougx88",
        "created_at": "2024-03-08T00:56:20+00:00",
        "updated_at": "2024-03-13T05:39:50+00:00",
        "closed_at": "2024-03-13T05:39:50+00:00",
        "comments_count": [
            "itagan",
            "zhougx88",
            "zhougx88"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 334,
        "title": "字段命名拼写错误",
        "body": "ouptut_type ==》output_type\r\n![截屏2024-03-20 15 01 14](https://github.com/PaddlePaddle/ERNIE-SDK/assets/24641745/019b244f-572a-41ef-80cc-0f7ab6c0d8fb)\r\n",
        "state": "closed",
        "user": "itagan",
        "closed_by": "sijunhe",
        "created_at": "2024-03-20T07:01:45+00:00",
        "updated_at": "2024-04-14T07:48:55+00:00",
        "closed_at": "2024-04-14T07:48:55+00:00",
        "comments_count": [
            "sijunhe",
            "wj-Mcat"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 335,
        "title": "任务流模式有考虑加入么",
        "body": null,
        "state": "closed",
        "user": "Xtaiyang",
        "closed_by": "w5688414",
        "created_at": "2024-04-02T01:12:25+00:00",
        "updated_at": "2024-05-07T03:38:25+00:00",
        "closed_at": "2024-05-07T03:38:25+00:00",
        "comments_count": [
            "w5688414",
            "xiabo0816"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 342,
        "title": "APIError: token 已经用完毕，请充值后使用",
        "body": "![image](https://github.com/PaddlePaddle/ERNIE-SDK/assets/115516093/0316f64c-9f56-4888-90fd-6321ec063e43)\r\n创建对话返回错误accesstoken已用完，token是刚在aistudio创建的\r\n![image](https://github.com/PaddlePaddle/ERNIE-SDK/assets/115516093/8ec401f9-a6ed-4479-94e1-2ca918d21cae)\r\n",
        "state": "closed",
        "user": "SwordyLee",
        "closed_by": "w5688414",
        "created_at": "2024-04-23T07:48:29+00:00",
        "updated_at": "2024-04-25T04:10:41+00:00",
        "closed_at": "2024-04-25T04:10:41+00:00",
        "comments_count": [
            "w5688414",
            "SwordyLee"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 336,
        "title": "BadRequestError: prompt tokens too long",
        "body": "我在运行你们的llama-index于er\r\n![error](https://github.com/PaddlePaddle/ERNIE-SDK/assets/96066236/68e8abae-7bf8-4ca5-a1a9-19915f6d2f7c)\r\nniebot集成的时候，出现了如下错误，请问，这该怎么解决呢？",
        "state": "open",
        "user": "111wukong",
        "closed_by": null,
        "created_at": "2024-04-09T14:21:44+00:00",
        "updated_at": "2024-04-12T08:48:21+00:00",
        "closed_at": null,
        "comments_count": [
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 347,
        "title": "手动编排和半自动编排啥时候上呀，很期待",
        "body": null,
        "state": "open",
        "user": "zongking123",
        "closed_by": null,
        "created_at": "2024-05-07T10:01:34+00:00",
        "updated_at": "2024-05-07T10:01:39+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 351,
        "title": "流式返回时无法判定是否触发函数调用",
        "body": "我在使用进行流式返回的时候，设置stream=True，但是之后调用is_function_response会报错：AttributeError: 'generator' object has no attribute 'is_function_response'，而在在设置stream=False的时候是可以的，也是官方在文心一言社区提供的使用方式。请问流式返回的时候如何调用呢？\r\n\r\n```python\r\n        response_stream = erniebot.ChatCompletion.create(\r\n            model='ernie-3.5',\r\n            messages=messages,\r\n            stream=True,\r\n            functions=functions\r\n        )\r\n        if response_stream.is_function_response:\r\n```",
        "state": "open",
        "user": "AFAN-LIFE",
        "closed_by": null,
        "created_at": "2024-06-21T03:28:16+00:00",
        "updated_at": "2024-06-21T03:30:00+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 344,
        "title": "有了erniebot,又有了一个erniebot_agent，很多功能都很重复。目标是什么啊？",
        "body": "如题",
        "state": "open",
        "user": "pzchu",
        "closed_by": null,
        "created_at": "2024-04-26T06:48:54+00:00",
        "updated_at": "2024-04-26T07:41:30+00:00",
        "closed_at": null,
        "comments_count": [
            "itagan",
            "w5688414"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 346,
        "title": "是否支持多模态输入？例如图文混合输入",
        "body": null,
        "state": "open",
        "user": "Dimweaker",
        "closed_by": null,
        "created_at": "2024-05-01T15:07:48+00:00",
        "updated_at": "2024-05-07T03:09:28+00:00",
        "closed_at": null,
        "comments_count": [
            "w5688414",
            "sijunhe"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 359,
        "title": "文档markdown表格错误",
        "body": "![image](https://github.com/user-attachments/assets/8d67d7a1-cd98-4bef-81c8-5f35288f961a)\r\n表格展示错误",
        "state": "open",
        "user": "Minghao2812",
        "closed_by": null,
        "created_at": "2024-11-25T02:53:15+00:00",
        "updated_at": "2024-11-25T02:53:19+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 355,
        "title": "文生图的鉴权问题",
        "body": "文生图的api鉴权从哪里获得？\r\n我看[ernie-vilg](https://wenxin.baidu.com/ernie-vilg)早已关闭购买，\r\n这个功能无法使用了？",
        "state": "open",
        "user": "Dimweaker",
        "closed_by": null,
        "created_at": "2024-07-04T12:55:01+00:00",
        "updated_at": "2024-07-04T12:55:06+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 348,
        "title": "erniebot.errors.InvalidTokenError: 暂无权限使用，请在 AI Studio 正确获取访问令牌(access token)使用",
        "body": "erniebot.errors.InvalidTokenError: 暂无权限使用，请在 AI Studio 正确获取访问令牌(access token)使用",
        "state": "open",
        "user": "lucasjinreal",
        "closed_by": null,
        "created_at": "2024-05-26T10:42:15+00:00",
        "updated_at": "2024-05-27T00:37:34+00:00",
        "closed_at": null,
        "comments_count": [
            "w5688414"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/ERNIE-SDK",
        "number": 356,
        "title": "接入自制OCR新工具时出现的问题",
        "body": "我在使用贵平台时出现了pydantic的问题\r\n\r\n具体报错如下：\r\n`Traceback (most recent call last):\r\n  File \"/home/aistudio/deploy/llm_agent/api/common_tools/ocr_tools.py\", line 26, in <module>\r\n    class CustomOCRInput(ToolParameterView):\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_model_construction.py\", line 200, in __new__\r\n    set_model_fields(cls, bases, config_wrapper, types_namespace)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_model_construction.py\", line 469, in set_model_fields\r\n    fields, class_vars = collect_model_fields(cls, bases, config_wrapper, types_namespace, typevars_map=typevars_map)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_fields.py\", line 132, in collect_model_fields\r\n    type_hints = get_cls_type_hints_lenient(cls, types_namespace)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_typing_extra.py\", line 228, in get_cls_type_hints_lenient\r\n    hints[name] = eval_type_lenient(value, globalns, localns)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_typing_extra.py\", line 240, in eval_type_lenient\r\n    return eval_type_backport(value, globalns, localns)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_typing_extra.py\", line 264, in eval_type_backport\r\n    return typing._eval_type(  # type: ignore\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/typing.py\", line 327, in _eval_type\r\n    return t._evaluate(globalns, localns, recursive_guard)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/typing.py\", line 693, in _evaluate\r\n    type_ = _type_check(\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/typing.py\", line 176, in _type_check\r\n    raise TypeError(f\"{msg} Got {arg!r:.100}.\")\r\nTypeError: Forward references must evaluate to types. Got <module 'PIL.Image' from '/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/PIL/I.\r\n(/home/aistudio/external-libraries/agent) aistudio@jupyter-2163331-8134354:~/deploy/llm_agent/api/common_tools$ python ocr_tools.py \r\nTraceback (most recent call last):\r\n  File \"/home/aistudio/deploy/llm_agent/api/common_tools/ocr_tools.py\", line 7, in <module>\r\n    from erniebot_agent.file import LocalFile\r\nImportError: cannot import name 'LocalFile' from 'erniebot_agent.file' (/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/file/__init__.py)\r\n(/home/aistudio/external-libraries/agent) aistudio@jupyter-2163331-8134354:~/deploy/llm_agent/api/common_tools$ python ocr_tools.py \r\nTraceback (most recent call last):\r\n  File \"/home/aistudio/deploy/llm_agent/api/common_tools/ocr_tools.py\", line 26, in <module>\r\n    class CustomOCRInput(ToolParameterView):\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_model_construction.py\", line 205, in __new__\r\n    complete_model_class(\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_model_construction.py\", line 534, in complete_model_class\r\n    schema = cls.__get_pydantic_core_schema__(cls, handler)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/main.py\", line 642, in __get_pydantic_core_schema__\r\n    return handler(source)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_schema_generation_shared.py\", line 83, in __call__\r\n    schema = self._handler(source_type)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 512, in generate_schema\r\n    schema = self._generate_schema_inner(obj)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 784, in _generate_schema_inner\r\n    return self._model_schema(obj)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 591, in _model_schema\r\n    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 591, in <dictcomp>\r\n    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 947, in _generate_md_field_schema\r\n    common_field = self._common_field_schema(name, field_info, decorators)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 1134, in _common_field_schema\r\n    schema = self._apply_annotations(\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 1890, in _apply_annotations\r\n    schema = get_inner_schema(source_type)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_schema_generation_shared.py\", line 83, in __call__\r\n    schema = self._handler(source_type)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 1871, in inner_handler\r\n    schema = self._generate_schema_inner(obj)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 789, in _generate_schema_inner\r\n    return self.match_type(obj)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 875, in match_type\r\n    return self._unknown_type_schema(obj)\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py\", line 415, in _unknown_type_schema\r\n    raise PydanticSchemaGenerationError(\r\n**pydantic.errors.PydanticSchemaGenerationError: Unable to generate pydantic-core schema for <class 'erniebot_agent.file.local_file.LocalFile'>. Set `arbitrary_types_allowed=True` in the model_config to ignore this error or implement `__get_pydantic_core_schema__` on your type to fully support it.\r\n\r\nIf you got this error by calling handler(<some type>) within `__get_pydantic_core_schema__` then you likely need to call `handler.generate_schema(<some type>)` since we do not call `__get_pydantic_core_schema__` on `<some type>` otherwise to avoid infinite recursion.\r\n\r\nFor further information visit https://errors.pydantic.dev/2.8/u/schema-for-unknown-type**\r\n\r\n`\r\n\r\n相关代码如下（具体的token与部分request逻辑我已经隐藏，应该不会影响到问题的判断）\r\n`from __future__ import annotations\r\n\r\nimport requests\r\nfrom typing import Any, Dict, Type, List\r\nfrom pydantic import Field\r\nfrom erniebot_agent.tools.base import Tool\r\nfrom erniebot_agent.file.local_file import LocalFile\r\nfrom erniebot_agent.tools.schema import ToolParameterView\r\nfrom erniebot_agent.agents.function_agent import FunctionAgent\r\nfrom erniebot_agent.chat_models import ERNIEBot\r\nfrom erniebot_agent.memory import WholeMemory\r\nfrom erniebot_agent.file import GlobalFileManagerHandler\r\n\r\ndef image_path_to_base64(img):\r\n    #转换图像为base64\r\n    ...\r\n\r\n\r\nclass CustomOCRInput(ToolParameterView):\r\n    img: LocalFile = Field(description=\"待识别的图像\")\r\n\r\n\r\nclass CustomOCROutput(ToolParameterView):\r\n    result: str = Field(description=\"识别的文字结果\")\r\n\r\n\r\nclass CustomOCRTool(Tool):\r\n\r\n    description: str = \"识别输入图像中的文字\"\r\n    input_type: Type[ToolParameterView] = CustomOCRInput\r\n    output_type: Type[ToolParameterView] = CustomOCROutput\r\n\r\n    def __init__(self) -> None:\r\n        super().__init__()\r\n    \r\n    async def __call__(self, img: File) -> Dict[str, Any]:\r\n        url = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n        data = image_path_to_base64(img)\r\n\r\n        # 发送 POST 请求\r\n        data = {\r\n            'img': data,\r\n        }\r\n        response = requests.post(url, data=data)\r\n\r\n        # 处理返回的图像数据\r\n        result = \"\"\r\n        if response.status_code == 200:\r\n            reply = response.json()\r\n            for block in reply:\r\n                result += block[\"transcription\"]\r\n                result += \"\\n\"\r\n\r\n        return {\"result\": result}\r\n\r\n\r\nimport asyncio\r\nimport os\r\n\r\nasync def a():\r\n    os.environ[\"EB_AGENT_ACCESS_TOKEN\"] = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n    file_manager = GlobalFileManagerHandler().get()\r\n    agent = FunctionAgent(ERNIEBot(\"ernie-3.5\"), tools=[CustomOCRTool()], memory=WholeMemory())\r\n    data = await file_manager.create_file_from_path(file_path=\"/home/aistudio/deploy/llm_agent/api/img_12.jpg\", file_type=\"local\")\r\n    result = await agent.run(\"告诉我图片上讲了什么？\",  files=[data])\r\n    print(result)\r\n\r\nasyncio.run(a())\r\n\r\n`\r\n\r\n\r\n相关环境如下：\r\n平台为百度飞浆AI Studio提供的BML CodeLab配置（CPU）。\r\n\r\n下面是我个人的一点看法：\r\n从报错上来说，似乎是pydantic试图对LocalFile类做一点处理（我不是很了解这个），然后该类有一些方法没实现导致出现了问题？\r\n同时 GlobalFileManagerHandler().get()与FunctionAgent(ERNIEBot(\"ernie-3.5\"), tools=[CustomOCRTool()], memory=WholeMemory())\r\n去掉了原教程中的await参数，因为也会报错（判断为GlobalFileManagerHandler().get()用不到异步，去掉后没有报错）\r\n\r\n我尝试过声明arbitrary_types_allowed=True在相关的工具Input子类中\r\n但是没有效果，会出现新的错误：\r\n`\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/agents/agent.py\", line 195, in run_llm\r\n    raise e\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/agents/agent.py\", line 192, in run_llm\r\n    llm_resp = await self._run_llm(messages, **(llm_opts or {}))\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/agents/agent.py\", line 324, in _run_llm\r\n    functions = self._tool_manager.get_tool_schemas()\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/tool_manager.py\", line 73, in get_tool_schemas\r\n    return [tool.function_call_schema() for tool in self._tools.values()]\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/tool_manager.py\", line 73, in <listcomp>\r\n    return [tool.function_call_schema() for tool in self._tools.values()]\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/base.py\", line 80, in function_call_schema\r\n    inputs[\"parameters\"] = self.input_type.function_call_schema()\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/schema.py\", line 339, in function_call_schema\r\n    return cls.to_openapi_dict()\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/schema.py\", line 321, in to_openapi_dict\r\n    properties[field_name] = dict(get_field_openapi_property(field_info))\r\n  File \"/home/aistudio/external-libraries/agent/lib/python3.10/site-packages/erniebot_agent/tools/schema.py\", line 181, in get_field_openapi_property\r\n    elif field_info.annotation is not None and issubclass(field_info.annotation, Enum):\r\nTypeError: issubclass() arg 1 must be a class\r\n`\r\n上面的堆栈报错中个人认为比较重要的部分\r\n\r\n代码如下：\r\n`\r\nclass CustomOCRInput(ToolParameterView):\r\n    class Config:\r\n        arbitrary_types_allowed = True\r\n    local_file: 'erniebot_agent.file.local_file.LocalFile'\r\n    img: LocalFile = Field(description=\"待识别的图像\")\r\n`\r\n\r\n我已经黔驴技穷了，希望能够有大佬能够高抬贵手帮个忙，感谢感谢！！！\r\n\r\n\r\n",
        "state": "open",
        "user": "SatoriEye",
        "closed_by": null,
        "created_at": "2024-07-09T06:16:26+00:00",
        "updated_at": "2024-08-31T13:43:38+00:00",
        "closed_at": null,
        "comments_count": [
            "SatoriEye",
            "SatoriEye",
            "SatoriEye",
            "SatoriEye",
            "sijunhe",
            "SatoriEye",
            "lyyilin",
            "lyyilin",
            "SatoriEye",
            "lyyilin",
            "lyyilin",
            "SatoriEye"
        ],
        "labels": []
    }
]