[
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 37,
        "title": "【PaddlePaddle Hackathon 2】74、为 PaddleScience 增加中文文档",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务说明】\r\n\r\n- 任务标题：PaddleScience增加中文文档\r\n\r\n- 技术标签：中文文档，PaddleScience\r\n\r\n- 任务难度：中等\r\n\r\n- 详细描述：完善 [PaddleScience中文文档](https://github.com/PaddlePaddle/PaddleScience/tree/develop/docs)，视完成情况分别给予简单、中等、困难难度奖金。\r\n\r\n【提交流程】\r\n\r\n- 请将中文文档相关内容提交到 PaddleScience repo 的 [docs](https://github.com/PaddlePaddle/PaddleScience/tree/develop/docs) 目录\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/Science 目录\r\n- PaddleScience repo 的 [docs](https://github.com/PaddlePaddle/PaddleScience/tree/develop/docs) 目录里相关文件的中文内容\r\n\r\n【合入标准】\r\n\r\n- 中文文档语言通顺\r\n\r\n- 中文文档内容完整\r\n\r\n【技术要求】\r\n\r\n- 了解 readthedocs 网站\r\n\r\n- 熟悉中文文档撰写\r\n\r\n【参考内容】\r\n\r\n- [PaddleScience 英文文档](https://github.com/PaddlePaddle/PaddleScience/tree/develop/docs）\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发中对于上述任务有任何问题，欢迎在本 ISSUE 下留言交流。\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与。",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "rightpeach",
        "created_at": "2022-03-08T12:25:14+00:00",
        "updated_at": "2022-05-11T06:24:05+00:00",
        "closed_at": "2022-05-11T06:24:05+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 40,
        "title": "【PaddlePaddle Hackathon 2】71、为 PaddleScience 新增支持随机/Quasi采样法",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务内容】\r\n\r\n- 传统方法是画网格方法，而PINN方法无需画网格，可以用随机采样法，目前paddlescience需要支持随机/Quasi采样法\r\n\r\n- 任务难度：中等\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/Science 目录\r\n- PaddleScience : [https://paddlescience.paddlepaddle.org.cn](https://paddlescience.paddlepaddle.org.cn/examples/ldc2d.html)\r\n\r\n【技术要求】\r\n\r\n- 熟悉 Paddle，\r\n- 熟练掌握 Python，了解numpy等\r\n\r\n【参考内容】\r\n\r\n1. [https://github.com/maziarraissi/PINNs/blob/master/main/continuous_time_identification%20(Navier-Stokes)/NavierStokes.py](https://github.com/maziarraissi/PINNs/blob/master/main/continuous_time_identification (Navier-Stokes)/NavierStokes.py)\r\n\r\n2. Nvidia Modulus sample_boundary()/sample_interior()方法的实现，参考：https://developer.nvidia.com/modulus-downloads\r\n\r\n3. DeepXDE\r\n   \r\n   https://github.com/lululxvi/deepxde/blob/master/deepxde/geometry/timedomain.py\r\n   \r\n   https://github.com/lululxvi/deepxde/blob/master/deepxde/geometry/sampler.py\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发中对于上述任务有任何问题，欢迎在本 ISSUE 下留言交流。\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与\r\n",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-03-08T12:28:26+00:00",
        "updated_at": "2023-06-01T02:46:11+00:00",
        "closed_at": "2023-06-01T02:46:11+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 41,
        "title": "【PaddlePaddle Hackathon 2】PaddleScience 任务合集 ",
        "body": "大家好，非常高兴地告诉大家，第二期 [PaddlePaddle Hackathon](https://www.paddlepaddle.org.cn/PaddlePaddleHackathon-2022-3?fr=PaddleScience) 开始了。PaddlePaddle Hackathon 是面向全球开发者的深度学习领域编程活动，鼓励开发者了解与参与 PaddlePaddle 开源社区。本次共有四大专区：PaddlePaddle、Paddle Family、Paddle Friends、Paddle Eval，共计100+个任务供大家认领。详细信息可以参考 [PaddlePaddle Hackathon 说明](https://www.paddlepaddle.org.cn/contributionguide?docPath=hackathon_cn)。大家是否已经迫不及待了呢~\r\n\r\n本 ISSUE 是 Paddle Family 专区 PaddleScience 方向任务合集。具体任务列表如下：\r\n\r\n| 序号 | 难度 | 任务 ISSUE |\r\n| ---- | ---- | --- | \r\n| 71 | ⭐️⭐️  | [为 PaddleScience 新增支持随机/Quasi采样法](https://github.com/PaddlePaddle/PaddleScience/issues/40) |\r\n| 72 | ⭐️⭐️⭐️ | [增加符号化PDE的实现](https://github.com/PaddlePaddle/PaddleScience/issues/39) |\r\n| 73 | ⭐️⭐️ | [增加（2D/3D/ND ）Geometry](https://github.com/PaddlePaddle/PaddleScience/issues/38) |\r\n| 74 | ⭐️⭐️ | [为 PaddleScience 增加中文文档](https://github.com/PaddlePaddle/PaddleScience/issues/37) |\r\n\r\n若想要认领本次活动任务，请至 [PaddlePaddle Hackathon 2 Pinned ISSUE](https://github.com/PaddlePaddle/Paddle/issues/40234) 完成任务 ISSUE 认领。\r\n\r\n活动官网：[PaddlePaddle Hackathon 2](https://www.paddlepaddle.org.cn/PaddlePaddleHackathon-2022-3?fr=PaddleScience)\r\n",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-03-08T12:48:41+00:00",
        "updated_at": "2023-06-01T02:46:05+00:00",
        "closed_at": "2023-06-01T02:46:05+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 46,
        "title": "the example",
        "body": "I run the lid driven cavity flow example, but it solves the steady NS equation? it cannot solve the pressure?",
        "state": "closed",
        "user": "q769855234",
        "closed_by": "xingfeng01",
        "created_at": "2022-04-01T15:05:30+00:00",
        "updated_at": "2022-07-18T13:51:54+00:00",
        "closed_at": "2022-07-18T13:51:54+00:00",
        "comments_count": [
            "xingfeng01"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 39,
        "title": "【PaddlePaddle Hackathon 2】72、增加符号化PDE的实现",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务内容】\r\n\r\n1. 增加符号化PDE的实现\r\n\r\n- 任务难度：困难\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/Science 目录\r\n- 项目 PR\r\n\r\n【技术要求】\r\n\r\n- 熟悉 Paddle\r\n- 熟练掌握 Python\r\n\r\n【参考内容】\r\n\r\n1. 不限于Nvidia Modulus符号化的实现方法（sympy库），参考https://developer.nvidia.com/modulus-downloads\r\n\r\n【答疑交流】\r\n\r\n- 如果在开发中对于上述任务有任何问题，欢迎在本 ISSUE 下留言交流。\r\n- 对于开发中的共性问题，在活动过程中，会定期组织答疑，请大家关注官网&QQ群的通知，及时参与",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-03-08T12:27:40+00:00",
        "updated_at": "2023-06-01T02:46:12+00:00",
        "closed_at": "2023-06-01T02:46:12+00:00",
        "comments_count": [
            "TCChenlong"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 45,
        "title": "Import error,why?",
        "body": "I cannot run the example bacause there is no jacobian, hessian etc. in paddle.autograd",
        "state": "closed",
        "user": "q769855234",
        "closed_by": "xingfeng01",
        "created_at": "2022-04-01T01:34:10+00:00",
        "updated_at": "2022-07-18T13:51:43+00:00",
        "closed_at": "2022-07-18T13:51:43+00:00",
        "comments_count": [
            "xingfeng01",
            "q769855234"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 27,
        "title": "复现PINNs论文",
        "body": "基于PaddleScience复现Raissi, Maziar, Paris Perdikaris, and George E. Karniadakis. Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations. Journal of Computational Physics 378 (2019): 686-707.中所有代码，原始仓库链接为：https://github.com/maziarraissi/PINNs",
        "state": "closed",
        "user": "wuxinwang1997",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-02-24T06:32:24+00:00",
        "updated_at": "2023-06-01T02:46:28+00:00",
        "closed_at": "2023-06-01T02:46:28+00:00",
        "comments_count": [
            "xingfeng01",
            "wuxinwang1997",
            "tongxin",
            "wuxinwang1997",
            "tongxin",
            "wuxinwang1997",
            "tongxin",
            "wuxinwang1997",
            "tongxin",
            "wuxinwang1997",
            "tongxin"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 38,
        "title": "【PaddlePaddle Hackathon 2】73、增加（2D/3D/ND ）Geometry",
        "body": "（此 ISSUE 为 PaddlePaddle Hackathon 第二期活动的任务 ISSUE，更多详见 [【PaddlePaddle Hackathon 第二期】任务总览](https://github.com/PaddlePaddle/Paddle/issues/40234)）\r\n\r\n【任务内容】\r\n\r\n- 任务描述：\r\n\r\n1. 增加Circle类型Geometry（2D/3D）\r\n\r\n2. 增加 （2D/3D/ND ）Geometry\r\n\r\n- 任务难度：中等\r\n\r\n【提交内容】\r\n\r\n- 设计文档，并提 PR 至 [PaddlePaddle/community](https://github.com/PaddlePaddle/community) 的 rfcs/Science 目录\r\n- 项目 PR\r\n\r\n【技术要求】\r\n\r\n- 熟悉 Paddle\r\n- 熟练掌握 Python\r\n\r\n【参考内容】\r\n\r\n1. 不限Nvidia Modulus 几何方法的实现，参考：https://developer.nvidia.com/modulus-downloads\r\n\r\n2. DeepXDE参考：https://github.com/lululxvi/deepxde/tree/master/deepxde/geometry",
        "state": "closed",
        "user": "TCChenlong",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-03-08T12:26:52+00:00",
        "updated_at": "2023-06-01T02:46:13+00:00",
        "closed_at": "2023-06-01T02:46:13+00:00",
        "comments_count": [
            "jkrescue"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 7,
        "title": "例子中的ldc2d训练时报None",
        "body": "飞桨develop版本，使用这条命令安装的：\r\n!python -m pip install paddlepaddle-gpu==0.0.0.post101 -f https://www.paddlepaddle.org.cn/whl/linux/gpu/develop.html -q \r\n\r\n为了方便，把例子的文件都调到PaddleScience根目录了。\r\n\r\n\r\npython3.7 ldc2d.py\r\n\r\n训练到第14步就开始报None了 \r\n\r\n`epoch/num_epoch:  11 / 30000 batch/num_batch:  1 / 1 loss:  5.3213344 eq_loss:  5.321335 bc_loss:  5.810151\r\nepoch/num_epoch:  12 / 30000 batch/num_batch:  1 / 1 loss:  2.547808 eq_loss:  2.547808 bc_loss:  1.0792037\r\nepoch/num_epoch:  13 / 30000 batch/num_batch:  1 / 1 loss:  0.30164686 eq_loss:  0.30164686 bc_loss:  3.5897355\r\nepoch/num_epoch:  14 / 30000 batch/num_batch:  1 / 1 loss:  nan eq_loss:  nan bc_loss:  nan\r\nepoch/num_epoch:  15 / 30000 batch/num_batch:  1 / 1 loss:  nan eq_loss:  nan bc_loss:  nan`\r\n\r\n其它两个例子都ok的。",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "skywalk163",
        "created_at": "2021-12-15T08:04:50+00:00",
        "updated_at": "2021-12-26T13:25:34+00:00",
        "closed_at": "2021-12-26T13:25:34+00:00",
        "comments_count": [
            "levi131",
            "skywalk163"
        ],
        "labels": [
            "bug"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 47,
        "title": "关于中文文档的补充提交",
        "body": "请问，对于提交的PaddleScience的中文文档的文件类型有何要求？\r\nrst文件可以吗",
        "state": "closed",
        "user": "Fly-Pluche",
        "closed_by": "Fly-Pluche",
        "created_at": "2022-04-03T15:07:57+00:00",
        "updated_at": "2022-06-30T07:51:13+00:00",
        "closed_at": "2022-06-30T07:51:13+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 56,
        "title": "部分算子无法计算高阶梯度？",
        "body": "由于需要使用paddle高阶梯度的计算，但是直接采用grad不行，代码如下：\r\n\r\nimport paddle\r\nfrom paddle.autograd import jacobian, hessian\r\nfrom paddle.fluid.dygraph import grad\r\n\r\n\r\nx = paddle.ones(shape=[1], dtype='float32') * 2 * np.pi\r\nx.stop_gradient = False\r\n\r\ny = paddle.sin(x)\r\ndydx = grad(y, x, create_graph=True, retain_graph=True)[0]\r\nprint(dydx)\r\ndy2dx2 = grad(dydx, x, create_graph=True, retain_graph=True)[0]\r\nprint(dy2dx2)\r\n\r\n\r\n报错如下：\r\n\r\nTraceback (most recent call last):\r\n  File \"F:\\pycharm\\Physics-AI\\PINN_InverseDesign_paddle\\run_paddle_grad.py\", line 13, in <module>\r\n    dydx = grad(y, x, create_graph=True, retain_graph=True)[0]\r\n  File \"<decorator-gen-49>\", line 2, in grad\r\n  File \"D:\\Programs\\Anaconda\\lib\\site-packages\\paddle\\fluid\\wrapped_decorator.py\", line 25, in __impl__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"D:\\Programs\\Anaconda\\lib\\site-packages\\paddle\\fluid\\framework.py\", line 434, in __impl__\r\n    return func(*args, **kwargs)\r\n  File \"D:\\Programs\\Anaconda\\lib\\site-packages\\paddle\\fluid\\dygraph\\base.py\", line 661, in grad\r\n    return core.dygraph_partial_grad(\r\nRuntimeError: (NotFound) The Op sin_grad doesn't have any grad op. If you don't intend calculating higher order derivatives, please set `create_graph` to False.\r\n  [Hint: double_grad_node should not be null.] (at ..\\paddle\\fluid\\imperative\\partial_grad_engine.cc:923)\r\n",
        "state": "closed",
        "user": "tianshao1992",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-05-18T06:02:41+00:00",
        "updated_at": "2023-06-01T02:45:57+00:00",
        "closed_at": "2023-06-01T02:45:57+00:00",
        "comments_count": [
            "tianshao1992",
            "xingfeng01",
            "tianshao1992",
            "levi131",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 90,
        "title": "关于LBFGS优化器",
        "body": "1. 目前Paddle中添加了minimize_lbfgs函数，虽然可以实现使用 L-BFGS 方法求解可微函数的最小值，但是在训练中不太好用。个人感觉目前实现的功能只是一个high-level的优化函数，这个函数和scipy的minimize(method=’BFGS’)很像，但要用在训练过程中还比较麻烦。我目前用Paddle和PyTorch实现了一个相同的PINNs网络（地址：https://github.com/X4Science/CNN_DSMC/tree/main/Vlasov-PINN），其中需要用到 L-BFGS优化器，使用Paddle我不太清楚怎么在训练中应用minimize_lbfgs，而PyTorch的比较方便，直接可以这样用\r\n![image](https://user-images.githubusercontent.com/41515753/174547179-2c0c8315-3997-4049-b03f-4e39b68719b6.png)\r\n而我看到minimize_lbfgs这个函数中没有网络参数和学习率这两个变量，所以我感觉如果想做成PyTorch这样是不是还需要进一步封装一下？\r\n2. 另外，PyTorch中的L-BFGS优化器在我这个问题的应用中也存在一定的问题，PINNs论文原文显示的是这样的loss曲线\r\n![image](https://user-images.githubusercontent.com/41515753/174549372-991930b0-6edf-4162-8145-004bbabd9f57.png)\r\n但是我应用后的loss曲线是这样的（使用Adam训练10000步，再用LBFGS训练8000步）\r\n![loss](https://user-images.githubusercontent.com/41515753/174549426-3a0eed75-8966-4794-999c-e46bef73d74d.png)\r\nL-BFGS训练过程中的loss是跳动的，且最终收敛的loss值还要高于Adam训练的loss值，但最后反演的方程参数精度提高了。",
        "state": "closed",
        "user": "zbyandmoon",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-06-20T07:40:32+00:00",
        "updated_at": "2023-06-01T02:45:52+00:00",
        "closed_at": "2023-06-01T02:45:51+00:00",
        "comments_count": [
            "Liu-xiandong",
            "zbyandmoon",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 92,
        "title": "paddle里LBFGS的使用问题",
        "body": "采用paddle.incubate.optimizer.functional.minimize_lbfgs进行网络训练时，需要提供一个函数func和参数，采用二阶优化方式进行训练的时候，看文档的意思是，损失函数得定义成网络参数的表达式，这怎么实现？\r\n\r\n我这里采用闭包定义了一个损失函数，但是训练的时候会报错，请问这个具体该怎么实现？\r\n\r\ndef train_batch(x, model, loss, weight, optimizer, log_loss, lambda_Re, lambda_Im,):\r\noptimizer.clear_grad()\r\ndef clouser():\r\nh = model.feature_transform(x)\r\nw = model(h)\r\nf, t = model.output_transform(x, w)\r\nres = model.pde_(x, h, w, t, f)\r\nopt = model.optim_func(f[:4800], f[:4800])\r\neqs_loss1 = loss(res[4800:, :1], paddle.zeros_like(res[4800:, :1], dtype='float32'))\r\neqs_loss2 = loss(res[4800:, 1:], paddle.zeros_like(res[4800:, 1:], dtype='float32'))\r\nlag_loss1 = paddle.mean(res[4800:, :1] * lambda_Re)\r\nlag_loss2 = paddle.mean(res[4800:, 1:] * lambda_Im)\r\nopt_loss = loss(opt, paddle.zeros_like(opt, dtype='float32'))\r\nloss_batch = weight[0] * eqs_loss1 + weight[1] * eqs_loss2 + weight[2] * lag_loss1 + weight[3] * lag_loss2 + weight[4] * opt_loss\r\nlog_loss.append([eqs_loss1.item(), eqs_loss2.item(), lag_loss1.item(), lag_loss2.item(), opt_loss.item(),\r\nloss_batch.item()])\r\nreturn loss_batch\r\nloss_batch =clouser()\r\nloss_batch.backward()\r\npaddle.incubate.optimizer.functional.minimize_lbfgs(clouser, model.parameters())\r\n\r\n**报错为：**\r\npaddle.incubate.optimizer.functional.minimize_lbfgs(clouser, model.parameters()[0][0])\r\nTraceback (most recent call last):\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3444, in run_code\r\nexec(code_obj, self.user_global_ns, self.user_ns)\r\nFile \"\", line 1, in\r\npaddle.incubate.optimizer.functional.minimize_lbfgs(clouser, model.parameters()[0][0])\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\paddle\\incubate\\optimizer\\functional\\lbfgs.py\", line 110, in minimize_lbfgs\r\nvalue, g1 = _value_and_gradient(objective_func, xk)\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\paddle\\incubate\\optimizer\\functional\\utils.py\", line 92, in _value_and_gradient\r\nvalue = f(x)\r\nTypeError: clouser() takes 0 positional arguments but 1 was given\r\n\r\n**在pytorch里面采用LBFGS算法可以跑通这个模型，pytorch里的优化器模型定义为：**\r\nOptimizer2 = torch.optim.LBFGS(Net_model.parameters(), lr=0.1, max_iter=2)\r\n\r\n**训练代码为：**\r\ndef train_batch(inn_var, model, loss, weight, optimizer, log_loss, lambda_Re, lambda_Im,):\r\n    def closure():\r\n        optimizer.zero_grad()\r\n        out_var = model(model.feature_transform(inn_var))\r\n        out_var = model.output_transform(inn_var, out_var)\r\n        res = model.pde(inn_var, out_var)\r\n        opt = model.optim_func(inn_var[:4800], out_var[:4800])、\r\n        eqs_loss1 = loss(res[4800:, :1], torch.zeros_like(res[4800:, :1], dtype=torch.float32))\r\n        eqs_loss2 = loss(res[4800:, 1:], torch.zeros_like(res[4800:, 1:], dtype=torch.float32))\r\n        lag_loss1 = torch.mean(res[4800:, :1] * lambda_Re)\r\n        lag_loss2 = torch.mean(res[4800:, 1:] * lambda_Im)\r\n        opt_loss = loss(opt, torch.zeros_like(opt, dtype=torch.float32))\r\n        loss_batch = weight[0] * eqs_loss1 + weight[1] * eqs_loss2 + weight[2] * lag_loss1 + weight[3] * lag_loss2 + \\\r\n                     weight[4] * opt_loss\r\n        loss_batch.backward()\r\n        log_loss.append([eqs_loss1.item(), eqs_loss2.item(), lag_loss1.item(), lag_loss2.item(), opt_loss.item(),\r\n                         loss_batch.item()])\r\n        return loss_batch\r\n    optimizer.step(closure)",
        "state": "closed",
        "user": "whaleprince",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-06-21T11:25:33+00:00",
        "updated_at": "2023-06-01T02:45:41+00:00",
        "closed_at": "2023-06-01T02:45:41+00:00",
        "comments_count": [
            "Liu-xiandong",
            "yunbattle1994",
            "Liu-xiandong",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 175,
        "title": "no attribute 'prim_enabled'",
        "body": "运行example中例子时，报错：\r\n<img width=\"629\" alt=\"1660824395393\" src=\"https://user-images.githubusercontent.com/33193686/185390720-63d8574c-68b9-424c-85d3-aff7177f2944.png\">\r\n\r\npaddle版本为gpu-2.3.1 cuda版本为11.2\r\n",
        "state": "closed",
        "user": "910allen",
        "closed_by": "910allen",
        "created_at": "2022-08-18T12:07:18+00:00",
        "updated_at": "2022-08-19T04:04:18+00:00",
        "closed_at": "2022-08-19T04:04:18+00:00",
        "comments_count": [
            "910allen"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 174,
        "title": "Set up a simulation domain with holes",
        "body": "Is there a way to set up a simulation domain, for example a rectangle, with some holes? Thanks!",
        "state": "closed",
        "user": "ma-sadeghi",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-08-16T15:09:17+00:00",
        "updated_at": "2023-06-01T02:45:37+00:00",
        "closed_at": "2023-06-01T02:45:37+00:00",
        "comments_count": [
            "Liu-xiandong",
            "ma-sadeghi",
            "Liu-xiandong",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 99,
        "title": "关于例子存盘文件新旧版本不同的情况",
        "body": "大约是去年的版本，存盘文件为rslt_u.vtp ，我从网上找了一段代码，可以本机打开，并旋转查看等。文件头：<?xml version=\"1.0\"?>\r\n\r\n发现现在飞桨科学包的新版本，存盘文件为：output-t1-p0.vtu ，文件头 <?xml version=\"1.0\"?> ，<AppendedData encoding=\"raw\">。 再用原来那块代码，打开就是空白，看不到东西。\r\n\r\n下载了ParaView，上述两种格式都能打开，但是看不到东西，还不如直接用代码打开rslt_u.vtp可以直接看出来。\r\n\r\n请教下，存盘文件用ParaView打开后，怎么才能看到呢？ \r\n\r\n附：\r\n相关项目地址：https://aistudio.baidu.com/aistudio/projectdetail/4278591?contributionType=1\r\n存盘文件是几个例子训练生成的。\r\n打开存盘文件的小代码，在“问题和技巧”部分。\r\n\r\n\r\n\r\n\r\n\r\n",
        "state": "closed",
        "user": "skywalk163",
        "closed_by": "xingfeng01",
        "created_at": "2022-06-29T03:39:50+00:00",
        "updated_at": "2022-07-18T13:51:21+00:00",
        "closed_at": "2022-07-18T13:51:21+00:00",
        "comments_count": [
            "xingfeng01",
            "skywalk163"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 187,
        "title": "报错'paddle.incubate.autograd' has no attribute 'prim_enabled'， 有没有poisson 1d 方程训练的demo看一下",
        "body": "``` python \r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nimport paddlescience as psci\r\nimport paddle\r\nfrom deepxde.backend import tf\r\n\r\n\r\nref_rhs = lambda x: -np.sin(x) - 2 * np.sin(2 * x) - 3 * np.sin(3 * x) - 4 * np.sin(4 * x) - 8 * np.sin(8 * x)\r\nref_sol = lambda x: x + 1 / 8 * np.sin(8 * x) + 1 / np.sin(1 * x) + 1 / 2 * np.sin(2 * x) + 1 / 3 * np.sin(3 * x) + 1 / 4 * np.sin(4 * x)\r\n\r\ngeom = psci.geometry.Rectangular(origin = (0.), extent = (np.pi))\r\ngeom.add_boundary(name = 'left', criteria = lambda x: x==0.)\r\ngeom.add_boundary(name = 'right', criteria = lambda x : x==np.pi)\r\ngeom_disc = geom.discretize(npoints = 100, method = 'uniform')\r\n\r\npde = psci.pde.Poisson(dim = 2, rhs = ref_rhs, weight=1.0)\r\nbc_left = psci.bc.Dirichlet(name = 'u', rhs = lambda x: ref_sol)\r\nbc_right = psci.bc.Dirichlet(name = 'u', rhs = lambda x: ref_sol)\r\npde.add_bc('left', bc_left)\r\npde.add_bc('right', bc_right)\r\npde_disc = pde.discretize(geo_disc = geom_disc)\r\n\r\nnet = psci.network.FCNet(num_ins = 1, num_outs = 1, num_layers = 3, hidden_size = 20, activation = 'tanh')\r\n\r\nloss = psci.loss.L2(p=2)\r\nalgo = psci.algorithm.PINNs(net = net, loss = loss)\r\nopt = psci.optimizer.Adam(learning_rate = 0.001, parameters = net.parameters())\r\nsolver = psci.solver.Solver(pde = pde, algo = algo, opt = opt)\r\nsolution = solver.solve(num_epoch = 20000)\r\n```\r\n\r\n提示报错 \r\n```python \r\n Input In [62] in <cell line: 4>\r\n    solver = psci.solver.Solver(pde = pde, algo = algo, opt = opt)\r\n\r\n  File D:\\Anaconda3\\lib\\site-packages\\paddlescience-1.0.0b0-py3.9.egg\\paddlescience\\solver\\solver.py:109 in __init__\r\n    self.__init_static()\r\n\r\n  File D:\\Anaconda3\\lib\\site-packages\\paddlescience-1.0.0b0-py3.9.egg\\paddlescience\\solver\\solver.py:375 in __init_static\r\n    if config.prim_enabled() and self.pde.geometry.user is not None:\r\n\r\n  File D:\\Anaconda3\\lib\\site-packages\\paddlescience-1.0.0b0-py3.9.egg\\paddlescience\\config.py:93 in prim_enabled\r\n    return paddle.incubate.autograd.prim_enabled()\r\n\r\nAttributeError: module 'paddle.incubate.autograd' has no attribute 'prim_enabled'\r\n``` \r\n\r\n这个怎么解决？ 有没有poisson 1d 方程训练的demo看一下，2d在电脑能训练，1d就挺多地方报错，不知道是哪里的问题，有demo就好了解一点\r\n\r\n\r\n",
        "state": "closed",
        "user": "hugo511",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-09-02T11:43:04+00:00",
        "updated_at": "2023-06-01T02:45:28+00:00",
        "closed_at": "2023-06-01T02:45:28+00:00",
        "comments_count": [
            "hugo511",
            "xingfeng01",
            "hugo511",
            "xingfeng01",
            "hugo511",
            "xingfeng01",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 186,
        "title": "提示报错'Poisson' object has no attribute 'bc' 什么意思，怎么解决",
        "body": "```python \r\n\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nimport paddlescience as psci\r\nimport paddle\r\nfrom deepxde.backend import tf\r\n\r\ndef PINNpde(x, y):\r\n    dy_xx = paddle.incubate.autograd.Hessian(y, x)\r\n    f = 8 * tf.sin(8 * x)\r\n    for i in range(1, 5):\r\n        f += i * tf.sin(i * x)\r\n    return -dy_xx - f\r\n\r\n\r\ndef func(x):\r\n    sol = x + 1 / 8 * np.sin(8 * x)\r\n    for i in range(1, 5):\r\n        sol += 1 / i * np.sin(i * x)\r\n    return sol\r\n\r\ngeom = psci.geometry.Rectangular(origin = (0.), extent = (np.pi))\r\ngeom.add_boundary(name = 'left', criteria = lambda x: x==0.)\r\ngeom.add_boundary(name = 'right', criteria = lambda x : x==np.pi)\r\ngeom_disc = geom.discretize(npoints = 100, method = 'uniform')\r\n\r\npde = psci.pde.Poisson(dim = 1, rhs = lambda x, y: PINNpde(x, y), weight=1.0)\r\nbc_left = psci.bc.Dirichlet(name = 'u', rhs = lambda x: func(x))\r\nbc_right = psci.bc.Dirichlet(name = 'u', rhs = lambda x: func(x))\r\npde.add_bc('left', bc_left)\r\npde.add_bc('right', bc_right)\r\npde_disc = pde.discretize(geo_disc = geom_disc)\r\n\r\nnet = psci.network.FCNet(num_ins = 1, num_outs = 1, num_layers = 3, hidden_size = 20, activation = 'tanh')\r\n\r\n\r\ndef output_transform(x, y):\r\n    return x + tf.math.tanh(x) * tf.math.tanh(np.pi - x) * y\r\nnet.apply_output_transform(output_transform)\r\n\r\nloss = psci.loss.L2(p=2)\r\nalgo = psci.algorithm.PINNs(net = net, loss = loss)\r\nopt = psci.optimizer.Adam(learning_rate = 0.001, parameters = net.parameters())\r\nsolver =psci.solver.Solver(pde = pde, algo = algo, opt = opt)\r\nsolution = solver.solve(num_epoch = 20000)\r\n```\r\n\r\n提示报错 ：\r\n```python \r\nTraceback (most recent call last):\r\n\r\n  Input In [119] in <cell line: 1>\r\n    pde.add_bc('left', bc_left)\r\n\r\n  File D:\\Anaconda3\\lib\\site-packages\\paddlescience-1.0.0b0-py3.9.egg\\paddlescience\\pde\\pde_base.py:151 in add_bc\r\n    self.set_bc(name, *args)\r\n\r\n  File D:\\Anaconda3\\lib\\site-packages\\paddlescience-1.0.0b0-py3.9.egg\\paddlescience\\pde\\pde_base.py:143 in set_bc\r\n    if name not in self.bc:\r\n\r\nAttributeError: 'Poisson' object has no attribute 'bc'\r\n```\r\n\r\n想用PINN解poisson 1d equation，提示报错，不太理解这个报错什么意思，怎么解决，后面的\r\n```python\r\nsolution = solver.solve(num_epoch = 20000)\r\n```\r\n也不确定是否能顺利运行。\r\n\r\n\r\n",
        "state": "closed",
        "user": "hugo511",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-09-01T01:26:26+00:00",
        "updated_at": "2023-06-01T02:45:34+00:00",
        "closed_at": "2023-06-01T02:45:33+00:00",
        "comments_count": [
            "xingfeng01",
            "hugo511",
            "xingfeng01",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 204,
        "title": "loss with weight",
        "body": "请问如果我想探究损失函数内的不同权重对结果的影响，应该如何修改loss呢",
        "state": "closed",
        "user": "Traiiicy",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-11-23T13:41:43+00:00",
        "updated_at": "2023-06-01T02:45:14+00:00",
        "closed_at": "2023-06-01T02:45:13+00:00",
        "comments_count": [
            "Jkzhangyb",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 206,
        "title": "requirements.txt中pyvista和pysdf在windows环境无法安装",
        "body": "您好，paddlescience库中的pysdf和pyvista无法在windows环境下安装（外部同学用的是pycharm）有啥解决方法呢？",
        "state": "closed",
        "user": "Jkzhangyb",
        "closed_by": "HydrogenSulfate",
        "created_at": "2022-12-15T06:16:56+00:00",
        "updated_at": "2023-06-01T02:45:07+00:00",
        "closed_at": "2023-06-01T02:45:07+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 215,
        "title": "关于后处理visu_vtk模块的建议",
        "body": "目前在生成vtk数据文件时，会对每类数据（如压力、速度各分量）自动设置字典索引名，目前default为u1,u2,u3,u4,u5.\r\n```\r\n def __concatenate_data(outs, nt=None):\r\n\r\n    vtkname = [\"u1\", \"u2\", \"u3\", \"u4\", \"u5\"]\r\n\r\n    data = dict()\r\n\r\n    # to numpy\r\n    npouts = list()\r\n    if nt is None:\r\n        nouts = len(outs)\r\n    else:\r\n        nouts = len(outs) - 1\r\n\r\n    for i in range(nouts):\r\n        out = outs[i]\r\n        if type(out) != np.ndarray:\r\n            npouts.append(out.numpy())  # tenor to array\r\n        else:\r\n            npouts.append(out)\r\n\r\n    # concatenate data\r\n    ndata = outs[0].shape[1]\r\n    data_vtk = list()\r\n\r\n    n = 1 if (nt is None) else nt\r\n    for t in range(n):\r\n        for i in range(ndata):\r\n            x = list()\r\n            for out in npouts:\r\n                s = int(len(out) / n) * t\r\n                e = int(len(out) / n) * (t + 1)\r\n                x.append(out[s:e, i])\r\n            data[vtkname[i]] = np.concatenate(x, axis=0)\r\n\r\n        data_vtk.append(data)\r\n\r\n    return data_vtk\r\n```\r\n\r\n以ldc_2dsteady算例为例，输出的结果包括速度两分量以及压力，在paraview中查看时变量名为u1,u2,u3，非常不方便区分物理量。\r\n![image](https://github.com/Beschutzer/temp/blob/main/label_name.png)\r\n\r\n建议将输出物理量的字典索引作为函数变量或类成员，方便用户直接调用。\r\n",
        "state": "closed",
        "user": "WangHanwei1996",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-02-09T04:02:09+00:00",
        "updated_at": "2023-06-01T02:44:58+00:00",
        "closed_at": "2023-06-01T02:44:58+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 234,
        "title": "测试高阶微分算子方板算例报错AttributeError: 'TensorShape' object has no attribute 'count'",
        "body": "  File \"C:/Users/UESTC_SAA/Desktop/High Order/elasticPlate_Rectangular.py\", line 298, in <module>\r\n    loss_weights=[1, 100, 100, 100, 100, 100, 100, 100, 100])\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\utils\\internal.py\", line 22, in wrapper\r\n    result = f(*args, **kwargs)\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\model.py\", line 131, in compile\r\n    self._compile_tensorflow_compat_v1(lr, loss_fn, decay, loss_weights)\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\model.py\", line 176, in _compile_tensorflow_compat_v1\r\n    losses_train = losses(self.data.losses_train)\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\model.py\", line 163, in losses\r\n    self.net.targets, self.net.outputs, loss_fn, self.net.inputs, self\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\data\\data.py\", line 13, in losses_train\r\n    return self.losses(targets, outputs, loss_fn, inputs, model, aux=aux)\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\deepxde\\data\\pde.py\", line 127, in losses\r\n    f = self.pde(inputs, outputs_pde)\r\n  File \"C:/Users/UESTC_SAA/Desktop/High Order/elasticPlate_Rectangular.py\", line 228, in pde\r\n    result = paddle.concat(x=[y, Mx, My, Mxy, Qx, Qy], axis=-1)\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\paddle\\tensor\\manipulation.py\", line 1120, in concat\r\n    input = [t for t in input if t.shape.count(0) == 0]\r\n  File \"C:\\Users\\UESTC_SAA\\anaconda3\\envs\\DeepXDE\\lib\\site-packages\\paddle\\tensor\\manipulation.py\", line 1120, in <listcomp>\r\n    input = [t for t in input if t.shape.count(0) == 0]\r\nAttributeError: 'TensorShape' object has no attribute 'count'\r\n\r\n进程已结束,退出代码1\r\n\r\n\r\n\r\ninput = x\r\n    if in_dygraph_mode():\r\n        if isinstance(axis, Variable):\r\n            axis = axis.item(0)\r\n        if not isinstance(input, Variable):\r\n            **input = [t for t in input if t.shape.count(0) == 0]**\r\n        return _C_ops.concat(input, axis)\r\n请问这是什么问题",
        "state": "closed",
        "user": "Liueotile3333",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-03-25T08:10:50+00:00",
        "updated_at": "2023-05-26T11:36:16+00:00",
        "closed_at": "2023-05-26T11:36:16+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Liueotile3333",
            "Liueotile3333",
            "HydrogenSulfate",
            "Liueotile3333",
            "HydrogenSulfate",
            "Liueotile3333",
            "Liueotile3333",
            "HydrogenSulfate",
            "Liueotile3333",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 294,
        "title": "is:issue is:open 构建PINN教程中的A tutorial on Darcy flow in porous medium和A tutorial on Lid Driven Cavity flow的文件中的图片有缺失导致意义不明",
        "body": "文档中的图片有确实无法看到图片中的信息",
        "state": "closed",
        "user": "cheercao",
        "closed_by": "cheercao",
        "created_at": "2023-05-11T03:10:01+00:00",
        "updated_at": "2023-05-17T05:15:55+00:00",
        "closed_at": "2023-05-17T05:15:55+00:00",
        "comments_count": [
            "Ishaan-Chandak",
            "HydrogenSulfate",
            "HydrogenSulfate",
            "HydrogenSulfate",
            "Ishaan-Chandak"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 219,
        "title": "添加Neumann边界条件后报错",
        "body": "根据LDC算例改的管道流动在设定Neumann边界条件时报错\r\n```\r\n# set bounday condition\r\nweight_down_u = lambda x, y: 1.0 - 10.0 * abs(x)\r\nbc_top_u = psci.bc.Neumann('u')\r\nbc_top_v = psci.bc.Neumann('v')\r\nbc_top_p = psci.bc.Dirichlet('p', rhs=0)\r\nbc_down_u = psci.bc.Dirichlet('u', rhs=0.0)\r\nbc_down_v = psci.bc.Dirichlet('v', rhs=1.0, weight=weight_down_u)\r\nbc_left_u = psci.bc.Dirichlet('u', rhs=0.0)\r\nbc_left_v = psci.bc.Dirichlet('v', rhs=0.0)\r\nbc_right_u = psci.bc.Dirichlet('u', rhs=0.0)\r\nbc_right_v = psci.bc.Dirichlet('v', rhs=0.0)\r\n\r\n#add bounday condition\r\npde.add_bc(\"top\", bc_top_u, bc_top_v, bc_top_p)\r\npde.add_bc(\"down\", bc_down_u, bc_down_v)\r\npde.add_bc(\"left\", bc_left_u, bc_left_v)\r\npde.add_bc(\"right\", bc_right_u, bc_right_v)\r\n\r\n```\r\nDynamic Graph is Currently in Use.\r\n/usr/lib/python3/dist-packages/apport/report.py:13: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n  import fnmatch, glob, traceback, errno, sys, atexit, imp, stat\r\nTraceback (most recent call last):\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/ldc2d_steady_train.py\", line 116, in <module>\r\n    solution = solver.solve(num_epoch=epochs)\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/solver/solver.py\", line 123, in solve\r\n    return self.__solve_dynamic(num_epoch, bs, checkpoint_freq,\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/solver/solver.py\", line 219, in __solve_dynamic\r\n    loss, outs, loss_details = self.algo.compute(\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/algorithm/algorithm_pinns.py\", line 596, in compute\r\n    loss_b, out_b = self.loss.bc_loss(\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/loss/loss_L2.py\", line 142, in bc_loss\r\n    rst = cmploss.compute_formula(formula, input, input_attr, labels,\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/loss/loss_base.py\", line 88, in compute_formula\r\n    rst += self.__compute_formula_item(formula, input, input_attr,\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/loss/loss_base.py\", line 121, in __compute_formula_item\r\n    rst = rst * self.__compute_formula_der(item, input, normal, params)\r\n  File \"/home/dell/PaddleScience/dell-2.4.1/projects/tube(boundary)/paddlescience/loss/loss_base.py\", line 180, in __compute_formula_der\r\n    if normal.ndim == 1:\r\nAttributeError: 'NoneType' object has no attribute 'ndim'\r\n\r\n\r\n",
        "state": "closed",
        "user": "WangHanwei1996",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-02-20T09:04:01+00:00",
        "updated_at": "2023-06-01T02:44:47+00:00",
        "closed_at": "2023-06-01T02:44:47+00:00",
        "comments_count": [
            "WangHanwei1996",
            "WangHanwei1996",
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 367,
        "title": "能否离线安装或者提供容器",
        "body": "### 请提出你的问题 Please ask your question\n\n想在校园内网的服务器上安装paddlescience，有没有不用联网安装的方法",
        "state": "closed",
        "user": "jiangzhangze",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-06-12T06:36:31+00:00",
        "updated_at": "2023-07-24T05:40:14+00:00",
        "closed_at": "2023-07-24T05:40:14+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 293,
        "title": "2d圆柱绕流算例中用于训练的dataset的疑问",
        "body": "datasets中的各个csv文件分别代表什么呢？\r\ndomain_cylinder.csv，domain_inlet.csv，domain_outlet.csv分别包含了圆柱上，入口，出口的网格和初始时刻数据，domain_train.csv包含整个流场的初始时刻.这样理解对吗？\r\n在initial文件夹中的csv，又是哪个时刻的流场数据呢，因为我看ic0.1.csv中的速度和压力不是初始时刻的数据。\r\n在probes文件夹中的50个probes文件又是代表的什么.\r\n\r\n如果我想自己生成数据，放到脚本中直接来训练，也应该按照这个格式吗",
        "state": "closed",
        "user": "jiangzhangze",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-05-10T05:59:51+00:00",
        "updated_at": "2023-08-09T08:17:48+00:00",
        "closed_at": "2023-05-22T10:17:03+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate",
            "jiangzhangze",
            "HydrogenSulfate",
            "cheercao",
            "HydrogenSulfate",
            "cheercao",
            "HydrogenSulfate",
            "jiangzhangze",
            "HydrogenSulfate",
            "jiangzhangze",
            "HydrogenSulfate",
            "HydrogenSulfate",
            "jiangzhangze",
            "HydrogenSulfate",
            "cheercao",
            "HydrogenSulfate",
            "cheercao",
            "HydrogenSulfate",
            "cheercao",
            "cheercao",
            "HydrogenSulfate",
            "cheercao",
            "jiangzhangze",
            "HydrogenSulfate",
            "jiangzhangze"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 354,
        "title": "PaddleScience安装问题",
        "body": "### 问题描述 Issue Description\n\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/77435112/24cda387-2b4e-4bba-9e99-d1ba0a87d5a2)\r\n按照飞桨官网的安装PaddleScience后，在Python控制台中验证安装是否成功，出现以上错误。想请问是什么原因？\r\n\r\n\n\n### 版本&环境信息 Version & Environment Information\n\n****************************************\r\nPaddle version: develop \r\nPaddle With CUDA: N/A\r\n\r\nOS: Windows 10\r\nGCC version: N/A\r\nClang version: N/A\r\nCMake version: N/A\r\nLibc version: N/A\r\nPython version: 3.7.2\r\n\r\nGPU:GTX1060\r\nCUDA version: 10.2.89\r\ncuDNN version: 7.6.5\r\nNvidia driver version: N/A\r\nNvidia driver List: N/A\r\n****************************************",
        "state": "closed",
        "user": "luofeng1999",
        "closed_by": "luofeng1999",
        "created_at": "2023-05-30T16:43:38+00:00",
        "updated_at": "2023-05-31T11:20:02+00:00",
        "closed_at": "2023-05-31T11:20:01+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "luofeng1999"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 372,
        "title": "【热身打卡】PaddleScience 热身打卡活动",
        "body": "## 热身打卡活动简介\r\n\r\n在 PaddleScience 套件二次开发中，安装并运行 PaddleScience 是一个重要环节。本次热身打卡活动，要求参与者通过 github 拉取 [PaddlePaddle/PaddleScience](https://github.com/PaddlePaddle/PaddleScience/tree/develop) 仓库代码，并参考 [安装与使用](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/) 完成 PaddleScience 安装、验证，并跑通 [二维薄板弯曲变形案例](https://github.com/PaddlePaddle/PaddleScience/blob/develop/examples/quick_start/case3.py)，截图跑通成功后的界面，参考如下格式向 [ext_paddle_oss@baidu.com](mailto:ext_paddle_oss@baidu.com) 发送邮件，打卡成功后即可获得精美的飞桨周边礼品！\r\n\r\n注：本次热身打卡活动对硬件没有要求！CPU/GPU 均可，赶快行动起来吧~ 我们也提供了 AIStudio 上对应的案例：\r\n[二维薄板弯曲变形案例(AIStudio)](https://aistudio.baidu.com/projectdetail/8393914?sUid=438690&shared=1&ts=1730187289769)，缺少算例的同学可以直接在 AIStudio 上运行[申请AI Studio开发资源](https://github.com/PaddlePaddle/community/blob/master/pfcc/call-for-contributions/README.md#%E9%A3%9E%E6%A1%A8%E7%BA%BF%E4%B8%8A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83ai-studio)～\r\n\r\n## 热身打卡流程\r\n\r\n### 1. 安装 Paddle 与 PaddleScience\r\n\r\n参考 <https://paddlescience-docs.readthedocs.io/zh-cn/latest/zh/install_setup/>\r\n如使用AIStudio环境，请参考：[利用AIStudio运行和开发PaddleScience](https://aistudio.baidu.com/projectdetail/8334833)\r\n\r\n### 2. 运行 **二维薄板弯曲变形案例**\r\n\r\n运行 `examples/quick_startcase3.ipynb` 并得到结果即可\r\n\r\n### 3. 发送运行成功邮件\r\n\r\n邮件格式\r\n标题： [PaddleScience 热身打卡]\r\n内容：\r\n飞桨团队你好，\r\n【GitHub ID】：XXX\r\n【打卡内容】：安装 PaddleScience & 运行二维薄板弯曲变形案例\r\n【打卡截图】：运行成功的截图.jpg\r\n\r\n比如：\r\n| 内容 | 结果 |\r\n|--  | --|\r\n|硬件 | ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/819e7adc-42fa-443d-aa2f-cb03b02c4356) ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/c345e4d9-9d87-4152-9395-7e733098bacd)|\r\n| 安装方式 | 参考 <https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/> |\r\n| PaddlePaddle 版本号 | 命令：`python -c \"import paddle; paddle.version.show()\"` ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/0c332a86-c1e9-4164-811f-b431eb0a6830) |\r\n| 验证安装结果 | 命令：`python -c \"import ppsci; ppsci.run_check()\"` ![image](https://github.com/user-attachments/assets/b5a92b02-04f8-4999-b40e-d41c3d119285) |\r\n| 二维薄板弯曲变形案例的运行结果 | ![image](https://github.com/user-attachments/assets/91486320-3689-487e-a7ad-b3babb7c2012) |\r\n| 可视化结果 | ![image](https://github.com/user-attachments/assets/96704f11-58c4-4a4c-98af-4a0624679b7a) |\r\n",
        "state": "open",
        "user": "HydrogenSulfate",
        "closed_by": null,
        "created_at": "2023-06-16T05:15:36+00:00",
        "updated_at": "2024-10-29T07:43:22+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 380,
        "title": "PaddleScience在Python3.10及以上版本全面验证和适配",
        "body": "### 需求描述 Feature Description\n\n任务目标 PaddleScience在Python3.10以上版本全面验证和适配 \n\n### 替代实现 Alternatives\n\n_No response_",
        "state": "closed",
        "user": "cxxly",
        "closed_by": "luotao1",
        "created_at": "2023-06-16T08:30:14+00:00",
        "updated_at": "2024-09-29T02:33:50+00:00",
        "closed_at": "2024-09-29T02:33:50+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 376,
        "title": "【快乐开源】为 PaddleScience 添加 SDF 计算函数",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n坐标点是科学计算问题求解时常用的输入数据对象，这些坐标点从指定的几何计算域中采样得到。从训练优化的角度来看，给所有样本点（坐标点）设置一样的权重并不是一个最优的方法，因此在一些优化 trick 中会将每个点的 SDF(signed distance function) 值作为其权重，以此来加强难样本（靠近计算域中心）的权重，减少简单样本（靠近计算域边界）的权重，最终进一步提升模型训练的精度。\r\n\r\nPaddleScience 目前的几何模块由简单几何和复杂几何组成，复杂几何由 ppsci.geometry.Mesh 类来表示，并基于 pymesh 库进行 SDF 值的计算；而简单几何（如 ppsci.geometry.Disk）还未具备 SDF 计算功能，因此我们希望给所有的简单几何类，添加 SDF 计算功能。\r\n\r\nTips: SDF 函数一般用于计算一个点（多个点同理）到某一个几何边界的最短(欧式)距离（内部为负，外部为正），而在科学计算套件中，这些计算点通常来自几何内部，因此根据 SDF 的定义，其值往往是负数。如 $[l, r]$ 的一维线段内部一个点 $x$ 的 sdf 函数就是\r\n\r\n$$\r\nsdf(x)=-min(x-\\rm l,\\rm r-x)=-(\\dfrac{r-l}{2}-\\vert{x-\\dfrac{l+r}{2}}\\vert)\r\n$$\r\n\r\n## 2. 收益 （整体进度：7/7）\r\n\r\n使得简单几何具备 SDF 加权功能，从功能上与复杂几何更为统一，提升基于简单几何的案例优化空间，熟悉 PaddleScience 套件\r\n\r\n> 按 merge 的时间顺序，排名不分先后： @Liyulingyue (2), @AndPuQing (2), @jjyaoao (1), @jiamingkong (1) @mrcangye (1)\r\n\r\n| 序号| 几何类 | 认领人| PR号|\r\n|--|--|--|--|\r\n|1 | Interval✅(2023/6/20)  | @jiamingkong | #403 |\r\n|2 | Disk✅(2023/6/17)| @jjyaoao   | #391|\r\n|3 | Polygon✅(2023/6/27)| @mrcangye     |#376 |\r\n|4 |Rectangle✅(2023/6/17)| @AndPuQing | #387|\r\n|5| Triangle✅(2023/6/17)| @AndPuQing |#387 |\r\n|6| Cuboid✅(2023/6/17)| @Liyulingyue | #384|\r\n|7| Sphere✅(2023/6/17)| @Liyulingyue | #386 |\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：<https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git>\r\n\r\n### 3.2 代码开发\r\n\r\n以为 ppsci.geometry.Disk 模块添加 SDF 函数为例\r\n\r\n```py\r\nclass Disk(geometry.Geometry):\r\n    ...\r\n    ...\r\n\r\n    def sdf_func(self, points: np.ndarray) -> np.ndarray:\r\n        \"\"\"Compute signed distance field.\r\n\r\n        Args:\r\n            points (np.ndarray): The coordinate points used to calculate the SDF value,\r\n                the shape is [N, 2]\r\n\r\n        Returns:\r\n            np.ndarray: Unsquared SDF values of input points, the shape is [N, 1].\r\n\r\n        NOTE: This function usually returns ndarray with negative values, because\r\n        according to the definition of SDF, the SDF value of the coordinate point inside\r\n        the object(interior points) is negative, the outside is positive, and the edge\r\n        is 0. Therefore, when used for weighting, a negative sign is often added before\r\n        the result of this function.\r\n        \"\"\"\r\n        # 在此处编写代码，为传入的 points，计算对应的 sdf_value 并返回\r\n        return sdf_value\r\n```\r\n\r\n还需修改一下：`ppsci/geometry/geometry.py` 的代码，\r\n``` py\r\ndef sample_interior(self, n, random=\"pseudo\", criteria=None, evenly=False):\r\n    \"\"\"Sample random points in the geometry and return those meet criteria.\"\"\"\r\n    x = np.empty(shape=(n, self.ndim), dtype=paddle.get_default_dtype())\r\n    _size, _ntry, _nsuc = 0, 0, 0\r\n    while _size < n:\r\n        if evenly:\r\n            points = self.uniform_points(n)\r\n        else:\r\n            if misc.typename(self) == \"TimeXGeometry\":\r\n                points = self.random_points(n, random, criteria)\r\n            else:\r\n                points = self.random_points(n, random)\r\n\r\n        if criteria is not None:\r\n            criteria_mask = criteria(*np.split(points, self.ndim, axis=1)).flatten()\r\n            points = points[criteria_mask]\r\n\r\n        if len(points) > n - _size:\r\n            points = points[: n - _size]\r\n        x[_size : _size + len(points)] = points\r\n\r\n        _size += len(points)\r\n        _ntry += 1\r\n        if len(points) > 0:\r\n            _nsuc += 1\r\n\r\n        if _ntry >= 1000 and _nsuc == 0:\r\n            raise ValueError(\r\n                \"Sample interior points failed, \"\r\n                \"please check correctness of geometry and given creteria.\"\r\n            )\r\n    # 以下为新增代码：内部点 x 采样完之后计算其 sdf 值，并和 x 一起转换为字典返回\r\n    if hasattr(self, 'sdf_func'):\r\n        sdf = -self.sdf_func(x)\r\n        sdf_dict = misc.convert_to_dict(sdf, (\"sdf\", ))\r\n        x_dict = misc.convert_to_dict(x, self.dim_keys)\r\n        return {**x_dict, **sdf_dict}\r\n    else:\r\n        return misc.convert_to_dict(x, self.dim_keys)\r\n```\r\n\r\n### 3.4 SDF 可视化验证\r\n\r\n在编写完 SDF 代码之后，我们需要对 SDF 计算结果进行验证，可以按照以下代码手动实例化一个几何对象，然后在其内部进行采样，再调用 sdf_func 对内部采样点计算其 sdf 值，最后用 ppsci 的可视化接口保存为 vtu 文件。用 [ParaView](https://www.paraview.org/) 软件打开查看。vtu 文件生成的示例代码如下：\r\n\r\n``` py\r\nimport ppsci\r\nfrom ppsci.utils import logger\r\nfrom ppsci import visualize\r\n\r\nlogger.init_logger()\r\n\r\ngeo = ppsci.geometry.实现了sdf_func的几何类(...)\r\npoints_dict = geo.sample_interior(n=10000) # 可视化10000个点\r\nvisualize.vtu.save_vtu_from_dict(\"./visualize_sdf.vtu\", points_dict, geo.dim_keys, (\"sdf\", ))\r\n```\r\n\r\n### 3.5 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/contribute/#3)\r\n\r\n## 4. 参考资料\r\n\r\n* [符号距离函数-百度百科](https://baike.baidu.com/item/%E7%AC%A6%E5%8F%B7%E8%B7%9D%E7%A6%BB%E5%87%BD%E6%95%B0/12806843?fr=aladdin)\r\n* [Signed distance function - 理论篇](https://zhuanlan.zhihu.com/p/345710896)\r\n* [常见 SDF 实现源码（C++）](https://iquilezles.org/articles/distfunctions/)\r\n* [NVIDIA-Modulus套件的 SDF 实现源码](https://gitlab.com/nvidia/modulus/modulus/-/blob/release_22.09/modulus/geometry/primitives_2d.py#L289)\r\n* [多边形 SDF 实现算法](https://www.shadertoy.com/view/WdSGRd)\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-06-16T07:11:42+00:00",
        "updated_at": "2023-06-27T04:04:33+00:00",
        "closed_at": "2023-06-27T04:04:32+00:00",
        "comments_count": [
            "mrcangye",
            "luotao1"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 377,
        "title": "【快乐开源】为 PaddleScience 制作镜像",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\nPaddleScience 套件目前提供了 whl 包安装以及直接 git clone 安装两种形式，但在一些特殊工作环境中（如无法联网），依赖安装过程会比较麻烦，因此希望只做一个基于 ubunutu，具备能直接运行 PaddleScience bracket 案例的镜像供用户使用。\r\n\r\n## 2. 收益\r\n\r\n新增 docker 镜像安装方式，免去安装各种依赖包联网安装问题\r\n\r\n## 3. 镜像制作\r\n\r\n### 3.1 制作要求\r\n\r\n* 基于 CUDA 11.6\r\n* python version = 3.7\r\n* 含有 develop 版 PaddlePaddle(commit 号指定为 6fde205677a415eae160bcf42420427ed9372f6b)\r\n* 含有 develop 版 PaddleScience(commit 号指定为 6839369b8409da2489c491f1f8d1e61480796293)\r\n* 在安装了 PaddleScience 基本的依赖包的前提下，安装 pysdf、pymesh、open3d 等 ppsci.geometry.Mesh 模块所需的依赖包\r\n\r\n### 3.2 镜像正确性验证\r\n\r\n跑通 bracket.py 案例，能开始训练即通过验证。运行命令如下\r\n\r\n``` sh\r\ngit clone https://github.com/PaddlePaddle/PaddleScience.git\r\ncd PaddleScience\r\ngit checkout develop\r\nexport PYTHONPATH=$PWD:$PYTHONPATH\r\n\r\ncd examples/bracket\r\nwget https://paddle-org.bj.bcebos.com/paddlescience/datasets/bracket/bracket_data.tar\r\ntar -xvf bracket_data.tar\r\npython bracket.py\r\n```\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-06-16T07:16:57+00:00",
        "updated_at": "2023-07-06T12:06:14+00:00",
        "closed_at": "2023-07-06T12:06:13+00:00",
        "comments_count": [
            "sanbuphy"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 375,
        "title": "【快乐开源】为 PaddleScience 添加 DeepONet 案例",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n对于科学计算领域的方程求解问题，基于神经网络拟合任意复杂函数的原理，可以使用模型将方程输入映射到方程的解上从而得到答案。但在 DeepONet 论文中，展示了神经网络实际上具备更强大的能力——拟合任意的非线性连续泛函或非线性运算符，这意味着或许可以训练一次模型求解各种未知方程，而不是为每一个方程分别训练一个“一次性”模型，为此我们希望为 PaddleScience 实现一个 DeepONet 模型并添加对应案例。\r\n\r\n## 2. 开发流程\r\n\r\n### 2.1 代码开发\r\n\r\n参考：[PaddleScience文档-贡献指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/contribute/#_1)\r\n\r\n### 2.2 案例撰写\r\n\r\n阅读 DeepONet 论文和源代码，理解其原理，基于 2.1 的代码完成模型训练，自行构造适量的测试数据，使用训练完毕的模型进行测试并可视化结果，说明复现代码的有效性和正确性。基于 mkdocs 撰写案例文档，和复现代码一起提交 PR 至 PaddleScience（参考案例：<https://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/viv/> ）\r\n\r\nmkdocs 案例预览步骤：\r\n\r\n1. 安装 mkdocs 依赖：`pip install -r docs/requirements.txt`\r\n2. 启动 mkdocs 服务：`mkdocs serve -a 127.0.0.1:8686`\r\n3. 点击终端出现的链接，预览并完善撰写的案例文档\r\n\r\n## 3. 参考资料\r\n\r\n* 论文：[DeepONet: Learning nonlinear operators for identifying differential equations based on the universal approximation theorem of operators](https://arxiv.org/abs/1910.03193)\r\n* 参考代码(pytorch)：<https://github.com/lululxvi/deepxde/blob/master/examples/operator/antiderivative_unaligned.py>\r\n* 参考代码对应案例：<https://deepxde.readthedocs.io/en/latest/demos/operator/antiderivative_unaligned.html>\r\n* PaddleScience API 文档：<https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/>\r\n* PaddleScience 贡献指南：<https://paddlescience-docs.readthedocs.io/zh/latest/zh/contribute/>\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-06-16T07:05:27+00:00",
        "updated_at": "2023-07-20T08:29:32+00:00",
        "closed_at": "2023-07-20T08:29:31+00:00",
        "comments_count": [
            "luotao1",
            "marshall-dteach",
            "HydrogenSulfate",
            "luotao1",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 379,
        "title": "🎁PaddleScience 快乐开源活动表单",
        "body": "### 问题描述 Please describe your issue\r\n\r\n# PaddleScience 快乐开源活动\r\n\r\n旨在鼓励更多的开发者参与到飞桨科学计算社区的开源建设中，帮助社区修复 bug 或贡献 feature，加入开源、共建飞桨。\r\n\r\n## 热身任务\r\n### 拉取、安装并运行 PaddleScience 代码\r\n\r\n在 PaddleScience 套件二次开发中，安装并运行 PaddleScience 是一个重要环节。本任务邮件通过验收后，即可收到限量版飞桨开源社区定制马克杯，数量有限，先到先得~\r\n\r\nmentor：@HydrogenSulfate\r\n\r\n参考链接：\r\n\r\n- https://github.com/PaddlePaddle/PaddleScience/issues/372\r\n\r\n\r\n## 命题任务 \r\n\r\n这里是一些比较明确和具体的任务，这些任务已经经过飞桨社区开发者和飞桨研发的多轮讨论，是可以直接上手去做的任务，任务细节可以在具体 tracking issue 中与 mentor 沟通（你也可以联系邮箱 [ext_paddle_oss@baidu.com](mailto:ext_paddle_oss@baidu.com) 加微信群沟通）。任务进展见：https://github.com/orgs/PaddlePaddle/projects/7 ，结项任务见 https://github.com/PaddlePaddle/PaddleScience/issues/379#issuecomment-1594328097 \r\n\r\n| 任务名称     | 任务描述   | tracking issue  | mentor     | 京东卡\r\n| -- | -- | -- | -- |-- |\r\n| 为 PaddleScience 案例添加 export 和 inference 功能 | 补充多个案例的export、inference功能 | #788  | @HydrogenSulfate @xusuyong |-|\r\n| 补充汽车CFD数据集(Shape-Net Car) | 补充汽车CFD数据集(Shape-Net Car)至 PaddleScience | #666  | @wangguan1995  |200 |\r\n| 补充汽车CFD数据集(Ahmed)| 补充汽车CFD数据集(Ahmed)至 PaddleScience | #668  | @wangguan1995  |200 |\r\n| 为PaddleScience 添加 chamfer distance loss| 学习点云相关知识和该种点云间距离度量方法，为 PaddleScience 添加相应 loss 函数 | #851   | @lijialin03  |500 |",
        "state": "closed",
        "user": "luotao1",
        "closed_by": "luotao1",
        "created_at": "2023-06-16T08:23:25+00:00",
        "updated_at": "2025-06-04T12:01:41+00:00",
        "closed_at": "2025-06-04T12:01:41+00:00",
        "comments_count": [
            "luotao1",
            "jiangzhangze",
            "luotao1",
            "sanbuphy",
            "mrcangye",
            "MayYouBeProsperous",
            "MayYouBeProsperous",
            "DrRyanHuang",
            "dddlli",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 378,
        "title": "【快乐开源】为 PaddleScience 的 equation 模块添加单元测试",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\nPaddleScience 套件由 13 个模块构成，每个模块的代码存放在 ppsci/ 下的文件夹中，但这些模块暂时缺少对应的单元测试，虽然目前 PaddleScience 的模块没有存在严重的 BUG，但单元测试仍然是这些模块在细节上的正确性的有力保障，避免隐蔽的 BUG。因此希望在此次快乐开源活动中给核心模块 equation（文件夹是 ppsci/equation）添加单元测试\r\n\r\n## 2. 收益\r\n\r\n保障 equation 模块的正确性\r\n\r\n## 3. 添加单元测试\r\n\r\n### 3.1 基本要求 （整体进度：7/7）\r\n\r\n单元测试基于 pytest 进行编写与开发，需要对 equation 模块下的各个方程类内部代码的 if-else 分支进行全面测试，覆盖率达到 100%\r\n\r\n为 [ppsci/equation/pde](https://github.com/PaddlePaddle/PaddleScience/tree/develop/ppsci/equation/pde) 下的 7 个文件（laplace.py 除外，已作为 3.2 单测开发 中的示例）添加单元测试，编写代码时尽量使用 pytest 的 [参数化测试特性](https://blog.csdn.net/qishuzdh/article/details/124808459) 以减少重复代码\r\n\r\n> 按 merge 的时间顺序，排名不分先后：@greatv (1), @ccsuzzh (1), @jiamingkong (1), @enkilee (1), @jjyaoao (1), @ruoyunbai (1), @mrcangye (1)\r\n\r\n| 序号 | 单测文件             | 认领人 | PR号 |\r\n| ---- | -------------------- | ------ | ---- |\r\n| 1    | base.py✅ (2023/6/20)               |  @jiamingkong      | #397     |\r\n| 2    | biharmonic.py✅(2023/6/23)        | @jjyaoao       |  #394    |\r\n| 3    | linear_elasticity.py✅(2023/7/10) |  @ruoyunbai      |  #416    |\r\n| 4    | navier_stokes.py✅(2023/7/10)     |  @mrcangye       | #414     |\r\n| 5    | normal_dot_vec.py✅(2023/6/17)    |  @greatv      |   #388   |\r\n| 6    | poisson.py✅  (2023/6/19)           | @enkilee        |  #400     |\r\n| 7    | viv.py✅ (2023/6/20)              |  @ccsuzzh      |  #401    |\r\n\r\n### 3.2 单测开发\r\n\r\n1. 在 ppsci 下新建一个 test 目录\r\n2. 在 test 目录下新建 equation 目录\r\n3. 在 test/equation 目录下新建与 equation 模块下同名的文件，如新建 test_biharmonic.py（对应 equation/biharmonic.py）\r\n4. 在新建的 test_xxx.py 文件中**用 pytest 单元测试框架**编写代码，单元测试代码需满足 3.1 基本要求 的内容\r\n5. 执行 `pytest --cov=./ppsci/equation/pde test/equation/test_xxx.py`，生成带有覆盖率报告的单元测试结果，并确认被测试的源代码覆盖率为 100%\r\n6. 提交 PR 到 PaddleScience\r\n\r\n### 3.3 开发注意事项\r\n\r\n由于 equation 模块中使用了诸多 jacobian, hessian 封装好的高阶微分函数，因此在单元测试中，计算标准参考结果时，应该使用 `paddle.grad` 等价实现 jacobian 和 hessian\r\n\r\n## 4. 参考样例\r\n\r\n以为 `ppsci/equation/pde/laplace.py` 添加单元测试 `ppsci/test/equation/test_laplace.py` 为例，在PR描述中可以看到 `ppsci/equation/pde/laplace.py` 的 Coverage 是 100%，满足要求。 参考 PR：[https://github.com/PaddlePaddle/PaddleScience/pull/370](https://github.com/PaddlePaddle/PaddleScience/pull/370) （所有流水线包括非required都要通过）\r\n\r\n## 5. 参考资料\r\n\r\n* [pytest 官方文档](https://docs.pytest.org/en/7.3.x/)\r\n* [pytest-入门_李慕陈的博客-CSDN博客](https://blog.csdn.net/qq_43151742/article/details/120274063)\r\n* [目前最火的测试框架，pytest封神级讲解](https://mp.weixin.qq.com/s?__biz=MzI3NDc4NTQ0Nw==&mid=2247526985&idx=1&sn=468201c0c30591a5ee28cf3676e1963a&chksm=eb0c9f81dc7b169753904d29b821b18ed595f210cfeeebea3692fff6d3359892b390467304cc&scene=27)\r\n* [pytest—pytest.mark.parametrize的使用_阿里自动化测试君的博客-CSDN博客](https://blog.csdn.net/qishuzdh/article/details/124808459)\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-06-16T07:23:28+00:00",
        "updated_at": "2023-07-10T03:20:14+00:00",
        "closed_at": "2023-07-10T03:20:14+00:00",
        "comments_count": [
            "mrcangye",
            "ccsuzzh",
            "jiamingkong",
            "enkilee",
            "enkilee",
            "luotao1"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 409,
        "title": "关于后处理的问题",
        "body": "### 请提出你的问题 Please ask your question\n\n1.想对loss做可视化，如何将train.log中的loss提取出来；\r\n2.PINN预测的流场是以离散的点来排列的，paraview中可视化效果如下：\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/99314760/a4d81409-7b97-4574-bac6-c5127215eca6)\r\n如何获得连续的流场，如文档中一样。",
        "state": "closed",
        "user": "jiangzhangze",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-06-27T09:11:25+00:00",
        "updated_at": "2023-07-09T05:51:00+00:00",
        "closed_at": "2023-07-09T05:51:00+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "jiangzhangze",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 381,
        "title": "Out of memory error on GPU0",
        "body": "### 请提出你的问题 Please ask your question\n\n在运行cylinder_2D_steady算例的时候，报错GPU内存不足，以下是完整信息:\r\n```\r\nW0616 15:50:39.975569  9396 gpu_resources.cc:96] The GPU architecture in your current machine is Pascal, which is not compatible with Paddle installation with arch: 70 75 80 86 , it is recommended to install the corresponding wheel package according to the installation information on the official Paddle website.\r\nW0616 15:50:39.975569  9396 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 6.1, Driver API Version: 12.1, Runtime API Version: 11.7\r\nW0616 15:50:39.978561  9396 gpu_resources.cc:149] device: 0, cuDNN Version: 8.4.\r\n[2023/06/16 15:50:40] ppsci INFO: train_timestamps: [2.0, 2.0, 3.0, 8.0, 11.0, 11.0, 12.0, 15.0, 19.0, 21.0, 21.0, 22.0, 22.0, 23.0, 24.0, 24.0, 24.0, 25.0, 29.0, 30.0, 33.0, 36.0, 38.0, 39.0, 39.0, 40.0, 43.0, 44.0, 44.0, 49.0]\r\n[2023/06/16 15:50:40] ppsci INFO: val_timestamps: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0]\r\n[2023/06/16 15:50:41] ppsci INFO: Using paddlepaddle develop(3261b10) on device Place(gpu:0)\r\n[2023/06/16 15:50:41] ppsci INFO: Set to_static=False for forward computation.\r\nTraceback (most recent call last):\r\n  File \"E:\\AI\\AI for science\\ppsci_test\\examples\\cylinder\\2d_unsteady\\cylinder2d_unsteady_Re100.py\", line 231, in <module>\r\n    solver.train()\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\solver\\solver.py\", line 377, in train\r\n    self.train_epoch_func(self, epoch_id, self.log_freq)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\solver\\train.py\", line 72, in train_epoch_func\r\n    constraint_losses = solver.forward_helper.train_forward(\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\paddle\\jit\\dy2static\\program_translator.py\", line 459, in __call__\r\n    return self._call_dygraph_function(*args, **kwargs)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\paddle\\jit\\dy2static\\program_translator.py\", line 529, in _call_dygraph_function\r\n    return self.dygraph_function(*args, **kwargs)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\utils\\expression.py\", line 85, in train_forward\r\n    output_dict[name] = expr({**output_dict, **input_dicts[i]})\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\equation\\pde\\navier_stokes.py\", line 65, in momentum_x_compute_func\r\n    momentum_x += jacobian(u, t)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\autodiff\\ad.py\", line 96, in __call__\r\n    return self.Js[key](i, j)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\ppsci\\autodiff\\ad.py\", line 56, in __call__\r\n    self.J[i] = paddle.grad(y, self.xs, create_graph=True)[0]\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\decorator.py\", line 232, in fun\r\n    return caller(func, *(extras + args), **kw)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\paddle\\fluid\\wrapped_decorator.py\", line 25, in __impl__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\paddle\\fluid\\framework.py\", line 462, in __impl__\r\n    return func(*args, **kwargs)\r\n  File \"D:\\anaconda3\\envs\\ppsci\\lib\\site-packages\\paddle\\fluid\\dygraph\\base.py\", line 813, in grad\r\n    return core.eager.run_partial_grad(\r\nMemoryError:\r\n\r\n--------------------------------------\r\nC++ Traceback (most recent call last):\r\n--------------------------------------\r\nNot support stack backtrace yet.\r\n\r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nResourceExhaustedError:\r\n\r\nOut of memory error on GPU 0. Cannot allocate 53.901855MB memory on GPU 0, 7.999878GB memory has been allocated and available memory is only 0.000000B.\r\n\r\nPlease check whether there is any other process using GPU 0.\r\n1. If yes, please stop them, or start PaddlePaddle on another GPU.\r\n2. If no, please decrease the batch size of your model.\r\n (at ..\\paddle\\fluid\\memory\\allocation\\cuda_allocator.cc:86)\r\n```\r\n目前试过把`residual_validator`处的`batch_size`改小，但不起作用。\r\n能否告诉一下gpu是什么型号的，内存需要多少，这是我的gpu信息:\r\n```\r\n+---------------------------------------------------------------------------------------+\r\n| NVIDIA-SMI 531.30                 Driver Version: 531.30       CUDA Version: 12.1     |\r\n|-----------------------------------------+----------------------+----------------------+\r\n| GPU  Name                      TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf            Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                                         |                      |               MIG M. |\r\n|=========================================+======================+======================|\r\n|   0  NVIDIA GeForce GTX 1080       WDDM | 00000000:01:00.0 Off |                  N/A |\r\n| 38%   53C    P0               50W / 180W|      3MiB /  8192MiB |      0%      Default |\r\n|                                         |                      |                  N/A |\r\n+-----------------------------------------+----------------------+----------------------+\r\n\r\n+---------------------------------------------------------------------------------------+\r\n| Processes:                                                                            |\r\n|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |\r\n|        ID   ID                                                             Usage      |\r\n|=======================================================================================|\r\n|  No running processes found                                                           |\r\n+---------------------------------------------------------------------------------------+\r\n```",
        "state": "closed",
        "user": "jiangzhangze",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-06-16T08:43:27+00:00",
        "updated_at": "2023-07-09T05:50:57+00:00",
        "closed_at": "2023-07-09T05:50:57+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 437,
        "title": "【快乐开源】完善PaddleScience对符号计算(symbolic computation)功能的支持",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 背景\r\n符号计算又称计算机代数计算，通俗地说就是用计算机推导数学公式，如对表达式进行因式分解、化简、微分、积分、解代数方程、求解常微分方程等。PaddleScience 目前的方程计算路径主要通过用户传递 Equation 下子类内置的 python function，或者手写的 python function，这种方式虽然给用户带来了较高的方程构造自由度，但损失了简便性和可读性，用户需要手写完整的 python 代码，从接受输入，到计算所有的中间变量，最后返回计算结果。下面通过一个简单的例子来说明符号计算和手写 python 代码的区别，假设我们需要计算如下一条比较复杂的表达式：\r\n\r\n$$\r\nnavier_{x} = \\rho(\\dfrac{\\partial^2 u}{\\partial t^2}) - (\\lambda + \\mu)(\\dfrac{\\partial^2 u}{\\partial x^2}+\\dfrac{\\partial^2 v}{\\partial y \\partial x} + \\dfrac{\\partial^2 w}{\\partial z \\partial x}) - \\mu(\\dfrac{\\partial^2 u}{\\partial x^2} + \\dfrac{\\partial^2 u}{\\partial y^2} + \\dfrac{\\partial^2 u}{\\partial z^2})\r\n$$\r\n\r\n### 1.1 Python Function\r\n\r\n目前 PaddleScience 使用手写 python function，如下所示，可以看到整体流程比较繁琐。会出现无法避免的if-else判断，容易出现不小心写错的情况，可读性差\r\n\r\n``` py\r\n# step1. 手写 python function\r\ndef navier_x_compute_func(out):\r\n    x, y, u, v = (\r\n        out[\"x\"],\r\n        out[\"y\"],\r\n        out[\"u\"],\r\n        out[\"v\"],\r\n    )\r\n    duxvywz = jacobian(u, x) + jacobian(v, y)\r\n    duxxuyyuzz = hessian(u, x) + hessian(u, y)\r\n    if self.dim == 3:\r\n        z, w = out[\"z\"], out[\"w\"]\r\n        duxvywz += jacobian(w, z)\r\n        duxxuyyuzz += hessian(u, z)\r\n    navier_x = (\r\n        -(self.lambda_ + self.mu) * jacobian(duxvywz, x) - self.mu * duxxuyyuzz\r\n    )\r\n    if self.time:\r\n        t = out[\"t\"]\r\n        navier_x += rho * hessian(u, t)\r\n    return navier_x\r\n    \r\n# step2. 传入必要的数据，计算方程结果\r\nout = {....}\r\nnavier_x_value = navier_x_compute_func(out)\r\n```\r\n\r\n### 1.2 Sympy 符号计算\r\n\r\n在使用符号计算的情况下，结构更加清晰，可读性大大增强，并且支持公式打印，不容易写错\r\n\r\n``` py\r\n# step1. 定义 navier_x 的符号化公式\r\nnavier_x = (\r\n    rho * ((u.diff(t)).diff(t))\r\n    - (lambda_ + mu) * (u.diff(x) + v.diff(y) + w.diff(z)).diff(x)\r\n    - mu * ((u.diff(x)).diff(x) + (u.diff(y)).diff(y) + (u.diff(z)).diff(z))\r\n)\r\n# 将符号计算公式转换成 function，这一步由代码内部完成，不需要用户转换\r\nnavier_x_compute_func = symbolic_to_function(navier_x)\r\n\r\n# step2. 传入必要的数据，计算方程结果\r\nout = {....}\r\nnavier_x_value = navier_x_compute_func(out)\r\n```\r\n\r\n使用符号计算，除了上述优点，还有以下优势：\r\n1. 借助第三方库 [latex2sympy](https://link.zhihu.com/?target=https%3A//github.com/OrangeX4/latex2sympy)，可直接将 latex 代码转换成 sympy 表达式，降低用户使用 sympy 的门槛\r\n2. sympy 公式也可以转换成 latex 代码，如下所示\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/36f2ed64-d6cc-4b3b-8db7-0e5a94c2b75f)\r\n3. sympy 公式可以在 notebook 中可视化，在终端以 Unicode 可视化，如下所示\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/6dd7c8e6-3f3e-4f52-a50e-293f411a3fc4)\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/a007f2ec-601f-4923-95de-3e459adc2aae)\r\n\r\n\r\n## 2. 收益\r\n### 2.1 开发者个人收益\r\n* 从 Sympy([github](https://github.com/sympy/sympy) 11.1K star) 入手，了解、熟悉符号计算\r\n* 了解符号计算和数值计算在计算机中的结合方式，以符号计算指导数值计算的过程\r\n### 2.2 PaddleScience 收益\r\n* 提升 Equation 模块的可读性\r\n* 在支持 python func 的基础上，同时支持 sympy 表达式\r\n## 3. 开发流程\r\n### 3.1 安装 PaddleScience\r\n下载安装 PaddleScience 套件：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git\r\n注：本任务不涉及复杂几何，因此不需要安装 pymesh、open3d 等安装文档中提及的可选安装包\r\n### 3.2 代码开发\r\n参考 [sympy to func project](https://github.com/PaddlePaddle/community/blob/master/pfcc/paddle-code-reading/sympy_to_func/sympy_to_func.md)﻿ 设计方案进行开发\r\n### 3.3 整理代码并提交PR\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)\r\n## 4. 参考资料\r\n* [【SymPy】（一）SymPy简介_二进制人工智能的博客-CSDN博客](https://blog.csdn.net/weixin_44378835/article/details/113485515)\r\n* https://www.jc2182.com/sympy/sympy-jiaocheng.html\r\n* https://docs.sympy.org/latest/index.html\r\n\r\n## 奖励\r\n800 京东卡",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-21T05:57:47+00:00",
        "updated_at": "2023-08-30T10:08:41+00:00",
        "closed_at": "2023-08-30T10:08:40+00:00",
        "comments_count": [
            "luotao1"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 439,
        "title": "【快乐开源】迁移 DeepCFD 案例至 PaddleScience",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n计算流体力学（Computational fluid dynamics, CFD）通过求解Navier-Stokes方程（N-S方程），可以获得流体的各种物理量的分布，如密度、压力和速度等，在微电子系统、土木工程和航空航天等领域应用广泛。然而，在某些复杂的应用场景中，如机翼优化和流体与结构相互作用方面，需要使用千万级甚至上亿的网格对问题进行建模（如下图所示，下图展示了F-18战斗机的全机内外流一体结构化网格模型），导致CFD的计算量非常巨大。因此，目前亟需发展出一种相比于传统CFD方法更高效，且可以保持计算精度的方法。这篇文章的作者提到，可以使用深度学习的方法，通过训练少量传统CFD仿真的数据，构建一种数据驱动（data-driven）的CFD计算模型，来解决上述的问题。\r\n\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/7246947a-1fcc-4b90-9569-9fa90665ecbd)\r\n\r\n**在 AIStudio 上已经有使用 PaddlePaddle 框架API 复现的项目：[基于PaddlePaddle的DeepCFD复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/4400677)，现在希望能将这个项目迁移至 PaddleScience，也就是基于 PaddleScience 的 API 实现该项目，最终合入 PaddleScience 仓库**\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 同时熟悉 CV 领域的经典模型结构 U-Net，并从该项目中了解相关流体力学知识，以及如何将物理公式融入到深度学习方法中\r\n* 学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 补充 U-Net 结构至 Arch 模块\r\n* 补充 DeepCFD 案例至流体相关案例中，提升案例丰富度\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n参考 [基于PaddlePaddle的DeepCFD复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/4400677)项目，以及 [PaddleScience 的开发与复现指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/)，使用 [PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/) 等价实现该项目，开发代码风格与已有案例保持一致（如 [Darcy 2D](https://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/darcy2d/)），训练精度与原论文对齐，并仿照已有文档撰写 DeepCFD 的案例文档，最终合入 PaddleScience。\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)\r\n\r\n## 4. 参考资料\r\n\r\n* [PaddleScience 文档](https://paddlescience-docs.readthedocs.io/zh/latest/)\r\n* [基于PaddlePaddle的DeepCFD复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/4400677)\r\n* [https://github.com/mdribeiro/DeepCFD](https://github.com/mdribeiro/DeepCFD)\r\n* [Ribeiro M D, Rehman A, Ahmed S, et al. DeepCFD: Efficient steady-state laminar flow approximation with deep convolutional neural networks[J]. arXiv preprint arXiv:2004.08826, 2020.](https://arxiv.org/abs/2004.08826)\r\n\r\n## 奖励\r\n500 京东卡",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-22T02:41:01+00:00",
        "updated_at": "2023-09-25T03:15:18+00:00",
        "closed_at": "2023-09-25T03:15:18+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 440,
        "title": "【快乐开源】迁移 RegAE 案例至 PaddleScicne",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n**在 AIStudio 上已经有使用 PaddlePaddle 框架API 复现的项目：[RegAE](https://aistudio.baidu.com/aistudio/projectdetail/5541961)，现在希望能将这个项目迁移至 PaddleScience，也就是基于 PaddleScience 的 API 实现该项目，最终合入 PaddleScience 仓库**\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 同时熟悉 CV 领域的经典模型结构 VAE（变分自编码器），并从该项目中了解相关水文学知识，以及如何将物理公式融入到深度学习方法中\r\n* 学习 PaddleScience 套件代码，掌握开源套件开发基本知识，\r\n* 了解开源科学计算框架 julia 的基本使用，以及 Paddle 自定义 python 算子的方法\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 补充 VAE 结构至 Arch 模块\r\n* 补充 RegAE 案例至流体相关案例中，提升案例丰富度\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n参考 [RegAE](https://aistudio.baidu.com/aistudio/projectdetail/5541961) 项目，以及 [PaddleScience 的开发与复现指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/)，使用 PaddleScience  API（[PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/)）等价实现该项目，开发代码风格与已有案例保持一致，训练精度与 AIStudio 项目对齐，并仿照已有文档撰写 RegAE 的案例文档，最终合入 PaddleScience。\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n\r\n## 4. 参考资料\r\n\r\n* [AIStudio - RegAE](https://aistudio.baidu.com/aistudio/projectdetail/5541961)\r\n* [RegAE-github](https://github.com/madsjulia/RegAE.jl)\r\n* [O'Malley D, Golden J K, Vesselinov V V. Learning to regularize with a variational autoencoder for hydrologic inverse analysis[J]. arXiv preprint arXiv:1906.02401, 2019.](https://arxiv.org/abs/1906.02401)\r\n\r\n## 奖励\r\n500 京东卡",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-22T02:59:46+00:00",
        "updated_at": "2024-01-25T12:00:56+00:00",
        "closed_at": "2024-01-25T12:00:56+00:00",
        "comments_count": [],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 447,
        "title": "PIRBN模型复现",
        "body": "### 需求描述 Feature Description\r\n\r\n难度：★★★★☆\r\n# 1. 背景\r\n物理信息神经网络（PINN）在计算力学方向有越来越多的进展。首先通过神经正切核（NTK）理论研究 PINN 的训练动态。 根据数值实验，Queensland University of Technology LAMSE实验室发现：\r\n\r\n- PINN 在训练期间往往是局部逼近器\r\n- 对于无法成为局部近似器的 PINN，物理信息损失很难通过训练最小化\r\n\r\n受其他研究结果的启发， 该实验室创新性的提出一种新架构：physics-informed radial basis network（PIRBN），它可以：\r\n- 创新评价指标：直观地展示PINNs收敛的程度\r\n- 已经证明NTK理论适用于PIRBN。 此外，其他 PINN 技术可以直接迁移到 PIRBN。\r\n- 创新性使用单层RB神经网络\r\n\r\n\r\n<img width=\"619\" alt=\"image\" src=\"https://github.com/PaddlePaddle/PaddleScience/assets/39621324/52fb0cfe-27a1-4404-8f71-7f0ef75cd6a3\">\r\n\r\n\r\n关于单层RB神经网络：\r\n- radial basis network由Broomhead 和 Lowe提出\r\n- 使用radial basis function (RBF)作为激活函数\r\n- 使用单层神经网络\r\n\r\n目前，该项目（PIRBN）已经发表于CMAME顶刊\r\n\r\n# 2. 收益\r\n## 2.1 个人收益\r\n\r\n- 熟悉深度学习的经典模型结构 RBF network\r\n- 从该项目中了解相关偏微分知识\r\n- 学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n- 深度理解 PINNs 的机制\r\n- 熟悉 Paddle 框架使用\r\n- 熟悉概率与统计相关知识\r\n\r\n## 2.2 PaddleScience 收益\r\n\r\n- 补充 NTK 指标至 metric 模块\r\n- 补充 PIRBN 案例至PDE相关案例中，提升案例丰富度\r\n- 补充 RBF network 至 arch 模块\r\n\r\n# 3.开发流程\r\n## 3.1 安装 PaddleScience\r\n下载安装 PaddleScience 套件：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git\r\n\r\n## 3.2 代码开发\r\n参考 [PIRBN](https://github.com/JinshuaiBai/PIRBN)项目，以及 [PaddleScience 的开发与复现指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/)，使用 PaddleScience API 等价实现该项目，开发代码风格与已有案例保持一致，训练精度与原论文对齐，并仿照已有文档撰写 PIRBN 的案例文档，最终合入 PaddleScience。\r\n\r\n# 4. 参考资料\r\n- [[1] J. Bai, G.-R. Liu, A. Gupta, L. Alzubaidi, X.-Q. Feng, Y. Gu, Physics-informed radial basis network (PIRBN): A local approximation neural network for solving nonlinear PDEs, Arxiv preprint arXiv:2304.06234, (2023).](https://arxiv.org/abs/2304.06234)\r\n- [代码地址](https://github.com/JinshuaiBai/PIRBN)\r\n\r\n\r\n### 替代实现 Alternatives\r\n\r\n_No response_",
        "state": "closed",
        "user": "wangguan1995",
        "closed_by": "luotao1",
        "created_at": "2023-07-25T02:58:01+00:00",
        "updated_at": "2023-07-25T09:40:05+00:00",
        "closed_at": "2023-07-25T09:40:05+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 441,
        "title": "【快乐开源】迁移 CFDGCN 案例至 PaddleScience",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n**在 AIStudio 上已经有使用 PaddlePaddle 框架API 复现的项目：[基于PaddlePaddle的CFDGCN复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/5216848?channelType=0&channel=0)，现在希望能将这个项目迁移至 PaddleScience，也就是基于 PaddleScience 的 API 实现该项目，最终合入 PaddleScience 仓库**\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 同时熟悉 CV 领域的经典模型结构 GCN，并从该项目中了解相关流体力学知识，以及如何将物理公式融入到深度学习方法中\r\n* 学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n* 熟悉 SU2 传统求解器与 Paddle 框架的联动使用\r\n* 熟悉 MPI 相关知识\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 补充 GCN 结构至 Arch 模块\r\n* 补充 CFDGCN 案例至流体相关案例中，提升案例丰富度\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n参考 [基于PaddlePaddle的CFDGCN复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/5216848?channelType=0&channel=0)项目，以及 [PaddleScience 的开发与复现指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/)，使用 PaddleScience  API（[PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/)）等价实现该项目，开发代码风格与已有案例保持一致，训练精度与原论文对齐，并仿照已有文档撰写 CFDGCN 的案例文档，最终合入 PaddleScience。\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n\r\n## 4. 参考资料\r\n\r\n* [基于PaddlePaddle的CFDGCN复现 - 飞桨AI Studio](https://aistudio.baidu.com/aistudio/projectdetail/5216848)\r\n* [https://github.com/locuslab/cfd-gcn](https://github.com/locuslab/cfd-gcn)\r\n* [Filipe de Avila Belbute-Peres, Thomas D. Economon, and J. Zico Kolter. 2020. Combining differentiable PDE solvers and graph neural networks for fluid flow prediction. In Proceedings of the 37th International Conference on Machine Learning (ICML'20). JMLR.org, Article 224, 2402–2411.](https://proceedings.mlr.press/v119/de-avila-belbute-peres20a.html)\r\n\r\n## 奖励\r\n500 京东卡\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-22T03:14:55+00:00",
        "updated_at": "2023-12-26T06:37:33+00:00",
        "closed_at": "2023-12-26T06:37:33+00:00",
        "comments_count": [],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 448,
        "title": "【快乐开源】迁移 AMGNet 案例至 PaddleScience",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n**在 AIStudio 上已经有使用 PaddlePaddle 框架API 复现的项目：[AI for Science 共创计划 AMGNET 论文复现](https://aistudio.baidu.com/aistudio/projectdetail/5592458?channelType=0&channel=0)，现在希望能将这个项目迁移至 PaddleScience，也就是基于 PaddleScience 的 API 实现该项目，最终合入 PaddleScience 仓库**\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 熟悉图神经网络，并从该项目中了解相关流体力学知识，以及如何将物理公式融入到深度学习方法中\r\n* 学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 补充 AMGNET 案例至流体相关案例中，提升案例丰富度\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n参考 [AI for Science 共创计划 AMGNET 论文复现](https://aistudio.baidu.com/aistudio/projectdetail/5592458?channelType=0&channel=0)项目，以及 [PaddleScience 的开发与复现指南](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/)，使用 PaddleScience  API（[PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/)）等价实现该项目，开发代码风格与已有案例保持一致，训练精度与原论文对齐，并仿照已有文档撰写 AMGNet 的案例文档，最终合入 PaddleScience。\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)\r\n\r\n## 4. 参考资料\r\n\r\n* [AI for Science 共创计划 AMGNET 论文复现](https://aistudio.baidu.com/aistudio/projectdetail/5592458?channelType=0&channel=0)\r\n* [Paper: AMGNET: multi-scale graph neural networks for flow field prediction](https://doi.org/10.1080/09540091.2022.2131737)\r\n* [Github: AMGNet](https://github.com/baoshiaijhin/amgnet)\r\n\r\n## 奖励\r\n500 京东卡\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-07-25T08:13:37+00:00",
        "updated_at": "2023-10-23T05:02:15+00:00",
        "closed_at": "2023-10-23T05:02:15+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 449,
        "title": "【快乐开源】复现 Phy-LSTM 论文",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n在 PhyLSTM 论文中，引入了一个创新的物理信息LSTM框架，用于对具有稀缺数据的非线性结构系统进行元建模。基本概念是将可用但不完整的物理知识（例如，物理定律，科学原理）整合到深度长短期记忆（LSTM）网络中，从而限制和促进可行解决方案空间内的学习。将物理先验知识融入到损失函数中，以促使模型在非常有限的可用训练数据集下，也可以准确地捕获潜在的系统非线性。具体到动态结构，考虑运动方程的物理定律、状态依赖性和滞回本构关系来构造物理损耗。嵌入式物理场可以缓解过拟合问题，减少对大型训练数据集的需求，并提高训练模型的鲁棒性，以便通过外推能力进行更可靠的预测。因此，物理引导的深度学习范式优于经典的非物理引导的数据驱动神经网络。\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 熟悉经典网络模型 LSTM 及其基本原理，以及物理信息驱动与 LSTM 模型结合的方式\r\n* 掌握开源套件的开发流程和方法\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 补充 LSTM 结构至 Arch 模块\r\n* 补充 PhyLSTM 案例至相关案例中，提升案例丰富度\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n参考 Phy-LSTM 源代码，基于 PaddleScience 套件([PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/))进行复现，在训练精度对齐的前提下，完成复现并撰写对应文档\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)\r\n\r\n## 4. 参考资料\r\n\r\n- [Github - PhyLSTM](https://github.com/zhry10/PhyLSTM#readme)\r\n- [Physics-informed multi-LSTM networks for metamodeling of nonlinear structures](https://arxiv.org/abs/2002.10253)\r\n\r\n## 奖励\r\n500 京东卡\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-25T10:13:36+00:00",
        "updated_at": "2023-09-26T07:03:27+00:00",
        "closed_at": "2023-09-26T07:03:27+00:00",
        "comments_count": [
            "co63oc",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 450,
        "title": "【快乐开源】为 PaddleScience 添加 HamiltonianMonteCarlo API",
        "body": "> This project will be mentored by @[﻿HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n## 1. 背景\r\n\r\n概率编程语言 (PPL) 通过将概率与编程语言的表示能力相结合来解决不确定性问题。概率程序是普通确定性计算和代表数据生成过程的随机采样值的混合。将抽象的概率计算转化为随机梯度下降来解决具体优化问题，使概率方法适用于以前难以处理的模型和数据集大小。\r\n\r\n## 2. 收益\r\n\r\n### 2.1 个人收益\r\n\r\n* 了解概率编程的基本原理和使用概率编程的基本思想和方法\r\n* 掌握开源套件的开发流程和方法\r\n\r\n### 2.2 PaddleScience 收益\r\n\r\n* 添加一个 HamiltonianMonteCarlo 概率编程 API 到 `ppsci.probability` 模块下(目前 `ppsci` 目录下没有这个 `probability` 模块，本题目的 API 实现完毕后需要新建该模块即可)\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git](https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git)\r\n\r\n### 3.2 代码开发\r\n\r\n使用现有 PaddlePaddle 框架的 API（[PaddlePaddle 概率相关 API 文档](https://www.paddlepaddle.org.cn/documentation/docs/zh/develop/api/paddle/distribution/Overview_cn.html)）进行实现，并将实现逻辑包装至合适的函数（假设名字为 `func`），以 `ppsci.probability.func` 的形式供用户调用（[PaddleScience API 文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/arch/)）。\r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)\r\n\r\n## 4. 参考资料\r\n\r\n- [tfp.mcmc.HamiltonianMonteCarlo](https://tensorflow.google.cn/probability/overview?hl=zh-cn)\r\n- [Pyro-HMC](https://docs.pyro.ai/en/stable/mcmc.html?highlight=Hamiltonian#hmc)\r\n\r\n## 奖励\r\n500 京东卡\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-07-25T11:50:48+00:00",
        "updated_at": "2023-09-12T02:19:55+00:00",
        "closed_at": "2023-09-12T02:19:55+00:00",
        "comments_count": [
            "NKNaN",
            "HydrogenSulfate",
            "cxxly"
        ],
        "labels": []
    },
    {
        "error": "'NoneType' object has no attribute 'repository'",
        "issue_number": 547
    },
    {
        "error": "'NoneType' object has no attribute 'repository'",
        "issue_number": 552
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 482,
        "title": "where is volterra",
        "body": "### 请提出你的问题 Please ask your question\n\nI don't find the module Volterra in ppsci which write in API docs(ppsci.equation.Volterra), this module has been deleted?",
        "state": "closed",
        "user": "Tr-buaa",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-08-10T06:01:39+00:00",
        "updated_at": "2023-08-14T06:31:04+00:00",
        "closed_at": "2023-08-14T06:31:04+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 516,
        "title": "优化文档结构，增强非专业领域人员可读性，增加应用场景描述，实验图表注明各变量物理意义",
        "body": "### 问题描述 Please describe your issue\n\n1. 增加AI For Science背景介绍，可以增加一栏，进行AI4S介绍\r\n2. 实验结果说明图中各个变量物理意义，阐述图表要表达的信息，结论\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/8372068/512ce7c0-9d63-45c9-9b8b-622b030bb213)\r\n3. 每个案例中增加一节描述应用场景，尽可能简明易懂\r\n",
        "state": "closed",
        "user": "cxxly",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-09-01T02:38:48+00:00",
        "updated_at": "2023-10-16T09:50:27+00:00",
        "closed_at": "2023-10-16T09:50:27+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "lijialin03",
            "zhiminzhang0830"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 531,
        "title": "安装paddlescience报错",
        "body": "### 问题描述 Issue Description\n\n![NFZFIK}69FB%`%9 )3QZU_4](https://github.com/PaddlePaddle/PaddleScience/assets/110820271/a71ae1fc-9584-4b06-9966-a3c7e6610008)\r\n\n\n### 版本&环境信息 Version & Environment Information\n\nPaddlePaddle版本： cpu版0.0.0\r\n系统环境：Ubuntu 20.04.2 \r\nPython版本:3.9.17\r\nGPU：A100，CUDA11.6\r\n执行：python -c \"import ppsci; ppsci.run_check_mesh()\"时报错：\r\n![NFZFIK}69FB%`%9 )3QZU_4](https://github.com/PaddlePaddle/PaddleScience/assets/110820271/f04d5de2-7381-49d5-987e-b4020816a329)\r\n\r\n\r\n",
        "state": "closed",
        "user": "Duyz232",
        "closed_by": "HydrogenSulfate",
        "created_at": "2023-09-07T14:23:36+00:00",
        "updated_at": "2023-09-21T06:47:40+00:00",
        "closed_at": "2023-09-21T06:47:40+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Duyz232",
            "HydrogenSulfate",
            "Duyz232",
            "HydrogenSulfate",
            "Duyz232",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 571,
        "title": "【快乐开源】基于hydra的案例改造计划",
        "body": "> This project will be mentored by @[HydrogenSulfate](https://github.com/HydrogenSulfate)\r\n\r\n**报名格式参考：**`【报名】：2、3`，多个任务之间需要使用中文顿号分隔，报名多个连续任务可用横线表示，如 `2-5`\r\n**PR 提交格式：在 PR 的标题中以 【hydra No.xxx】 开头，注明任务编号**\r\n\r\n## 1. 背景\r\n\r\nPaddleScience 现有案例只提供了训练代码，没有显式地给出训练命令，也没有提供预训练模型供用户快速进行推理体验；同时现有案例的超参数与代码文件耦合，在实验管理上并不方便。因此为了提升用户体验，期望在案例文档开头，提供训练命令；另外经过调研，引入了 [facebook/hydra](https://hydra.cc/) 配置管理和解析库，方便实验管理和解析。\r\n\r\n### 1.1 Hydra 是什么\r\n\r\n> ~~Hydra是漫威漫画旗下的超级反派组织，初次登场于《Strange Tales》第135期。该组织的起源可以追溯到一位名叫蜂巢的异人，因其能力过强而被送往遥远的星球。Hydra的标志为骷髅头与下方的蛇足，口号是“砍掉一个头，再长出两个头取而代之”，与神话中的九头蛇海德拉形象相契合。该组织以其无穷无尽的杂兵和强大的再生能力实现这一口号。在现代，一般是将分支NAZI Hydra作为九头蛇组织的主要代表，但并非正统的Hydra。该组织曾隶属于二战中的纳粹德国，并在纳粹政权倒台后渗透进神盾局中，利用神盾局的旗号制造恐慌混乱，从战争中获得利益。- 来自文心一言~~\r\n\r\n> Hydra是一个开源的Python框架，简化了研究和其他复杂应用程序的开发。 关键功能是能够按组合动态创建分层配置，并通过配置文件和命令行覆盖它。 Hydra这个名字来自于它能够运行多个类似的工作 - 很像具有多个头的Hydra\r\n\r\nHydra 是一个基于 YAML 格式配置文件和 Omegaconf 分层配置系统的实验管理工具。\r\n\r\n### 1.2 如何利用 Hydra 如何提升实验效率\r\n\r\n- 利用 hydra 支持配置组合的特性，可以将实验所需配置子集分散到各个 YAML 文件中，然后在启动的时候通过命令行读取特定的配置，来启动特定的实验。实验启动后会按照运行日期建立文件夹并用于保存实验输出内容，避免数据丢失等问题。\r\n- 利用 hydra 的另一个功能 - `multirun`，通过命令行设置实验参数列表，即可在 python 启动自动串行的实验\r\n\r\n由于 hydra 功能丰富而开发者并不需要完全了解这些功能，因此 PaddleScience 提供了简要的说明：<https://paddlescience-docs.readthedocs.io/zh/latest/zh/user_guide/#111>。 可参考该文档了解在 PaddleScience 中如何使用 hydra 的基本功能。\r\n\r\n## 2. 收益\r\n\r\n了解开源组合配置管理工具 hydra 及其基本语法，提升实验效率。\r\n\r\n## 3. 开发流程\r\n\r\n### 3.1 安装 PaddleScience\r\n\r\n下载安装 PaddleScience 套件：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git\r\n\r\n### 3.2 参考教程，改造案例代码\r\n\r\n1. 参考 PaddleScience + hydra 的使用教程：https://paddlescience-docs.readthedocs.io/zh/latest/zh/user_guide/#11-yaml-hydra\r\n2. 改造现有案例代码：将原来的 `__main__`下面的代码移动至 `train(cfg)`中，然后将 train 部分的评估/推理代码放至新建的 `evaluate(cfg)`函数中，最后在`__main__`中通过 `def main(cfg: DictConfig)`启动案例代码\r\n3. 修改对应文档中引用代码块的起始位置和终止位置，并在文档开头添加训练命令（考虑到快乐开源开发者可能没有算力，无需添加对应的预训练模型和推理命令，如需数据集则需要加上下载、解压命令）\r\n\r\n整体代码可参考 bracket 案例改造 PR 中的 `bracket.py`、`bracket.yaml`、`bracket.md` 三个文件：https://github.com/PaddlePaddle/PaddleScience/pull/569/files#diff-66a907ab8353125bfd79670b3892e23360967493faf6fd74c2b8aa9bc99b7b6b。\r\n文档改造效果可以参考 bracket 文档：https://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/bracket/\r\n\r\n| 序号 | 案例                                              | 认领人/状态/PR号 |\r\n| ---- | ------------------------------------------------- | ------ | \r\n| 1 | examples/volterra_ide.md | @enkilee <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@HydrogenSulfate <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#572](https://github.com/PaddlePaddle/PaddleScience/pull/572)<br> | \r\n| 2 | examples/laplace2d.md | @xusuyong <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#572](https://github.com/PaddlePaddle/PaddleScience/pull/575) [#575](https://github.com/PaddlePaddle/PaddleScience/pull/575)<br>@HydrogenSulfate <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br> | \r\n| 3 | examples/viv.md | @dddlli <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#622](https://github.com/PaddlePaddle/PaddleScience/pull/622)<br> | \r\n| 4 | examples/aneurysm.md | @enkilee <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#607](https://github.com/PaddlePaddle/PaddleScience/pull/607)<br> | \r\n| 5 | examples/shock_wave.md | @DrRyanHuang <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#627](https://github.com/PaddlePaddle/PaddleScience/pull/627)<br> | \r\n| 6 | examples/cylinder2d_unsteady.md | @zbt78 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#624](https://github.com/PaddlePaddle/PaddleScience/pull/624)<br> | \r\n| 7 | examples/ldc2d_unsteady.md | @lknt <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#580](https://github.com/PaddlePaddle/PaddleScience/pull/580)<br> | \r\n| 8 | examples/ldc2d_steady.md | @lknt <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#599](https://github.com/PaddlePaddle/PaddleScience/pull/599)<br> | \r\n| 9 | examples/darcy2d.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#590](https://github.com/PaddlePaddle/PaddleScience/pull/590)<br> | \r\n| 10 | examples/labelfree_DNN_surrogate.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#591](https://github.com/PaddlePaddle/PaddleScience/pull/591)<br> | \r\n| 11 | examples/hpinns.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#582](https://github.com/PaddlePaddle/PaddleScience/pull/582)<br> | \r\n| 12 | examples/deephpms.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#603](https://github.com/PaddlePaddle/PaddleScience/pull/603)<br> | \r\n| 13 | examples/lorenz.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#587](https://github.com/PaddlePaddle/PaddleScience/pull/587) [#602](https://github.com/PaddlePaddle/PaddleScience/pull/602)<br> | \r\n| 14 | examples/rossler.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#588](https://github.com/PaddlePaddle/PaddleScience/pull/588) [#602](https://github.com/PaddlePaddle/PaddleScience/pull/602)<br> | \r\n| 15 | examples/deeponet.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#589](https://github.com/PaddlePaddle/PaddleScience/pull/589)<br> | \r\n| 16 | examples/cylinder2d_unsteady_transformer_physx.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#602](https://github.com/PaddlePaddle/PaddleScience/pull/602)<br> | \r\n| 17 | examples/tempoGAN.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#592](https://github.com/PaddlePaddle/PaddleScience/pull/592)<br> | \r\n| 18 | examples/deepcfd.md | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#583](https://github.com/PaddlePaddle/PaddleScience/pull/583)<br> | \r\n| 19 | examples/phylstm.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#579](https://github.com/PaddlePaddle/PaddleScience/pull/579)<br> | \r\n| 20 | examples/bubble.md | @co63oc <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#581](https://github.com/PaddlePaddle/PaddleScience/pull/581)<br> | \r\n\r\n## 3.3 整理代码并提交PR\r\n\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n\r\n## 4. 参考资料\r\n\r\n- https://hydra.cc/docs/intro/\r\n\r\n## 5. 奖励\r\n- https://github.com/PaddlePaddle/Paddle/issues/56689 每 3 个月统计一次贡献情况，具体来说就是标签为 [HappyOpenSource](https://github.com/PaddlePaddle/PaddleScience/labels/HappyOpenSource) 的 PR，并依据贡献情况为各位开发者邮寄礼物 🎁，本期活动从 8.11 开启，至 11.11 截止统计。\r\n## 看板信息 \r\n| 任务方向 | 任务数量 | 提交作品 / 任务认领 | 提交率 | 完成 | 完成率 |\r\n| :----: | :----: | :----:  | :----: | :----: | :----: |\r\n| 热身赛 | 20 | 20 / 20 | 100.0% | 20 | 100.0% |\r\n#####\r\n\r\n## 统计信息 \r\n> 排名不分先后 @HydrogenSulfate (1) @xusuyong (1) @GreatV (1) @enkilee (1) @DrRyanHuang (1) @zbt78 (1) @lknt (2) @co63oc (11) @MayYouBeProsperous (1) \r\n#####\r\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-10-16T09:41:23+00:00",
        "updated_at": "2024-08-22T16:32:38+00:00",
        "closed_at": "2023-11-15T07:41:44+00:00",
        "comments_count": [
            "enkilee",
            "MayYouBeProsperous",
            "lknt",
            "HydrogenSulfate",
            "DrRyanHuang",
            "GreatV",
            "zbt78",
            "luotao1"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 668,
        "title": "【快乐开源】补充汽车CFD数据集(Ahmed)至 PaddleScience",
        "body": "> This project will be mentored by @wangguan1995 \r\n## 1. 背景\r\n计算流体动力学 (CFD) 已成为工程和计算制造领域中用于设计评估和优化不可或缺的组成部分。 成功的应用包括改善汽车和飞机的空气动力学、改进建筑规划中的供暖、通风和空调，或者优化制造中的铸造和注塑成型。目前PaddleScience缺少三维流体数据集，因此补充一些汽车流场分析相关的数据，并进行详细说明。\r\n## 2. 收益\r\n### 2.1 个人收益\r\n学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n熟悉 汽车领域相关知识\r\n熟悉 流体领域相关知识\r\n### 2.2 PaddleScience 收益\r\n补充 PaddleScience在流体方向数据集\r\n补充 汽车领域数据集\r\n## 3. 开发流程\r\n### 3.1 安装 PaddleScience\r\n下载安装 PaddleScience 套件：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git\r\n### 3.2 代码开发\r\n详细阅读论文[Some Salient Features of the Time -Averaged Ground Vehicle Wake](https://flowvision.ru/images/articles/2020/Add_files/Ahmed_1984.pdf)\r\n详细阅读论文[Geometry-Informed Neural Operator for Large-Scale 3D PDEs]https://arxiv.org/pdf/2309.00583\r\n进行总结，仿照已有文档撰写 Ahmed数据集 的案例文档，最终合入 PaddleScience\r\n要求图文并茂，对数据格式，类型，使用方式详细说明\r\n制作下载链接\r\n将数据上传至AIstudio\r\n参考[labelfree_DNN_surrogate](https://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/labelfree_DNN_surrogate/), 编写文档\r\n使用mkdocs serve编译文档，检查错误\r\n### 3.3 整理代码并提交PR\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n## 4. 参考资料\r\nhttps://arxiv.org/abs/2207.05209\r\nhttps://drive.google.com/drive/folders/1PMuOGUO2A9rzAP3YM8ra3v8ybE8X9foh\r\nhttps://flowvision.ru/images/articles/2020/Add_files/Ahmed_1984.pdf\r\n## 奖励\r\n200 京东卡\r\n\r\n### 替代实现 Alternatives\r\n\r\n_No response_",
        "state": "closed",
        "user": "luotao1",
        "closed_by": "luotao1",
        "created_at": "2023-11-24T10:14:04+00:00",
        "updated_at": "2025-01-14T07:36:50+00:00",
        "closed_at": "2025-01-14T07:36:50+00:00",
        "comments_count": [],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 666,
        "title": "【快乐开源】补充汽车CFD数据集(Shape-Net Car)至 PaddleScience ",
        "body": "> This project will be mentored by @wangguan1995 \r\n\r\n## 1. 背景\r\n计算流体动力学 (CFD) 已成为工程和计算制造领域中用于设计评估和优化不可或缺的组成部分。 成功的应用包括改善汽车和飞机的空气动力学、改进建筑规划中的供暖、通风和空调，或者优化制造中的铸造和注塑成型。目前PaddleScience缺少三维流体数据集，因此补充一些汽车流场分析相关的数据，并进行详细说明。\r\n## 2. 收益\r\n### 2.1 个人收益\r\n学习 PaddleScience 套件代码，掌握开源套件开发基本知识\r\n熟悉 汽车领域相关知识\r\n熟悉 流体领域相关知识\r\n### 2.2 PaddleScience 收益\r\n补充 PaddleScience在流体方向数据集\r\n补充 汽车领域数据集\r\n## 3. 开发流程\r\n### 3.1 安装 PaddleScience\r\n下载安装 PaddleScience 套件：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#121-git\r\n### 3.2 代码开发\r\n详细阅读论文[Learning Three-Dimensional Flow for Interactive Aerodynamic Design](https://core.ac.uk/download/pdf/268224768.pdf)\r\n进行总结，仿照已有文档撰写 Shape Net Car 的案例文档，最终合入 PaddleScience\r\n要求图文并茂，对数据格式，类型，使用方式详细说明\r\n制作下载链接\r\n将数据上传至AIstudio\r\n参考[labelfree_DNN_surrogate](https://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/labelfree_DNN_surrogate/), 编写文档\r\n使用mkdocs serve编译文档，检查错误\r\n### 3.3 整理代码并提交PR\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n## 4. 参考资料\r\nhttps://arxiv.org/abs/2207.05209\r\nhttps://drive.google.com/drive/folders/1PMuOGUO2A9rzAP3YM8ra3v8ybE8X9foh\r\nhttps://core.ac.uk/download/pdf/268224768.pdf\r\n\r\n## 奖励\r\n200 京东卡\r\n",
        "state": "closed",
        "user": "wangguan1995",
        "closed_by": "luotao1",
        "created_at": "2023-11-24T06:24:10+00:00",
        "updated_at": "2025-01-14T07:36:14+00:00",
        "closed_at": "2025-01-14T07:36:14+00:00",
        "comments_count": [],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 576,
        "title": "bracket评估命令错误",
        "body": "### bug 描述 bug description\n\nhttps://paddlescience-docs.readthedocs.io/zh/latest/zh/examples/bracket/\r\n\r\n```\r\npython bracket.py mode=eval EVAL.pretrained_model_path=https://paddle-org.bj.bcebos.com/paddlescience/models/bracket/bracket_pretrained.pdparams\r\n```\r\n评估命令错误，不能识别的参数\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/4617245/6acab694-0447-43ff-8df0-d867194bac95)\r\n\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "co63oc",
        "closed_by": "co63oc",
        "created_at": "2023-10-18T10:58:39+00:00",
        "updated_at": "2023-10-18T11:57:39+00:00",
        "closed_at": "2023-10-18T11:57:39+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 621,
        "title": "关于定常问题初始流场设置",
        "body": "### 请提出你的问题 Please ask your question\n\n        你好，当我想对一个定常问题设置初始流场时该怎样做呢？比如说：求解定常的柱内的R-B对流，初始流场温度设置不同，最后得到的流场不同（upflow和downflow）。\r\n        API文档中的初始约束InitialConstraint作用的geom是时空混合的TimeXGeometry，当求解定常问题时可以用这个来作初始约束吗？如果可以，timedomain又该如何设置呢？\r\n        又或者说，PINN无法求解这类定常有初始约束的问题？很抱歉提了这么多问题，我是PINN的初学者，希望能得到回复。",
        "state": "closed",
        "user": "gerjf22",
        "closed_by": "gerjf22",
        "created_at": "2023-11-03T03:13:56+00:00",
        "updated_at": "2023-11-03T07:56:09+00:00",
        "closed_at": "2023-11-03T07:56:09+00:00",
        "comments_count": [
            "jkrescue",
            "gerjf22"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 696,
        "title": "如何实现求三阶导数",
        "body": "### 请提出你的问题 Please ask your question\n\n我在计算三阶导数时出了一些问题。\r\n\r\n当我需要求 d^3u/dxdy^2 时（即u先对y求二阶导，再对x求一阶导），我先计算 du_yy = hessian(u, y)，再计算 du_yyx = jacobian(du_yy, x)。\r\n\r\n报错为：RuntimeError: (Unavailable) The Op add_triple_grad doesn't have any gradop. If you don't intend calculating higher orderderivatives, please set `create_graph`to False.\r\n\r\n请问该怎样实现呢？",
        "state": "closed",
        "user": "gerjf22",
        "closed_by": "gerjf22",
        "created_at": "2023-12-13T02:44:10+00:00",
        "updated_at": "2023-12-13T07:30:12+00:00",
        "closed_at": "2023-12-13T07:27:06+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "gerjf22",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 686,
        "title": "【快乐开源】科学计算 API 文档补全",
        "body": "# API 文档补全\n\n以下是待补全 docstring 的 API 列表（共 109 个）\n\n| 序号 | API 名称 | 认领人/状态/PR号 |\n| :--- | :--- | :--- |\n| 1 | ppsci.data.process.transform.CropData | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#687](https://github.com/PaddlePaddle/PaddleScience/pull/687)<br> | \n| 2 | ppsci.data.process.transform.FunctionalTransform | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 3 | ppsci.data.process.transform.Log1p | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 4 | ppsci.data.process.transform.Normalize | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 5 | ppsci.data.process.transform.Scale | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 6 | ppsci.data.process.transform.SqueezeData | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 7 | ppsci.data.process.transform.Translate | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#688](https://github.com/PaddlePaddle/PaddleScience/pull/688)<br> | \n| 8 | ppsci.data.dataset.ERA5SampledDataset | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#691](https://github.com/PaddlePaddle/PaddleScience/pull/691)<br> | \n| 9 | ppsci.data.dataset.VtuDataset | @Liyulingyue <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#791](https://github.com/PaddlePaddle/PaddleScience/pull/791)<br> | \n| 10 | ppsci.data.dataset.MeshAirfoilDataset | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#724](https://github.com/PaddlePaddle/PaddleScience/pull/724)<br> | \n| 11 | ppsci.data.dataset.MeshCylinderDataset | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#724](https://github.com/PaddlePaddle/PaddleScience/pull/724)<br> | \n| 12 | ppsci.arch.Arch.concat_to_tensor | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 13 | ppsci.arch.Arch.register_input_transform | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 14 | ppsci.arch.Arch.register_output_transform | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 15 | ppsci.arch.Arch.split_to_dict | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 16 | ppsci.arch.Arch.freeze | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 17 | ppsci.arch.Arch.unfreeze | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#752](https://github.com/PaddlePaddle/PaddleScience/pull/752)<br> | \n| 18 | ppsci.arch.MLP | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#732](https://github.com/PaddlePaddle/PaddleScience/pull/732)<br> | \n| 19 | ppsci.arch.DeepONet | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#732](https://github.com/PaddlePaddle/PaddleScience/pull/732)<br> | \n| 20 | ppsci.arch.DeepPhyLSTM | @megemini <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#756](https://github.com/PaddlePaddle/PaddleScience/pull/756)<br> | \n| 21 | ppsci.arch.LorenzEmbedding | @Turingg <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#780](https://github.com/PaddlePaddle/PaddleScience/pull/780)<br> | \n| 22 | ppsci.arch.RosslerEmbedding | @Turingg <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#780](https://github.com/PaddlePaddle/PaddleScience/pull/780)<br> | \n| 23 | ppsci.arch.CylinderEmbedding | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 24 | ppsci.arch.Generator | @Turingg <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#802](https://github.com/PaddlePaddle/PaddleScience/pull/802) [#804](https://github.com/PaddlePaddle/PaddleScience/pull/804)<br> | \n| 25 | ppsci.arch.Discriminator | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 26 | ppsci.arch.PhysformerGPT2 | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 27 | ppsci.arch.ModelList | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 28 | ppsci.arch.AFNONet | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 29 | ppsci.arch.PrecipNet | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 30 | ppsci.arch.UNetEx | @MayYouBeProsperous <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#724](https://github.com/PaddlePaddle/PaddleScience/pull/724)<br> | \n| 31 | ppsci.arch.NowcastNet | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 32 | ppsci.autodiff.Jacobians.\\_\\_call\\_\\_ | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 33 | ppsci.autodiff.Hessians .\\_\\_call\\_\\_ | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 34 | ppsci.autodiff.clear | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 35 | ppsci.equation.PDE.add_equation | @WoWYoYLoL <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#846](https://github.com/PaddlePaddle/PaddleScience/pull/846)<br> | \n| 36 | ppsci.equation.PDE.create_function | @WoWYoYLoL <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#846](https://github.com/PaddlePaddle/PaddleScience/pull/846)<br> | \n| 37 | ppsci.equation.PDE.create_symbols | @WoWYoYLoL <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#846](https://github.com/PaddlePaddle/PaddleScience/pull/846)<br> | \n| 38 | ppsci.equation.PDE.parameters | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#826](https://github.com/PaddlePaddle/PaddleScience/pull/826)<br> | \n| 39 | ppsci.equation.PDE.set_state_dict | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#826](https://github.com/PaddlePaddle/PaddleScience/pull/826)<br> | \n| 40 | ppsci.equation.PDE.state_dict | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#826](https://github.com/PaddlePaddle/PaddleScience/pull/826)<br> | \n| 41 | ppsci.geometry.Geometry.\\_\\_and\\_\\_ | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 42 | ppsci.geometry.Geometry.\\_\\_or\\_\\_ | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 43 | ppsci.geometry.Geometry.\\_\\_sub\\_\\_ | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 44 | ppsci.geometry.Geometry.\\_\\_str\\_\\_ | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 45 | ppsci.geometry.Geometry.difference | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 46 | ppsci.geometry.Geometry.intersection | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 47 | ppsci.geometry.Geometry.is_inside | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 48 | ppsci.geometry.Geometry.on_boundary | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 49 | ppsci.geometry.Geometry.periodic_point | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 50 | ppsci.geometry.Geometry.random_boundary_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 51 | ppsci.geometry.Geometry.random_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 52 | ppsci.geometry.Geometry.sample_boundary | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 53 | ppsci.geometry.Geometry.sample_interior | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 54 | ppsci.geometry.Geometry.sdf_derivatives | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 55 | ppsci.geometry.Geometry.uniform_boundary_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 56 | ppsci.geometry.Geometry.uniform_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 57 | ppsci.geometry.Geometry.union | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#833](https://github.com/PaddlePaddle/PaddleScience/pull/833)<br> | \n| 58 | ppsci.geometry.Mesh.from_pymesh | @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#818](https://github.com/PaddlePaddle/PaddleScience/pull/818)<br> | \n| 59 | ppsci.geometry.Mesh.scale | @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#818](https://github.com/PaddlePaddle/PaddleScience/pull/818)<br> | \n| 60 | ppsci.geometry.Mesh.translate | @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#818](https://github.com/PaddlePaddle/PaddleScience/pull/818)<br> | \n| 61 | ppsci.geometry.PointCloud.translate | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#839](https://github.com/PaddlePaddle/PaddleScience/pull/839)<br> | \n| 62 | ppsci.geometry.PointCloud.scale | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#839](https://github.com/PaddlePaddle/PaddleScience/pull/839)<br> | \n| 63 | ppsci.geometry.PointCloud.random_boundary_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#839](https://github.com/PaddlePaddle/PaddleScience/pull/839)<br> | \n| 64 | ppsci.geometry.PointCloud.random_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#839](https://github.com/PaddlePaddle/PaddleScience/pull/839)<br> | \n| 65 | ppsci.geometry.PointCloud.uniform_points | @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#839](https://github.com/PaddlePaddle/PaddleScience/pull/839)<br> | \n| 66 | ppsci.geometry.TimeDomain.on_initial | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 67 | ppsci.geometry.TimeXGeometry.uniform_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 68 | ppsci.geometry.TimeXGeometry.random_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 69 | ppsci.geometry.TimeXGeometry.uniform_boundary_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 70 | ppsci.geometry.TimeXGeometry.random_boundary_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 71 | ppsci.geometry.TimeXGeometry.uniform_initial_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 72 | ppsci.geometry.TimeXGeometry.random_initial_points | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 73 | ppsci.geometry.TimeXGeometry.periodic_point | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 74 | ppsci.geometry.TimeXGeometry.sample_initial_interior | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#829](https://github.com/PaddlePaddle/PaddleScience/pull/829)<br> | \n| 75 | ppsci.loss.FunctionalLoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 76 | ppsci.loss.L1Loss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#701](https://github.com/PaddlePaddle/PaddleScience/pull/701)<br> | \n| 77 | ppsci.loss.L2Loss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 78 | ppsci.loss.L2RelLoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 79 | ppsci.loss.MAELoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 80 | ppsci.loss.MSELoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 81 | ppsci.loss.MSELossWithL2Decay | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 82 | ppsci.loss.IntegralLoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 83 | ppsci.loss.PeriodicL1Loss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 84 | ppsci.loss.PeriodicL2Loss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 85 | ppsci.loss.PeriodicMSELoss | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#703](https://github.com/PaddlePaddle/PaddleScience/pull/703)<br> | \n| 86 | ppsci.metric.FunctionalMetric | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 87 | ppsci.metric.MAE | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 88 | ppsci.metric.MSE | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 89 | ppsci.metric.RMSE | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 90 | ppsci.metric.L2Rel | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 91 | ppsci.metric.MeanL2Rel | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 92 | ppsci.solver.Solver.predict | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#723](https://github.com/PaddlePaddle/PaddleScience/pull/723)<br> | \n| 93 | ppsci.utils.initializer.linear_init_ | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 94 | ppsci.utils.initializer.conv_init_ | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 95 | ppsci.utils.misc.PrettyOrderedDict | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 96 | ppsci.utils.misc.Prettydefaultdict | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 97 | ppsci.utils.misc.all_gather | @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#840](https://github.com/PaddlePaddle/PaddleScience/pull/840)<br> | \n| 98 | ppsci.utils.misc.concat_dict_list | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 99 | ppsci.utils.misc.convert_to_array | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 100 | ppsci.utils.misc.convert_to_dict | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 101 | ppsci.utils.misc.stack_dict_list | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 102 | ppsci.utils.misc.combine_array_with_time | @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#730](https://github.com/PaddlePaddle/PaddleScience/pull/730)<br> | \n| 103 | ppsci.utils.misc.run_at_rank0 | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#758](https://github.com/PaddlePaddle/PaddleScience/pull/758)<br> | \n| 104 | ppsci.utils.save_load.save_checkpoint | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#759](https://github.com/PaddlePaddle/PaddleScience/pull/759)<br> | \n| 105 | ppsci.utils.save_load.load_pretrain | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#759](https://github.com/PaddlePaddle/PaddleScience/pull/759)<br> | \n| 106 | ppsci.visualize.save_vtu_from_dict | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#762](https://github.com/PaddlePaddle/PaddleScience/pull/762)<br> | \n| 107 | ppsci.visualize.save_vtu_to_mesh | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#763](https://github.com/PaddlePaddle/PaddleScience/pull/763)<br> | \n| 108 | ppsci.visualize.save_plot_from_1d_dict | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#764](https://github.com/PaddlePaddle/PaddleScience/pull/764)<br> | \n| 109 | ppsci.visualize.save_plot_from_3d_dict | @ooooo-create <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#764](https://github.com/PaddlePaddle/PaddleScience/pull/764)<br> | \n\n### 认领方式\n\n请大家以 comment 的形式认领任务，如：\n\n```\n【报名】：1、3、12-13\n```\n\n多个任务之间需要使用**中文顿号**分隔，报名多个连续任务可用横线表示，如 2-5\nPR 提交格式：在 PR 的标题中以 **【PPSCI Doc No.xxx】** 开头，注明任务编号\n\n## 看板信息\n| 任务方向 | 任务数量 | 提交作品 / 任务认领 | 提交率 | 完成 | 完成率 |\n| :----: | :----: | :----:  | :----: | :----: | :----: |\n| 快乐开源 | 109 | 109 / 109 | 100.0% | 109 | 100.0% |\n#####\n\n## 统计信息 \n> 排名不分先后 @Liyulingyue (9) @MayYouBeProsperous (5) @megemini (7) @Turingg (3) @1want2sleep (23) @WoWYoYLoL (3) @wufei2 (22) @smallpoxscattered (3) @NKNaN (27) @ooooo-create (7) \n#####\n\n## 1. 背景\n\nPaddleScience 目前有许多公开 API，通过 docstring 的方式给用户指示 API 功能简要描述，以及调用时涉及参数个数/类型、输出个数/类型，帮助用户更好地理解一个 API 的具体用法和使用场景。\n\n具体地，一个好的 docstring 应该至少包含四个部分（按顺序排列，以 `ppsci.utils.misc.cartesian_product`为例）：\n\n1. 函数功能简要说明\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/9c978a39-9ed3-4a2f-a523-a93ad3408bce)\n2. 输入参数描述\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/7d6acea6-5643-430e-92a9-d2ac8261db2a)\n3. 返回值描述\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/d61f165d-0b8a-4063-a135-30a12ab219e0)\n4. 样例代码\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/1c2a7cbe-3a4e-4b7e-9702-4d3eed09e834)\n\n文档最终在网页端的渲染效果如下:\n\n  ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/877f37fe-985a-4eeb-b793-d9e2cfd9807b)\n\n但目前在 PaddleScience 中，有少量公开 API 的文档是缺少以上要素的，具体分为几种情况\n\n1. 缺少参数、返回值描述、样例代码，如下所示\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/f55c2e89-d26f-42d8-a5b8-00cd97b67e09)\n\n2. 缺少样例代码，如下所示\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/cd048483-e695-4071-a4fc-cc0ca395af66)\n\n3. 样例代码不具有代表性，即无法告诉用户它的正确使用场景，仅仅说明了其最简单的调用方法\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/28496260-d65c-49ed-943e-19a3e1a1c474)\n\n4. 文档格式不正确（如缺少换行）导致渲染失败\n\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/a1118f47-7a38-4243-b269-b28a72e6cc6f)\n\n因此当用户在使用上述这些 API 时，可能无法快速、正确地知道它们能做什么以及在什么场景下使用，尤其是一部分实现较为复杂的 API，其理解成本会更高。最终导致开发的 API 因为无法被用户知悉而不被使用，既浪费了 API 开发的人力，也增加了用户自己实现的成本。\n\n## 2. 收益\n\n* 对于 PaddleScience 来说，完善 API 文档能显著减少用户的使用难度，增加 API 实际使用率，帮助用户更快地实现所需的功能。\n* 对于参加本活动的开发者来说，可以学习以下三个方面的内容\n\n   1. 如何编写一个好的 API 文档。\n   2. 如何使用 doctest 插件对样例代码进行测试，让样例代码不仅能看，还能用于测试，保证 API 基本运行能力。\n   3. 如何将 API 文档在项目文档中进行渲染，提升项目的规范性和可阅读性\n\n## 3. 待完善的 API 文档\n\n参考文档开头的表格\n\n## 4. 开发流程\n\n### 4.1. 撰写\n\n1. 文档要素缺失的情况具体该如何补全呢？\n    * 缺少参数、返回值类型的，补全参数和返回值类型；\n    * 缺少样例代码的，补全具有代表性的样例代码；\n    * 格式不正确的，修正格式；\n\n2. 样例代码如何撰写？\n    * 样例代码撰写方法与 python 交互式命令相同，以 `>>>` 的一行代码会直接执行，以 `...`开头的代码与 `>>>` 区分，并不会马上执行，而是会等到下一个 `>>>` 或者代码块结束，与中间遇到的所有代码组成完整的代码再执行，一般用于带缩进的代码结构，如 for、while、函数调用等完整代码块超过一行的情况。\n\n3. 有的 API 样例代码并不会产生任何输出，该如何进行检查？\n    * 若用 doctest 对样例代码的输出结果进行检查，则可以将期望的结果粘贴在代码结束后，如下所示。这种情况常见于计算类的 API。![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/58ed4d96-fd50-4b95-984a-301cb43c7bc4)\ndoctest 会自动将打印的txy与红框中的值进行比较，如果不一致则会报错。\n    * 若被 doctest 检查的代码并不具有输出值，即属于跑通就算测试通过的情况，则不需要在末尾粘贴期望结果，如下所示。这种情况常见于装饰器等辅助类 API ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/e3751961-d724-4773-a11a-045021e714a9)\n\n### 4.2. doctest 测试\n\n首先安装 doctest，执行：`pip install pydoctest==0.1.22`\n\n然后运行 doctest并测试指定文件，执行：`python -m doctest xxxx.py`，如测试未通过则需要重新修改案例代码直至通过。此处 `xxx.py` 是你修改后的 docstring 所在的代码文件路径（建议使用绝对路径）。\n\n### 4.3. 文档渲染\n\n文档渲染基本原理：项目文档渲染依赖于 mkdocs、mkdocs-material，而其中的 API 文档涉及到代码引用（避免维护python和文档两份代码，而是直接从 python 文件中抽取对应位置的代码展示在网页前端）功能，依赖于 mkdocstrings 插件（可以在 `PaddleScience/mkdocs.yml`中找到相关配置）。\n\n1. 安装文档依赖：`pip install docs/requirements.txt`\n2. 在 `PaddleScience/` 目录下执行： `mkdocs serve -a 127.0.0.1:8687`。等待终端渲染完毕，打印出预览地址，在网页端打开并进入 【API 文档】中找到自己修改的内容，即可预览修改效果。如下所示\n    ![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/5f79b9e4-52de-47d1-baac-3e429d719088)\n\n\n### 4.4. 代码提交\n\n> [!IMPORTANT]\n> **PR 标题模板：`【PPSCI Doc No.{id}】`，如 `【PPSCI Doc No.66】`**\n> 代码内容提交请参考：[https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4) 【整理代码并提交】章节\n\n## 5. 参考资料\n\n* [https://www.mkdocs.org/](https://www.mkdocs.org/)\n* [https://squidfunk.github.io/mkdocs-material/](https://squidfunk.github.io/mkdocs-material/)\n* [https://mkdocstrings.github.io/](https://mkdocstrings.github.io/)\n* [https://docs.python.org/3/library/doctest.html](https://docs.python.org/3/library/doctest.html)\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "luotao1",
        "created_at": "2023-12-08T08:55:36+00:00",
        "updated_at": "2024-04-15T06:19:33+00:00",
        "closed_at": "2024-04-15T06:19:33+00:00",
        "comments_count": [
            "MayYouBeProsperous",
            "megemini",
            "Turingg",
            "ooooo-create",
            "WoWYoYLoL",
            "smallpoxscattered",
            "1want2sleep",
            "1want2sleep",
            "wufei2",
            "1want2sleep",
            "wufei2",
            "1want2sleep",
            "luotao1"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 778,
        "title": "AI Studio快速体验ldc2d_steady_Re10完整代码出现error",
        "body": "### bug 描述 bug description\n\nfor key in vis_interior_points:\r\n&ensp; &ensp;   vis_points[key] = np.concatenate(\r\n&ensp;&ensp;&ensp; &ensp;      (vis_interior_points[key], vis_boundary_points[key])\r\n    &ensp;&ensp;&ensp;)\r\n处代码运行出现error如下:\r\n(vis_interior_points[key], vis_boundary_points[key])\r\nKeyError: 'sdf'\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "Chernyn",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-02-05T12:18:20+00:00",
        "updated_at": "2024-03-04T09:20:37+00:00",
        "closed_at": "2024-03-04T09:20:37+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 800,
        "title": "paddlescience训练模型，验证时出错",
        "body": "### bug 描述 bug description\n\n训练模型时，当到验证结束的时候，会出现错误\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/71805205/7e08945b-45c9-48f6-8bea-14dfb99fc207)\r\n\r\n修正代码fix:\r\n将ppsci/solver/eval.py 第273行：\r\nmetric_value = paddle.concat(metric_value)[:num_samples]，\r\n修改为：\r\nmetric_value = paddle.stack(metric_value)[:num_samples]\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "Yang-Changhui",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-03-07T11:30:34+00:00",
        "updated_at": "2024-03-14T02:32:49+00:00",
        "closed_at": "2024-03-14T02:32:48+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 851,
        "title": "【快乐开源】为PaddleScience添加chamfer distance loss",
        "body": "## 1. 背景\r\n点云是一种常见的数据结构，用于表示三维空间中的一组点，Chamfer Distance 是一种用于衡量两个点云之间相似度的度量方法，在三维问题中应用广泛。目前 PaddleScience 中缺少计算该类 loss 的 API，因此需要补充，并进行详细说明。\r\n\r\n## 2. 收益\r\n学习点云相关知识和该种点云间距离度量方法，为 PaddleScience 添加相应 loss 函数。\r\n\r\n## 3. 开发流程\r\n### 3.1 安装 PaddleScience\r\n安装 Paddle：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#13-paddlepaddle\r\n安装 PaddleScience(git 源码安装)：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#__tabbed_1_1\r\n### 3.2 代码开发\r\n参考代码：https://pytorch3d.readthedocs.io/en/latest/modules/loss.html#pytorch3d.loss.chamfer_distance\r\n进行开发，要求使用 Paddle 和 PaddleScience 中的API，若需要用到其他 python 包，请优先参考 PaddleScience 的 requirements.txt，或进行对应复现。\r\n按照 [3. 编写文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)教程，安装文档渲染插件并渲染文档，用网页打开文档预览链接。\r\nLoss 相关 API 参考文档：https://paddlescience-docs.readthedocs.io/zh/latest/zh/api/loss/loss/\r\n### 3.3 整理代码并提交PR\r\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\r\n\r\n## 奖励\r\n500 京东卡",
        "state": "closed",
        "user": "lijialin03",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-04-15T09:58:49+00:00",
        "updated_at": "2024-05-10T03:27:41+00:00",
        "closed_at": "2024-05-10T03:27:40+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 857,
        "title": "训练的时候出现反向传播错误",
        "body": "###  训练反向传播报错\r\n\r\n平台：ai studio\r\npaddle:2.6.0\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/71805205/142b954a-1687-43db-b73b-19fd58153c7f)\r\n有时报这样的错误：\r\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/71805205/53a10386-134f-47d8-a7aa-657fdb4b9e8a)\r\n",
        "state": "closed",
        "user": "Yang-Changhui",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-04-21T04:29:13+00:00",
        "updated_at": "2024-04-25T02:43:38+00:00",
        "closed_at": "2024-04-25T02:43:38+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 788,
        "title": "【快乐开源】为 PaddleScience 案例添加 export 和 inference 功能",
        "body": "> This project will be mentored by @HydrogenSulfate and @xusuyong \n\n以下是待添加模型导出和python推理功能的案例列表：\n1、8、10、19、28、34 题，共6题可以继续认领\n\n| 序号 | 文档文件 | 案例文件 | 认领人/状态/PR号\n| :-- | :-- | :-- | :-- |\n| 1 | deephpms.md | deephpms/burgers.pydeephpms/korteweg_de_vries.py</br>deephpms/kuramoto_sivashinsky.py</br>deephpms/navier_stokes.py</br>deephpms/schrodinger.py |  @quite125 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@Haroldlhl <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@jiangandhao <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1170](https://github.com/PaddlePaddle/PaddleScience/pull/1170)<br> | \n| 2 | deeponet.md | operator_learning/deeponet.py |  @liujun121533 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@HydrogenSulfate <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#901](https://github.com/PaddlePaddle/PaddleScience/pull/901)<br>@essos-bot <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br> | \n| 3 | euler_beam.md | euler_beam/euler_beam.py |  @GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#796](https://github.com/PaddlePaddle/PaddleScience/pull/796)<br> | \n| 4 | laplace2d.md | laplace/laplace2d.py |  @GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#797](https://github.com/PaddlePaddle/PaddleScience/pull/797)<br> | \n| 5 | lorenz.md | lorenz/train_transformer.py |  @GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#801](https://github.com/PaddlePaddle/PaddleScience/pull/801)<br> | \n| 6 | rossler.md | rossler/train_transformer.py |  @GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#803](https://github.com/PaddlePaddle/PaddleScience/pull/803)<br> | \n| 7 | volterra_ide.md | ide/volterra_ide.py |  @GreatV <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#807](https://github.com/PaddlePaddle/PaddleScience/pull/807)<br> | \n| 8 | amgnet.md | amgnet/amgnet_airfoil.pyamgnet/amgnet_cylinder.py |  @yangrongxinuser <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1027](https://github.com/PaddlePaddle/PaddleScience/pull/1027)<br>@Hydralune <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1165](https://github.com/PaddlePaddle/PaddleScience/pull/1165)<br>@jiangandhao <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1169](https://github.com/PaddlePaddle/PaddleScience/pull/1169)<br> | \n| 9 | bubble.md | bubble/bubble.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#887](https://github.com/PaddlePaddle/PaddleScience/pull/887)<br> | \n| 10 | cfdgcn.md | cfdgcn/cfdgcn.py |  @yangrongxinuser <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1026](https://github.com/PaddlePaddle/PaddleScience/pull/1026) [#1037](https://github.com/PaddlePaddle/PaddleScience/pull/1037)<br> | \n| 11 | cylinder2d_unsteady.md | cylinder/2d_unsteady/cylinder2d_unsteady_Re100.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#883](https://github.com/PaddlePaddle/PaddleScience/pull/883)<br> | \n| 12 | cylinder2d_unsteady_transformer_physx.md | cylinder/2d_unsteady/transformer_physx/train_transformer.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#883](https://github.com/PaddlePaddle/PaddleScience/pull/883)<br> | \n| 13 | darcy2d.md | darcy/darcy2d.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#900](https://github.com/PaddlePaddle/PaddleScience/pull/900)<br> | \n| 14 | deepcfd.md | deepcfd/deepcfd.py |  @GoldenStain <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#994](https://github.com/PaddlePaddle/PaddleScience/pull/994)<br> | \n| 15 | ldc2d_steady.md | ldc/ldc2d_steady_Re10.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#875](https://github.com/PaddlePaddle/PaddleScience/pull/875)<br> | \n| 16 | ldc2d_unsteady.md | ldc/ldc2d_unsteady_Re10.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#875](https://github.com/PaddlePaddle/PaddleScience/pull/875)<br> | \n| 17 | labelfree_DNN_surrogate.md | pipe/poiseuille_flow.py |  @jincheng23 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@yangrongxinuser <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@PolaKuma <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#1030](https://github.com/PaddlePaddle/PaddleScience/pull/1030)<br> | \n| 18 | ~~nsfnet.md~~ | aneurysm/aneurysm_flow.py |   | \n| 19 | phycrnet.md | phycrnet/main.py |  @Sylence8 <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1029](https://github.com/PaddlePaddle/PaddleScience/pull/1029)<br>@fangfangssj <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br> | \n| 20 | shock_wave.md | shock_wave/shock_wave.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#890](https://github.com/PaddlePaddle/PaddleScience/pull/890)<br> | \n| 21 | tempoGAN.md | tempoGAN/tempoGAN.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#884](https://github.com/PaddlePaddle/PaddleScience/pull/884)<br> | \n| 22 | nsfnet4.md | nsfnet/VP_NSFNet4.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#864](https://github.com/PaddlePaddle/PaddleScience/pull/864)<br> | \n| 23 | viv.md | fsi/viv.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#832](https://github.com/PaddlePaddle/PaddleScience/pull/832)<br> | \n| 24 | biharmonic2d.md | biharmonic2d/biharmonic2d.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#858](https://github.com/PaddlePaddle/PaddleScience/pull/858)<br> | \n| 25 | bracket.md | bracket/bracket.py |  @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#878](https://github.com/PaddlePaddle/PaddleScience/pull/878)<br> | \n| 26 | control_arm.md | control_arm/forward_analysis.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#893](https://github.com/PaddlePaddle/PaddleScience/pull/893)<br> | \n| 27 | epnn.md | control_arm/inverse_parameter.py |  @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#893](https://github.com/PaddlePaddle/PaddleScience/pull/893)<br> | \n| 28 | phylstm.md | phylstm/phylstm2.pyphylstm/phylstm3.py |  @jincheng23 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@wwwuyan <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1031](https://github.com/PaddlePaddle/PaddleScience/pull/1031)<br> | \n| 29 | topopt.md | topopt/topopt.py |  @NKNaN <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#793](https://github.com/PaddlePaddle/PaddleScience/pull/793)<br> | \n| 30 | heat_exchanger.md | heat_exchanger/heat_exchanger.py |  @wufei2 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#892](https://github.com/PaddlePaddle/PaddleScience/pull/892)<br> | \n| 31 | heat_pinn.md | heat_pinn/heat_pinn.py |  @1want2sleep <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#926](https://github.com/PaddlePaddle/PaddleScience/pull/926)<br> | \n| 32 | phygeonet.md | phygeonet/heat_equation.py</br>phygeonet/heat_equation_with_bc.py |  @yangrongxinuser <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@ZHOU05030 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br>@PolaKuma <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#1036](https://github.com/PaddlePaddle/PaddleScience/pull/1036)<br> | \n| 33 | ~~hpinns.md~~ | hpinns/holography.py |   | \n| 34 | fourcastnet.md | fourcastnet/train_pretrain.py</br>fourcastnet/train_precip.py</br>fourcastnet/train_finetune.py |  @mayiru1021 <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#1129](https://github.com/PaddlePaddle/PaddleScience/pull/1129)<br> | \n| 35 | nowcastnet.md | nowcastnet/nowcastnet.py | @smallpoxscattered <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#895](https://github.com/PaddlePaddle/PaddleScience/pull/895)<br>@kineast <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br> | \n## 认领方式\n请大家以 comment 的形式认领任务，如：\n```\n【报名】：1、3、12-13\n```\n多个任务之间需要使用**中文顿号**分隔，报名多个连续任务可用横线表示，如 2-5\nPR 提交格式：在 PR 的标题中以 【**PPSCI Export&Infer No.**】 开头，注明任务编号\n\n## 看板信息 \n| 任务方向 | 任务数量 | 提交作品 / 任务认领 | 提交率 | 完成 | 完成率 |\n| :----: | :----: | :----:  | :----: | :----: | :----: |\n|  快乐开源  |  35  | 33 / 33 | 94.29% |  28  | 80.0% |\n#####\n\n## 统计信息 \n> 排名不分先后 @HydrogenSulfate (1) @GreatV (5) @wufei2 (7) @GoldenStain (1) @PolaKuma (2) @smallpoxscattered (8) @1want2sleep (2) @NKNaN (1) @mayiru1021 (1) \n#####\n\n## 1. 背景\n\nPaddleScience 套件为现有的 30+ 模型支持了一键训练、一键测试功能，但通过模型导出和python推理功能才能使得每个案例可以快速部署在各种设备上。\n\n## 2. 收益\n\n学习模型导出和python推理的基本流程，为案例代码添加模型导出和python推理功能\n\n## 3. 开发流程\n\n### 3.1 安装 PaddleScience\n\n1. 安装 Paddle：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#13-paddlepaddle\n2. 安装 PaddleScience(git 源码安装)：https://paddlescience-docs.readthedocs.io/zh/latest/zh/install_setup/#__tabbed_1_1\n\n### 3.2 代码开发\n以为 aneurysm 案例添加模型导出和 python 推理函数为例\n``` py\ndef export(cfg: DictConfig):\n    # set model\n    model = ppsci.arch.MLP(**cfg.MODEL)\n\n    # initialize solver\n    solver = ppsci.solver.Solver(\n        model,\n        pretrained_model_path=cfg.INFER.pretrained_model_path,\n    )\n    # export model\n    from paddle.static import InputSpec\n\n    input_spec = [\n        {key: InputSpec([None, 1], \"float32\", name=key) for key in model.input_keys},\n    ]\n    solver.export(input_spec, cfg.INFER.export_path)\n```\n\n1. 参考`train/eval`函数，以同样的方式实例化一个网络模型`model`，如果\n2. 实例化一个`solver`，传入`model`、预训练模型路径变量`cfg.INFER.pretrained_model_path`（该路径设置为案例文档开头“模型评估命令”的`EVAL.pretrained_model_path`后的url值即可，如下所示）\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/58674848-4253-4da4-afbf-45c45d0ec5a8)\n\n4. 根据`model`的`forwrad`函数接受的输入格式，构造同样格式的`input_spec`。aneurysm 的输入格式为`{\"x\": Tensor, \"y\": Tensor, \"z\": Tensor}`，因此构造的`input_spec`为：`{\"x\": InputSpec([None, 1], \"float32\", name=\"x\"), \"y\": InputSpec([None, 1], \"float32\", name=\"y\"), \"z\": InputSpec([None, 1], \"float32\", name=\"z\")}`\n5. 调用`solver.export`导出模型至`cfg.INFER.export_path`路径下，导出成功后会打印：`Inference model has been exported to: ./inference/aneurysm, including *.pdmodel, *.pdiparams and *.pdiparams.info files.`\n至此模型导出函数export就完成了。接下来介绍如何撰写 python 推理代码`inference`函数\n\n``` py\ndef inference(cfg: DictConfig):\n    from deploy.python_infer import pinn_predictor\n\n    predictor = pinn_predictor.PINNPredictor(cfg)\n    eval_data_dict = reader.load_csv_file(\n        cfg.EVAL_CSV_PATH,\n        (\"x\", \"y\", \"z\", \"u\", \"v\", \"w\", \"p\"),\n        {\n            \"x\": \"Points:0\",\n            \"y\": \"Points:1\",\n            \"z\": \"Points:2\",\n            \"u\": \"U:0\",\n            \"v\": \"U:1\",\n            \"w\": \"U:2\",\n            \"p\": \"p\",\n        },\n    )\n    input_dict = {\n        \"x\": (eval_data_dict[\"x\"] - cfg.CENTER[0]) * cfg.SCALE,\n        \"y\": (eval_data_dict[\"y\"] - cfg.CENTER[1]) * cfg.SCALE,\n        \"z\": (eval_data_dict[\"z\"] - cfg.CENTER[2]) * cfg.SCALE,\n    }\n    output_dict = predictor.predict(input_dict, cfg.INFER.batch_size)\n\n    # mapping data to cfg.INFER.output_keys\n    output_dict = {\n        store_key: output_dict[infer_key]\n        for store_key, infer_key in zip(cfg.MODEL.output_keys, output_dict.keys())\n    }\n\n    ppsci.visualize.save_vtu_from_dict(\n        \"./aneurysm_pred.vtu\",\n        {**input_dict, **output_dict},\n        input_dict.keys(),\n        cfg.MODEL.output_keys,\n    )\n```\n\n1. 导入本模型对应的`predictor`，因为 aneurysm 的输入都是形状为`[batch_size, channels]`的Tensor，因此使用导入`pinn_predictor`即可；如果输入形状语义或者组织结构与之不同，则需要参照`deploy/python_infer/pinn_predictor.py`的`PINNPredictor`，写一个对应的`XXXPredictor`，再导入使用\n2. 以`cfg`为参数，实例化`predictor`\n3. 参考`eval`函数，构造输入数据`input_dict`\n5. 调用`predictor.predict`接受输入数据并推理得到输出`output_dict`\n6. 由于 python 推理的输出名字与原`model`的输出名字不同，因此需要将输出`output_dict`的键重新映射回正确的键上\n7. 参照`eval`函数，用保存/打印等方式记录推理输出`output_dict`\n运行结果如下所示\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/04d25b90-4c65-4392-b49e-c42ad67b4988)\n\n如果在模型导出/推理时需要额外的超参数，则可以将这些超参数添加到案例对应 YAML 文件的 `INFER` 字段下，参考：https://github.com/PaddlePaddle/PaddleScience/pull/786/files#diff-1c33a8b95e9d0c72395763d5c906936652654533714e23211e2e2bb204d379f3R50-R55\n\n### 3.3 文档添加 export&inference 运行命令\n\n按照 [3. 编写文档](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#3)教程，安装文档渲染插件并渲染文档，用网页打开文档预览链接。\n\n以`aneurysm.md`文档为例，添加红框内两处文本即可\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/5b9c2a58-de14-4a69-b48a-3208eb28deb5)\n\n添加后文档渲染结果如下所示\n\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/1f1e2f1c-224b-4a56-98b7-d9cd0919d6e5)\n![image](https://github.com/PaddlePaddle/PaddleScience/assets/23737287/f95386c7-0ca8-4dff-8084-fa41d5fb00a8)\n\n### 3.4 整理代码并提交PR\n参考 [PaddleScience文档-贡献指南-整理代码并提交](https://paddlescience-docs.readthedocs.io/zh/latest/zh/development/#4)\n\n## 4. 参考资料\n* https://github.com/PaddlePaddle/PaddleScience/pull/773\n* https://github.com/PaddlePaddle/PaddleScience/pull/786\n",
        "state": "open",
        "user": "HydrogenSulfate",
        "closed_by": null,
        "created_at": "2024-02-26T09:03:20+00:00",
        "updated_at": "2025-06-20T07:30:16+00:00",
        "closed_at": null,
        "comments_count": [
            "NKNaN",
            "GreatV",
            "GreatV",
            "GreatV",
            "GreatV",
            "GreatV",
            "smallpoxscattered",
            "1want2sleep",
            "smallpoxscattered",
            "smallpoxscattered",
            "wufei2",
            "1want2sleep",
            "wufei2",
            "smallpoxscattered",
            "wufei2",
            "smallpoxscattered",
            "wufei2",
            "smallpoxscattered",
            "wufei2",
            "GoldenStain",
            "jincheng23",
            "jincheng23",
            "kineast",
            "yangrongxinuser",
            "yangrongxinuser",
            "yangrongxinuser",
            "ZHOU05030",
            "yangrongxinuser",
            "fangfangssj",
            "mayiru1021",
            "quite125",
            "Haroldlhl"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 868,
        "title": "paddle和torch前向对齐，有误差",
        "body": "### 请提出你的问题 Please ask your question\n\n你好，我现在有一个简单的前向，initencoder，相同的网络，相同输入，相同权重，使用reprod_log检查，误差为0.00067，这是最小测试单元，\r\npaddle_torch_forward_error：https://aistudio.baidu.com/projectdetail/7781433?sUid=650866&shared=1&ts=1713940796780 ，麻烦您帮忙检查一下，谢谢\r\n",
        "state": "closed",
        "user": "Yang-Changhui",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-04-25T03:09:28+00:00",
        "updated_at": "2024-06-14T07:04:22+00:00",
        "closed_at": "2024-06-14T07:04:22+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 896,
        "title": "带有paddle.fft.fftshift网络模型的导出",
        "body": "### 需求描述 Feature Description\n\n请问，现在的动转静支持带有paddle.einsum API的网络吗，我将带有paddle.einsum网络动转静后，预测结果动态图和静态图结果不一样，请问还需要什么特殊配置吗\n\n### 替代实现 Alternatives\n\n_No response_",
        "state": "closed",
        "user": "Yang-Changhui",
        "closed_by": "Yang-Changhui",
        "created_at": "2024-05-13T07:05:07+00:00",
        "updated_at": "2024-05-20T08:59:10+00:00",
        "closed_at": "2024-05-20T08:59:10+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Yang-Changhui",
            "HydrogenSulfate",
            "Yang-Changhui",
            "Yang-Changhui",
            "HydrogenSulfate",
            "Yang-Changhui",
            "Yang-Changhui",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 955,
        "title": "README.md 里面重大错误，Blood Flow 翻译成血管瘤？？？",
        "body": "### 文档链接&描述 Document Links&Description\n\n仓库 README.md\n\n### 请提出你的建议 Please give your suggestion\n\n改正翻译",
        "state": "closed",
        "user": "veyron95",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-07-26T09:49:04+00:00",
        "updated_at": "2024-07-29T12:42:14+00:00",
        "closed_at": "2024-07-29T12:42:14+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 989,
        "title": "【GAN不适配PaddleScience的封装训练】",
        "body": "### 需求描述 Feature Description\n\nGAN需要在单个epoch的train中，先更新判别器，每隔几个批次更新一次生成器。但是，solver.train()方法封装了全部epochs的训练，无法在内部设置。\n\n### 替代实现 Alternatives\n\n替代实现：\r\n1. 设置`Solver`的参数`epochs =1`、`iters_per_epoch = 1`；这样`solver.train()`就只训练了一个batch。\r\n2. 通过交替调用`solver_dis.train()`和`sovler_gen.train()`，可以实现GAN的训练。\r\n\r\n缺点：\r\n1. 由于每个epoch训练后都会强制保存checkpoint。这导致每训练一个batch就会保存一次，很影响训练性能。\r\n2. GAN训练两个模型，需要两个`Optimizer`，但是一个solver只有一个`Optimizer`，所以需要定义两个solver，同时也会有两个`DataLoader`。（内存占用大，重复读取数据，并且数据shuffle后，同一批次内，两个模型训练的数据不同）",
        "state": "closed",
        "user": "zhudequan9",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-09-19T09:50:28+00:00",
        "updated_at": "2024-10-12T07:07:16+00:00",
        "closed_at": "2024-10-12T07:07:16+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "error": "'NoneType' object has no attribute 'repository'",
        "issue_number": 1032
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 999,
        "title": "经典案例中Heat_PINN示例代码错误",
        "body": "### 文档链接&描述 Document Links&Description\n\n经典案例-技术科学-传热-Heat_PINN：https://paddlescience-docs.readthedocs.io/zh-cn/latest/zh/examples/heat_pinn/\r\n如模型构建代码为：\r\nplt.title(\"PINN\")\r\nplt.xlabel(\"x\")\r\n\r\n\n\n### 请提出你的建议 Please give your suggestion\n\n请提供正确的参考代码",
        "state": "closed",
        "user": "leon062112",
        "closed_by": "leon062112",
        "created_at": "2024-10-09T01:47:03+00:00",
        "updated_at": "2024-10-09T11:58:34+00:00",
        "closed_at": "2024-10-09T11:56:50+00:00",
        "comments_count": [
            "liaoxin2",
            "leon062112",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1000,
        "title": "【飞桨科学计算工具组件开发大赛】25w奖金池💰",
        "body": "## 飞桨科学计算工具组件开发大赛\n\n随着Paddle 3.0-beta版本的发布，框架的易用性已经得到了大幅提升。在实际项目开发过程中，各个领域的用户除了使用深度框架本身提供的API完成基础的代码功能，也会使用一些工具组件如三维图形处理库Open3D、稀疏计算库torch_scatter、神经算子库nueralop，图神经网络库torch-geometric。这些工具库主要由深度学习框架官方研发人员或是具有领域背景的社区开发者维护，能够大幅降低用户的开发成本，使得用户能更快、更准确地实现自己的算法。通过本届比赛，为这些工具组件支持飞桨后端，从而提高飞桨用户开发科学计算模型的开发效率。\n\n比赛详情：https://competition.atomgit.com/previewinfo?id=805ad94637707d062f24e54265d85731\n\n## 🔥热身打卡\n\n热身打卡任务，邮件通过验收后，即可收到限量版飞桨开源社区小礼品，数量有限，先到先得~（**请截图报名情况+ 跑通成功后的界面**，参考 issue 格式向 [ext_paddle_oss@baidu.com](mailto:ext_paddle_oss@baidu.com) 发送邮件）\n- https://github.com/PaddlePaddle/PaddleScience/issues/372\n\n## 正式比赛\n\n| 序号 | 赛题名称 | 认领人/状态/PR号\n| :-- | :-- | :-- |\n| 1 | 飞桨适配 torch-geometric | @LilaKen <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1008](https://github.com/PaddlePaddle/community/pull/1008) [#1058](https://github.com/PaddlePaddle/PaddleScience/pull/1058)<br>@qq1243196045 <img src=\"https://img.shields.io/badge/状态-报名-2ECC71\" /> <br> | \n| 2 | 飞桨适配 open3d | @BeingGod <img src=\"https://img.shields.io/badge/状态-完成任务-9B59B6\" /> [#68748](https://github.com/PaddlePaddle/Paddle/pull/68748) [#68824](https://github.com/PaddlePaddle/Paddle/pull/68824)<br> @SecretXV <img src=\"https://img.shields.io/badge/状态-完成设计文档-3498DB\" /> [#975](https://github.com/PaddlePaddle/community/pull/975)<br> | \n| 3 | 飞桨适配 nueralop | @xiaoyewww <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#979](https://github.com/PaddlePaddle/community/pull/979) [#1018](https://github.com/PaddlePaddle/PaddleScience/pull/1018)<br>@Kai-Qi <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#985](https://github.com/PaddlePaddle/community/pull/985) [#1056](https://github.com/PaddlePaddle/PaddleScience/pull/1056)<br> | \n| 4 | 飞桨适配 torch-scatter | @NKNaN <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#981](https://github.com/PaddlePaddle/community/pull/981) [#1028](https://github.com/PaddlePaddle/PaddleScience/pull/1028)<br>@LitLeo <img src=\"https://img.shields.io/badge/状态-完成设计文档-3498DB\" /> [#1011](https://github.com/PaddlePaddle/community/pull/1011)<br>@Z-NAVY <img src=\"https://img.shields.io/badge/状态-完成设计文档-3498DB\" /> [#1041](https://github.com/PaddlePaddle/community/pull/1041)<br> | \n| 5 | 飞桨适配 torch-harmonics | @BeingGod <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1010](https://github.com/PaddlePaddle/community/pull/1010) [#1014](https://github.com/PaddlePaddle/PaddleScience/pull/1014)<br>@lixiaoming233 <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1004](https://github.com/PaddlePaddle/community/pull/1004) [#1021](https://github.com/PaddlePaddle/PaddleScience/pull/1021)<br>@co63oc <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#1002](https://github.com/PaddlePaddle/community/pull/1002) [#1013](https://github.com/PaddlePaddle/PaddleScience/pull/1013)<br> | \n| 6 | 飞桨适配 deepali | @co63oc <img src=\"https://img.shields.io/badge/状态-提交PR-F39C12\" /> [#978](https://github.com/PaddlePaddle/community/pull/978) [#1006](https://github.com/PaddlePaddle/PaddleScience/pull/1006)<br> | \n\n## 认领方式\n请大家以 comment 的形式认领任务，如：\n```\n【报名】：1、3、12-13\n```\n多个任务之间需要使用**中文顿号**分隔，报名多个连续任务可用横线表示，如 2-5\nPR 提交格式：在 PR 的标题中以 【**Paddle Toolkit Development Competition No.**】 开头，注明任务编号\n\n## 看板信息 \n| 任务方向 | 任务数量 | 提交作品 / 任务认领 | 提交率 | 完成 | 完成率 |\n| :----: | :----: | :----:  | :----: | :----: | :----: |\n|  飞桨科学计算工具组件开发大赛  |  6  | 6 / 6 | 100.0% |  1  | 16.67% |\n#####\n\n## 统计信息 \n> 排名不分先后 @BeingGod (1) \n#####\n",
        "state": "closed",
        "user": "HydrogenSulfate",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-10-09T09:11:03+00:00",
        "updated_at": "2025-01-23T05:21:43+00:00",
        "closed_at": "2025-01-14T07:41:24+00:00",
        "comments_count": [
            "Kai-Qi",
            "LilaKen",
            "qq1243196045",
            "BeingGod",
            "lixiaoming233",
            "LitLeo",
            "Z-NAVY",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1034,
        "title": "关于Lorenz在aistudio上的断点续训练1 ",
        "body": "### bug 描述 bug description\n\n你好。我在aistudio上跑通了那个Lorenz例子，想试下断点继续训练。我跑了10个epoch，按了停止退出codelab。然后重新进入codelab,安装paddlescience，再运行训练之前的代码。我想用初始化直接读取checkpoint，就运行以下代码。\r\n```python\r\nOUTPUT_DIR = \"./output/lorenz_transformer\"\r\ncp_path = f\"{OUTPUT_DIR}/checkpoints\"\r\n\r\nnew_solver = ppsci.solver.Solver(\r\n    model=model,\r\n    constraint=constraint,\r\n    output_dir=OUTPUT_DIR,  # Added output_dir\r\n    optimizer=optimizer,\r\n    lr_scheduler=lr_scheduler,\r\n    eval_during_train=True,\r\n    eval_freq=50,\r\n    validator=validator,\r\n    visualizer=visualizer,\r\n    checkpoint_path=cp_path,# try to active load checkpoint in init\r\n)\r\n```\r\n得到报错AttributeError: 'Solver' object has no attribute 'loss_aggregator'，显式给loss_aggregator赋值也不行。\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "xiaoniv",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-12-04T12:16:49+00:00",
        "updated_at": "2024-12-30T07:57:56+00:00",
        "closed_at": "2024-12-30T07:57:56+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1035,
        "title": "How to load model and  inference CViT ",
        "body": "Hi,\r\nI am trying to do inference using CViT. from training, I only have file with extension pdopt, pdparams, pdstates. how to load this file since inference method seems need file json??\r\nthanks",
        "state": "open",
        "user": "ramdhan1989",
        "closed_by": null,
        "created_at": "2024-12-04T20:13:24+00:00",
        "updated_at": "2024-12-18T11:06:19+00:00",
        "closed_at": null,
        "comments_count": [
            "HydrogenSulfate",
            "ramdhan1989",
            "HydrogenSulfate",
            "ramdhan1989",
            "HydrogenSulfate",
            "ramdhan1989",
            "HydrogenSulfate",
            "ramdhan1989",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1045,
        "title": "How to get the output to the original size for CViT",
        "body": "Hi,\r\nI used 32*32 config for my case, I noticed the output file is 8,1024,1 where 8 is batch size, 1024 is the flatten result, and 1 is channel. if my input is 128 * 128, how to get back to the original size? is 1024 is equal to 32*32 (resize version of 128*128)? or is there something I must do to get back 128*128?\r\n\r\nthank you\r\n",
        "state": "open",
        "user": "ramdhan1989",
        "closed_by": null,
        "created_at": "2024-12-17T21:52:22+00:00",
        "updated_at": "2024-12-18T11:01:18+00:00",
        "closed_at": null,
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1039,
        "title": "关于Lorenz在aistudio上的断点续训练2",
        "body": "### bug 描述 bug description\r\n\r\n我在aistudio上跑通了那个Lorenz例子，想试下断点继续训练。我跑了10个epoch，按了停止退出codelab。然后重新进入codelab,安装paddlescience，再运行训练之前的代码。这次想用save_load把model和optimizer读出来，再尝试初始化。运行以下代码\r\n```python\r\nimport ppsci.utils.save_load as save_load\r\n\r\nOUTPUT_DIR = \"./output/lorenz_transformer\"\r\ncheckpoint_dir = f\"{OUTPUT_DIR}/checkpoints/latest\"\r\n\r\nsave_load.load_checkpoint(\r\n    checkpoint_dir,\r\n    model,  # Your model\r\n    optimizer  # Your optimizer\r\n)\r\n\r\nsolver = ppsci.solver.Solver(\r\n    model=model,  # Will use loaded weights\r\n    constraint=constraint,\r\n    output_dir=OUTPUT_DIR,\r\n    optimizer=optimizer,  # Will use loaded state\r\n    lr_scheduler=lr_scheduler,\r\n    eval_during_train=True,\r\n    eval_freq=50,\r\n    validator=validator,\r\n    visualizer=visualizer,\r\n)\r\n\r\nsolver.train() \r\n```\r\n得到报错AssertionError: Optimizer set error, layer_norm_1.w_0_moment1_0 should in state dict。\r\n我看了latest.pdopt,layer_norm是从21开始的，layer_norm_21.w_0_moment1_0。\r\n请帮我分析一下为啥优化器的数据对不上，谢谢\r\n\r\n\r\n\r\n### 其他补充信息 Additional Supplementary Information\r\n\r\n_No response_",
        "state": "closed",
        "user": "xiaoniv",
        "closed_by": "HydrogenSulfate",
        "created_at": "2024-12-06T06:34:51+00:00",
        "updated_at": "2025-06-05T05:21:51+00:00",
        "closed_at": "2025-06-05T05:21:51+00:00",
        "comments_count": [
            "zhiminzhang0830"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1071,
        "title": "model.register_output_transform(output_transform) 存在对输入变量除法时报错",
        "body": "### bug 描述 bug description\n\n代码片段，已注释报错位置\n```\nimport numpy as np\nimport sympy as sp\n\nx, y, z, t = sp.symbols(\"x t\")\nu = sp.Function(\"u\")(x, t)\nres = u.diff(t, 2) - u.diff(x, 2)\n\nmodel = ppsci.arch.MLP([\"x\", \"t\"], [\"u\"], 4, 128)\n\n# register transform\ndef output_transform(_in, _out):\n    t= _in[\"t\"]\n    u= _out[\"u\"]\n    out = {\"u\": u * t * 10 / (t + 1)}  ##改成{\"u\": u * t * 10 * (t + 1)}，不报错\n    return out\n\nmodel.register_output_transform(output_transform) ##这里的问题报错，删掉不报错\n\n....省略...\n\n\nsolver = ppsci.solver.Solver(\n    model\n)\n# train model\nsolver.train()\n```\n\n报错信息：\n\n> W0211 11:32:57.951689 2751219 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.6, Driver API Version: 12.2, Runtime API Version: 11.8\n> W0211 11:32:57.952596 2751219 gpu_resources.cc:164] device: 0, cuDNN Version: 8.9.\n> [2025/02/11 11:32:58] ppsci INFO: Using paddlepaddle 3.0.0 on device Place(gpu:0)\n> [2025/02/11 11:32:58] ppsci MESSAGE: Set to_static=False for computational optimization.\n> W0211 11:32:58.269604 2751219 backward.cc:437] While running Node (DivideDoubleGradNode) raises an EnforceNotMet exception\n> Traceback (most recent call last):\n>   File \"PaddleScience/examples/wjy_test/main2.py\", line 144, in <module>\n>     solver.train()\n>   File \"PaddleScience/ppsci/solver/solver.py\", line 567, in train\n>     self.train_epoch_func(self, epoch_id, self.log_freq)\n>   File \"PaddleScience/ppsci/solver/train.py\", line 117, in train_epoch_func\n>     losses_all, losses_constraint = solver.forward_helper.train_forward(\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/jit/dy2static/program_translator.py\", line 539, in __call__\n>     return self._call_dygraph_function(*args, **kwargs)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/jit/dy2static/program_translator.py\", line 574, in _call_dygraph_function\n>     return self.dygraph_function(*args, **kwargs)\n>   File \"PaddleScience/ppsci/utils/expression.py\", line 102, in train_forward\n>     output_dict[name] = expr(data_dict)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/nn/layer/layers.py\", line 1530, in __call__\n>     return self.forward(*inputs, **kwargs)\n>   File \"PaddleScience/ppsci/utils/symbolic.py\", line 501, in forward\n>     data_dict = func(data_dict)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/nn/layer/layers.py\", line 1530, in __call__\n>     return self.forward(*inputs, **kwargs)\n>   File \"PaddleScience/ppsci/utils/symbolic.py\", line 377, in forward\n>     return self._apply_func(data_dict)\n>   File \"PaddleScience/ppsci/utils/symbolic.py\", line 386, in _parallel_derivate_operator_func\n>     y_wrt_xs_grad: List[paddle.Tensor] = jacobian(\n>   File \"PaddleScience/ppsci/autodiff/ad.py\", line 141, in __call__\n>     grads_require = paddle.grad(\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/decorator.py\", line 232, in fun\n>     return caller(func, *(extras + args), **kw)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/base/wrapped_decorator.py\", line 40, in __impl__\n>     return wrapped_func(*args, **kwargs)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/base/framework.py\", line 718, in __impl__\n>     return func(*args, **kwargs)\n>   File \".conda/envs/paddle/lib/python3.10/site-packages/paddle/base/dygraph/base.py\", line 880, in grad\n>     return core.eager.run_partial_grad(\n> RuntimeError: (Unavailable) The Op divide_double_grad doesn't have any grad op. If you don't intend calculating higher order derivatives, please set `create_graph`to False. (at ../paddle/fluid/eager/api/generated/eager_generated/backwards/nodes.cc:51670)\n\n\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "pecanjk",
        "created_at": "2025-02-11T03:51:37+00:00",
        "updated_at": "2025-02-11T07:57:52+00:00",
        "closed_at": "2025-02-11T07:57:52+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1065,
        "title": "ppsci使用单机多卡并行时报错",
        "body": "### 请提出你的问题 Please ask your question\n\n# 网络结构超简单\nmodel1 = ppsci.arch.MLP(**cfg.MODEL1)\n\n# 执行\n通过命令行执行 python -m paddle.distributed.launch --selected_gpus='0,1' --find_unused_parameters=True crack2d_unsteady.py\n\n\n# 报错\n```python\nFile \"/home/hongguobin0094/.conda/envs/ppsci_py310/lib/python3.10/site-packages/paddle/base/dygraph/tensor_patch_methods.py\", line 355, in backward\n    core.eager.run_backward([self], grad_tensor, retain_graph)\nRuntimeError: (PreconditionNotMet) Error happened, when parameter[19][linear_9.b_0] has been ready before. Please set find_unused_parameters=True to traverse backward graph in each step to prepare reduce in advance. If you have set, there may be several reasons for this error: 1) In multiple reentrant backward phase, some parameters are reused.2) Using model parameters outside of forward function. Please make sure that model parameters are not shared in concurrent forward-backward passes.\n  [Hint: Expected has_marked_unused_vars_ == false, but received has_marked_unused_vars_:1 != false:0.] (at ../paddle/fluid/distributed/collective/reducer.cc:812)\n\n\nSet the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.\nI0115 15:47:05.968951 2441365 process_group_nccl.cc:155] ProcessGroupNCCL destruct \nI0115 15:47:05.969121 2441365 process_group_nccl.cc:155] ProcessGroupNCCL destruct \nI0115 15:47:05.969133 2441365 process_group_nccl.cc:155] ProcessGroupNCCL destruct \nI0115 15:47:06.083209 2441630 tcp_store.cc:290] receive shutdown event and so quit from MasterDaemon run loop\n[2025-01-15 15:47:11,318] [    INFO] launch_utils.py:334 - terminate all the procs\nINFO 2025-01-15 15:47:11,318 launch_utils.py:334] terminate all the procs\n[2025-01-15 15:47:11,319] [   ERROR] launch_utils.py:648 - ABORT!!! Out of all 2 trainers, the trainer process with rank=[0, 1] was aborted. Please check its log.\nERROR 2025-01-15 15:47:11,319 launch_utils.py:648] ABORT!!! Out of all 2 trainers, the trainer process with rank=[0, 1] was aborted. Please check its log.\n[2025-01-15 15:47:15,323] [    INFO] launch_utils.py:334 - terminate all the procs\nINFO 2025-01-15 15:47:15,323 launch_utils.py:334] terminate all the procs\n[2025-01-15 15:47:15,324] [ WARNING] launch.py:443 - Terminating... exit\nWARNING 2025-01-15 15:47:15,324 launch.py:443] Terminating... exit\n[2025-01-15 15:47:19,328] [    INFO] launch_utils.py:334 - terminate all the procs\nINFO 2025-01-15 15:47:19,328 launch_utils.py:334] terminate all the procs\n\n\n```",
        "state": "closed",
        "user": "Bingohong",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-01-15T07:51:01+00:00",
        "updated_at": "2025-02-06T14:11:38+00:00",
        "closed_at": "2025-02-06T14:11:37+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "Bingohong",
            "HydrogenSulfate",
            "Bingohong",
            "HydrogenSulfate",
            "Bingohong",
            "HydrogenSulfate",
            "Bingohong",
            "HydrogenSulfate",
            "Bingohong",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1072,
        "title": "请教一下examples中Euler_Beam的 bc setting 使用切片， 而不是用左右端两个独立bc",
        "body": "### 请提出你的问题 Please ask your question\n\n请教一下examples中Euler_Beam的 bc setting 使用切片，是什么原理。同时这里如何调式打印出d[\"u\"][0:1]，jacobian(d[\"u\"], d[\"x\"])[1:2]查看里面的输入输出情况。\n\n原来的examples/euler_beam/euler_beam.py\n\n```\nbc = ppsci.constraint.BoundaryConstraint(\n        {\n            \"u0\": lambda d: d[\"u\"][0:1],  ##此处切片操作不理解\n            \"u__x\": lambda d: jacobian(d[\"u\"], d[\"x\"])[1:2],  ##此处切片操作不理解\n            \"u__x__x\": lambda d: hessian(d[\"u\"], d[\"x\"])[2:3],  ##此处切片操作不理解\n            \"u__x__x__x\": lambda d: jacobian(hessian(d[\"u\"], d[\"x\"]), d[\"x\"])[3:4],  ##此处切片操作不理解\n        },\n        {\"u0\": 0, \"u__x\": 0, \"u__x__x\": 0, \"u__x__x__x\": 0},\n        geom[\"interval\"],\n        {**dataloader_cfg, \"batch_size\": cfg.TRAIN.batch_size.bc},\n        ppsci.loss.MSELoss(\"sum\"),\n        evenly=True,\n        name=\"BC\",\n    )\n    # wrap constraints together\n    constraint = {\n        pde_constraint.name: pde_constraint,\n        bc.name: bc,\n    }\n```\n\n分开设定，不用切片，可以同样结果\n```\nbc1 = ppsci.constraint.BoundaryConstraint(\n        {\n            \"u0\": lambda d: d[\"u\"],\n            \"u__x\": lambda d: jacobian(d[\"u\"], d[\"x\"]),\n        },\n        {\"u0\": 0, \"u__x\": 0},\n        geom[\"interval\"],\n        {**dataloader_cfg, \"batch_size\": cfg.TRAIN.batch_size.bc},\n        ppsci.loss.MSELoss(\"sum\"),\n        criteria= lambda x: np.isclose(x, 0.0),\n        name=\"BC1\",\n    )\n    bc2 = ppsci.constraint.BoundaryConstraint(\n        {\n            \"u__x__x\": lambda d: hessian(d[\"u\"], d[\"x\"]),\n            \"u__x__x__x\": lambda d: jacobian(hessian(d[\"u\"], d[\"x\"]), d[\"x\"]),\n        },\n        {\"u__x__x\": 0, \"u__x__x__x\": 0},\n        geom[\"interval\"],\n        {**dataloader_cfg, \"batch_size\": cfg.TRAIN.batch_size.bc},\n        ppsci.loss.MSELoss(\"sum\"),\n        criteria= lambda x: np.isclose(x, 1.0),\n        name=\"BC2\",\n    )\n    # wrap constraints together\n    constraint = {\n        pde_constraint.name: pde_constraint,\n        bc1.name: bc1,\n        bc2.name: bc2,\n    }\n```",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "pecanjk",
        "created_at": "2025-02-11T07:56:45+00:00",
        "updated_at": "2025-02-11T09:40:48+00:00",
        "closed_at": "2025-02-11T09:40:48+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1074,
        "title": "SPINN只支持[x y z]的输入设定，内置的Helmholtz也只支持3d",
        "body": "### 需求描述 Feature Description\n\n能否优化一下，特别是如果考虑3d wave equation时，会有时间变量\n\n### 替代实现 Alternatives\n\n_No response_",
        "state": "open",
        "user": "pecanjk",
        "closed_by": null,
        "created_at": "2025-02-11T09:39:30+00:00",
        "updated_at": "2025-02-13T08:20:00+00:00",
        "closed_at": null,
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate",
            "pecanjk",
            "pecanjk",
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1077,
        "title": "能否支持PINN + DeepOnet",
        "body": "### 需求描述 Feature Description\n\n需要对函数采样功能提供支持\n\n### 替代实现 Alternatives\n\n_No response_",
        "state": "open",
        "user": "pecanjk",
        "closed_by": null,
        "created_at": "2025-02-13T08:45:19+00:00",
        "updated_at": "2025-06-25T09:13:43+00:00",
        "closed_at": null,
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "guhaohao0991",
            "pecanjk"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1084,
        "title": "TFNO3dNet的 n_modes_depth这里是笔误？",
        "body": "```\nself.n_modes_height = n_modes_height\nself.n_modes_width = n_modes_width\nself.n_modes_height = n_modes_height  #笔误self.n_modes_depth=n_modes_depth？\n```\nhttps://github.com/PaddlePaddle/PaddleScience/blob/5b72753e01e8075a5468db8f2da012191768dc71/ppsci/arch/tfnonet.py#L514C1-L514C45",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-02-27T06:46:26+00:00",
        "updated_at": "2025-02-27T09:35:18+00:00",
        "closed_at": "2025-02-27T09:35:16+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1085,
        "title": "[Bug] NTK 传入的losses应该是Dict，目前的实现是List",
        "body": "我看了mtk下面其他几个的实现，losses的传入都是Dict类型，NTK这里是List\nhttps://github.com/PaddlePaddle/PaddleScience/blob/5b72753e01e8075a5468db8f2da012191768dc71/ppsci/loss/mtl/ntk.py#L68C1-L78C47\n\n运行examples/allen_cahn_defalut_ntk.py时也会报错\n\n```\nW0227 14:49:51.581831 2330427 gpu_resources.cc:164] device: 0, cuDNN Version: 8.9.\n[2025/02/27 14:49:51] ppsci MESSAGE: 'shuffle' and 'drop_last' are both set to False in default as sampler config is not specified.\n[2025/02/27 14:49:51] ppsci INFO: Auto collation is disabled and set num_workers to 0 to speed up batch sampling.\n[2025/02/27 14:49:51] ppsci INFO: Using paddlepaddle 3.0.0 on device Place(gpu:0)\n[2025/02/27 14:49:51] ppsci MESSAGE: Set to_static=False for computational optimization.\nError executing job with overrides: []\nTraceback (most recent call last):\n  File \"PaddleScience/examples/allen_cahn/allen_cahn_defalut_ntk.py\", line 292, in main\n    train(cfg)\n  File \"PaddleScience/examples/allen_cahn/allen_cahn_defalut_ntk.py\", line 183, in train\n    solver.train()\n  File \"PaddleScience/ppsci/solver/solver.py\", line 572, in train\n    self.train_epoch_func(self, epoch_id, self.log_freq)\n  File \"PaddleScience/ppsci/solver/train.py\", line 140, in train_epoch_func\n    total_loss = solver.loss_aggregator(losses_all, solver.global_step)\n  File \"PaddleScience/ppsci/loss/mtl/ntk.py\", line 76, in __call__\n    loss = self.weight[0] * losses[0]\nKeyError: 0\n\nSet the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.\n```\n\n",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-02-27T06:55:47+00:00",
        "updated_at": "2025-02-28T05:35:28+00:00",
        "closed_at": "2025-02-28T05:35:27+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1083,
        "title": "关于三类边界条件",
        "body": "### 请提出你的问题 Please ask your question\n\n请问边界条件类是否支持neumann边界条件？第三类边界条件呢？比如du/dx = h (u - u0)",
        "state": "closed",
        "user": "ZBDat",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-02-24T08:38:18+00:00",
        "updated_at": "2025-05-19T02:10:53+00:00",
        "closed_at": "2025-05-19T02:10:52+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "pecanjk",
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "ZBDat",
            "HydrogenSulfate",
            "ZBDat",
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1131,
        "title": "案例符号回归 Transformer4SR在Nvidia A100精度结果与官方差距大",
        "body": "### bug 描述 bug description\n**简述：**\n案例transformer4sr 在A100平台验证`srsd-feynman_easy`模式精度指标与官方差距大\n1）A100 精度结果 `Hit rate: 0/30` ,与官网精度指标`8/30`差距较大\n2）公式预测结果与官方差距大\nA100:\n```\nThe ground truth is: 25*x1 + x2*log(x1)\nThe prediction is: -C*x1 + 1/log(x2)\n```\n官方：\n```\nThe ground truth is: 25*x1 + x2*log(x1)\nThe prediction is: -C*x1 + x2*log(x1)\n```\n软件版本：paddle：2.6.2 , PaddleScience：commit https://github.com/PaddlePaddle/PaddleScience/commit/ab417c831798459160a079b10435aeaadcbb2375\n测试案例：[PaddleScience/examples/transformer4sr](https://paddlescience-docs.readthedocs.io/zh-cn/latest/zh/examples/transformer4sr/)\n测试环境：NVIDIA A100-PCIE-40GB\n\n**问题复现：**\n**测试命令：**\n1） 训练：python transformer4sr.py\n2） 评估：python transformer4sr.py mode=eval EVAL.pretrained_model_path=./best_model.pdparams\n\n**日志：**\n[eval.log](https://github.com/user-attachments/files/19619284/eval.log)\n[train.log](https://github.com/user-attachments/files/19619283/train.log)\n[best_model.zip](https://github.com/user-attachments/files/19619293/best_model.zip)\n\n**精度验证：**\n**1、A100 精度结果:**\n```\n=> Mean ZSS distance: 0.677 +- 0.230\n=> Hit rate: 0/30\ntarget C*x1*x2 pred: C/(x1 + x2 + x3**2)**2\ntarget C*x1/x2**2 pred: C*x1*log(sin(1/x2)**2)\ntarget C*x1*x2 pred: C*x1*sin(x2)**2\ntarget C*x1*x2 pred: C*x1*sin(x2)**2\ntarget C*x1*x2**2 pred: 1/(x1**2*cos(exp(-C*x2)))\ntarget C*x1*x2*sin(x3) pred: C*x2**2*x3*log(x1)\ntarget C*x1*x2*x3*sin(x4) pred: C*x1*x2*log(x3)\ntarget C*x1/x2 pred: C*x1*log(cos(x1))\ntarget C*sin(x1)/sin(x2) pred: x2 + exp(-C*x2 + x1)\ntarget C*x1*x3/(x1*x2 + x3) pred: sin(C*x2**2)**2/x1**2\nThe ground truth is: 25*x1 + x2*log(x1)\nThe prediction is: -C*x1 + 1/log(x2)\n```\n**2、官方 精度结果:**\n```\nMean ZSS distance(srsd-feynman_easy): 0.658 +- 0.390\nHit rate(srsd-feynman_easy): 8/30\n```\n![Image](https://github.com/user-attachments/assets/ec1d80b0-885e-4238-8f2d-0eb9590bf186)\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "open",
        "user": "yuchunliu-metax",
        "closed_by": "yuchunliu-metax",
        "created_at": "2025-04-06T02:17:35+00:00",
        "updated_at": "2025-04-06T07:54:41+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1095,
        "title": "咨询一下xxxConstraint里使用的dataloader_cfg在训练过程中resample事宜",
        "body": "### 请提出你的问题 Please ask your question\n\n请问一下，xxxConstraint里使用的dataloader_cfg里常用的IterableNamedArrayDataset, ContinuousNamedArrayDataset有什么区别，在训练过程中，他们会有resample的设置么，是训练开始前就只采样一次数据点以后都固定了，还是会每次训练都重新采样训练数据点。还有训练数据点batch_size设置和Iteration_per_epoch设置时是怎么分配训练数据点的。\n\n如果想训练过程中不断的resample数据点，如何做，以及训练过程中不断的增加采样的数据点，能如何做，谢谢",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-03-05T10:14:20+00:00",
        "updated_at": "2025-06-05T05:21:37+00:00",
        "closed_at": "2025-06-05T05:21:37+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1103,
        "title": "examples/allen_cahn_causal.py缺少对应的config文件",
        "body": "examples/allen_cahn_causal.py里使用的`allen_cahn_causal.yaml`缺失，有一个`allen_cahn_causal_fourier_rwf.yaml`文件，是命名有误？",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-03-12T02:51:06+00:00",
        "updated_at": "2025-03-12T09:10:27+00:00",
        "closed_at": "2025-03-12T05:06:46+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1114,
        "title": "phycrnet 案例训练报错",
        "body": "### bug 描述\n软件版本：paddle：2.6.2 , PaddleScience：commit ab417c831798459160a079b10435aeaadcbb2375\n测试案例：PaddleScience/examples/phycrnet 案例训练报错\n测试环境：NVIDIA A100-PCIE-40GB\n测试命令：python main.py DATA_PATH=./data/burgers_1501x2x128x128.mat\n报错信息：\n\n<img width=\"416\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7aa9d79f-4c6a-4e65-a3f3-03b5c10b5565\" />\n\n### 报错分析：\n1 、examples/phycrnet/functions.py中Dataset类将输入数据打包成列表存在字典中。\n\n<img width=\"376\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e2ab30e0-a3a2-447b-a8cc-76c0861dd6ca\" />\n\n2、但是ppsci/data/dataset/array_dataset.py中的__getitem__方法并没有写针对列表输入的处理逻辑，这导致了上述报错的发生（列表不支持列表索引）。\n\n<img width=\"370\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/06636e86-4aa1-4704-816a-dcf0ece48912\" />\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "yuchunliu-metax",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-03-24T13:58:48+00:00",
        "updated_at": "2025-04-03T05:11:40+00:00",
        "closed_at": "2025-04-03T05:11:39+00:00",
        "comments_count": [
            "HydrogenSulfate"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1132,
        "title": "案例 drivaernetplusplus 在Nvidia A100平台训练报错，CUDNN error(3000), CUDNN_STATUS_NOT_SUPPORTED",
        "body": "### bug 描述 bug description\n\n软件版本：paddle：2.6.2 , PaddleScience：commit 44cd7a0ee91691d25e08346efdfc2d7f4ed36d7d\n测试案例：[/opt/PaddleScience/examples/drivaernetplusplus](https://paddlescience-docs.readthedocs.io/zh-cn/latest/zh/examples/drivaernetplusplus/)\n测试环境：NVIDIA A100-PCIE-40GB\n\n训练报错：与  https://github.com/PaddlePaddle/Paddle/issues/50853 CUDNN中问题相似\n_train cmd:_\n\n`python3 ./drivaernetplusplus.py`\n\n_error log:_\n```\n(paddle2.6_ppsci_py310) /opt/PaddleScience/examples/drivaernetplusplus# python3 ./drivaernetplusplus.py\nW0406 12:47:40.342653   665 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.5, Runtime API Version: 12.0\nW0406 12:47:40.343582   665 gpu_resources.cc:164] device: 0, cuDNN Version: 9.7.\n[2025/04/06 12:47:40] ppsci MESSAGE: 'shuffle' and 'drop_last' are both set to False in default as sampler config is not specified.\n[2025/04/06 12:47:40] ppsci MESSAGE: 'shuffle' and 'drop_last' are both set to False in default as sampler config is not specified.\n[2025/04/06 12:47:41] ppsci WARNING: The argument: 'lr_scheduler' now automatically retrieves from 'optimizer._learning_rate' when 'optimizer' is given, so it is recommended to remove it from the Solver's initialization arguments.\n[2025/04/06 12:47:41] ppsci INFO: Using paddlepaddle 2.6.2 on device Place(gpu:0)\n[2025/04/06 12:47:41] ppsci MESSAGE: Set to_static=False for computational optimization.\npython3 ./drivaernetplusplus.pyError executing job with overrides: []\nTraceback (most recent call last):\n  File \"/opt/PaddleScience/examples/drivaernetplusplus/./drivaernetplusplus.py\", line 192, in main\n    train(cfg)\n  File \"/opt/PaddleScience/examples/drivaernetplusplus/./drivaernetplusplus.py\", line 131, in train\n    solver.train()\n  File \"/opt/PaddleScience/ppsci/solver/solver.py\", line 572, in train\n    self.train_epoch_func(self, epoch_id, self.log_freq)\n  File \"/opt/PaddleScience/ppsci/solver/train.py\", line 117, in train_epoch_func\n    losses_all, losses_constraint = solver.forward_helper.train_forward(\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/jit/dy2static/program_translator.py\", line 494, in __call__\n    return self._call_dygraph_function(*args, **kwargs)\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/jit/dy2static/program_translator.py\", line 527, in _call_dygraph_function\n    return self.dygraph_function(*args, **kwargs)\n  File \"/opt/PaddleScience/ppsci/utils/expression.py\", line 96, in train_forward\n    output_dict = model(input_dicts[i])\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/nn/layer/layers.py\", line 1429, in __call__\n    return self.forward(*inputs, **kwargs)\n  File \"/opt/PaddleScience/ppsci/arch/regpointnet.py\", line 125, in forward\n    shortcut = self.bn_shortcut(self.conv_shortcut(x_processed))\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/nn/layer/layers.py\", line 1429, in __call__\n    return self.forward(*inputs, **kwargs)\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/nn/layer/conv.py\", line 375, in forward\n    out = F.conv1d(\n  File \"/opt/anaconda3/envs/paddle2.6_ppsci_py310/lib/python3.10/site-packages/paddle/nn/functional/conv.py\", line 464, in conv1d\n    out = _C_ops.conv2d(\nOSError: (External) CUDNN error(3000), CUDNN_STATUS_NOT_SUPPORTED.\n  [Hint: Please search for the error code(3000) on website (https://docs.nvidia.com/deeplearning/cudnn/api/index.html#cudnnStatus_t) to get Nvidia's official solution and advice about CUDNN Error.] (at /paddle/paddle/phi/backends/gpu/cuda/cudnn_desc.h:162)\n\n\nSet the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.\n\n```\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "closed",
        "user": "yuchunliu-metax",
        "closed_by": "yuchunliu-metax",
        "created_at": "2025-04-06T04:54:10+00:00",
        "updated_at": "2025-04-26T11:58:37+00:00",
        "closed_at": "2025-04-26T11:58:37+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "yuchunliu-metax"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1144,
        "title": "phycrnet 在A100平台精度结果与官方差距大",
        "body": "### bug 描述 bug description\n\n软件版本：paddle：2.6.2 , PaddleScience：commit https://github.com/PaddlePaddle/PaddleScience/commit/ab417c831798459160a079b10435aeaadcbb2375\n测试案例：[PaddleScience/examples/phycrnet](https://paddlescience-docs.readthedocs.io/zh-cn/latest/zh/examples/phycrnet/)\n测试环境：NVIDIA A100-PCIE-40GB\n\nA100 训练日志 ：  [train_log.txt](https://github.com/user-attachments/files/19922194/train_log.txt)\nA100 推理结果 ：a-RMSE: 2.0e-2\n\n![Image](https://github.com/user-attachments/assets/c0b7d2af-a227-4b06-881d-5b9dcfbbc2a8)\n\n官方推理结果：a-RMSE: 3.20e-3\n\n![Image](https://github.com/user-attachments/assets/4668b7b0-cf65-42da-90a3-3da66e6be165)\n\nA100 推理结果与官方推理结果差距较大！\n\n### 其他补充信息 Additional Supplementary Information\n\n_No response_",
        "state": "open",
        "user": "yuchunliu-metax",
        "closed_by": null,
        "created_at": "2025-04-26T12:13:46+00:00",
        "updated_at": "2025-04-28T07:05:09+00:00",
        "closed_at": null,
        "comments_count": [
            "wangguan1995",
            "wangguan1995",
            "yuchunliu-metax"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleScience",
        "number": 1177,
        "title": "TimeXGeometry sample_interior input has no \"sdf_func\"",
        "body": "TimeXGeometry has no \"sdf_func\"，采样sample_interior得到的数据中没有'sdf'，请问是否有必要支持。\n目前Geometry都可以得到'sdf'数据，TimeXGeometry sample_initial_interior也可以得到'sdf'。\n",
        "state": "closed",
        "user": "pecanjk",
        "closed_by": "HydrogenSulfate",
        "created_at": "2025-07-02T04:19:45+00:00",
        "updated_at": "2025-07-07T05:43:15+00:00",
        "closed_at": "2025-07-02T12:36:17+00:00",
        "comments_count": [
            "HydrogenSulfate",
            "pecanjk",
            "HydrogenSulfate",
            "HydrogenSulfate"
        ],
        "labels": []
    }
]