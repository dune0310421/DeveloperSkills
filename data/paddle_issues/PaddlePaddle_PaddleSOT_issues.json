[
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 89,
        "title": "SideEffect 部分的设计文档",
        "body": null,
        "state": "closed",
        "user": "2742195759",
        "closed_by": "SigureMo",
        "created_at": "2023-05-22T08:45:54+00:00",
        "updated_at": "2023-07-11T12:48:48+00:00",
        "closed_at": "2023-07-11T12:48:48+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 94,
        "title": "扩展 Fallback 场景，允许用户标记某一个函数来强制跑动态图",
        "body": "刚刚 @Aurelius84 提到的，暂时记一下～\r\n\r\n增加一个装饰器，以使某一个特定函数跑动态图\r\n\r\n```python\r\n@fallback_to_dygraph\r\ndef b():\r\n    ...\r\n\r\ndef foo()\r\n    a()   # <---- 跑正常 Symbolic Trace 逻辑\r\n    b()   # <---- 强制跑动态图\r\n    c()   # <---- 跑正常 Symbolic Trace 逻辑\r\n```\r\n\r\n看样子这个函数好像和 print 没什么区别？应该可以复用 print 对应的 Fallback 逻辑？\r\n\r\n~~本需求和 #87 是否相似，接口上能否统一什么的？~~ 好像不太一样",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-05-25T02:40:11+00:00",
        "updated_at": "2023-05-27T08:57:33+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 85,
        "title": "重构 tests 目录",
        "body": "我们的 `tests` 目录下直接放置的是旧方案所使用的单测，新的方案已经大多用不上了，而我们现在主要使用的单测则是放在了 `test_executor` 目录下，而这样的目录结构会引起初次接触项目的开发者的困惑，因此这里建议将原来的旧的单测（直接放置在 `tests` 下的），移动到 `test/deprecated/` 下，而 `tests/test_executor/` 下的则直接放置在 `tests/` 下",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-05-22T01:38:13+00:00",
        "updated_at": "2023-05-22T08:56:27+00:00",
        "closed_at": "2023-05-22T08:56:27+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 87,
        "title": "优化 SIR call Layer 功能，实现黑白名单机制",
        "body": "为了能够让 Paddle 内置的 Layer 中的代码不进行 Fallback，打断子图，我们扩展了 SIR 的功能，使 SIR 能够支持 call Layer，这些 Layer 会直接动转静，而不会跑字节码收集组网代码，我们默认会将 Paddle 的内置 Layer 放到 SIR call Layer 中，可以充分利用了 Paddle 内置 Layer 动静统一的特性，而用户自定义的 Layer 则会仍然跑字节码\r\n\r\n为了能够更加自由地控制一个 Layer 是否跑字节码，我们可以增加黑白名单机制，以更加确定性地指定一个 Layer 直接动转静还是跑字节码",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-05-22T08:17:21+00:00",
        "updated_at": "2023-05-22T08:17:21+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 84,
        "title": "重构 Variable，拆分成多个文件",
        "body": "依赖于 #83\r\n\r\n随着开发的迭代，需要的 Variable 越来越多，我们的 `variables.py` 已经非常臃肿了，我们可以将 Variable 分成几类，分别放在相应的文件下，以便管理，比如继承 `ContainerVariable` 的可以放在一个文件下，继承 `CallableVariable` 的可以放在一个文件下。",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-05-22T01:37:51+00:00",
        "updated_at": "2023-07-11T13:53:17+00:00",
        "closed_at": "2023-06-05T12:48:41+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 83,
        "title": "重构 Variable `from_value` register 机制，增加优先级",
        "body": "我们现在 `VariableFactory.from_value` 的查找机制依赖于 register 时的先后顺序，而 registor 的先后顺序又依赖于源码的先后顺序，这将会导致源码难以重构，且很容易导致非预期的 bug，为了避免这一情况，我们需要增加一种注册优先级机制，将 `@VariableFactory.register_from_value` 扩展为 `@VariableFactory.register_from_value(priority: int = 0)`，默认优先级为 0，对于部分需要优先查找的，需要设置为更高的优先级（比如 `TensorMethod` 优先级应高于 `UserDefinedMethod`）",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-05-22T01:37:23+00:00",
        "updated_at": "2023-07-11T13:53:16+00:00",
        "closed_at": "2023-06-05T12:48:40+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 86,
        "title": "移除 ProxyTensor 相关代码",
        "body": "ProxyTensor 是我们早期方案在运行时 trace 很重要的一个结构，它可以在运行时将 Tensor 操作被动地转化为 SIR 组网操作，是动态图组网逻辑和 SIR 组网之间的一个重要桥梁。\r\n\r\n而对于新的方案而言，我们已经不再是在运行时捕获组网操作了，所有的操作可以在编译时利用模拟执行来捕获到，自然也可以通过 TensorVariable 相关操作捕获所有的组网逻辑，因此 ProxyTensor 的作用已经不太明显，现在唯一的作用就是利用 ProxyTensor 来进行 SIR 组网，而这一功能完全可以由 TensorVariable 来承担。\r\n\r\n为了提高项目的可读性和可维护性，因此建议移除 ProxyTensor 及其相关代码，相关属性可以直接放到 TensorVariable 上。\r\n",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-05-22T01:38:30+00:00",
        "updated_at": "2023-05-30T03:30:22+00:00",
        "closed_at": "2023-05-30T03:30:22+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 105,
        "title": "Python 3.9 版本支持",
        "body": "我们现在主要是基于 Python 3.8 开发，而按照 Paddle 发版计划和 Python 的迭代计划，我们应该在本功能发布前支持 Python 3.8、3.9、3.10、3.11 四个版本，而当前我们只能保证在 Python 3.8 下全流程跑通，如下是我们的版本支持现状：\r\n\r\n| Version | Paddle Eval Frame | paddle-symbolic-trace |\r\n| - | - | - |\r\n| 3.8 | ✅ | ✅ |\r\n| 3.9 | ✅ | ❌ |\r\n| 3.10 | ✅| ❌ |\r\n| 3.11 | ❌（支持中） | ❌ |\r\n\r\n由于 Python 3.11 在各方面改动都比较大，目前开发可暂不考虑 Python 3.11，会在未来集中支持，而 Python 3.9、3.10 主要变化是一些字节码上的变化，支持所需开销不大，因此我们计划在近期完成现有单测的 Python 3.9、3.10 支持，目前需要修复的单测如下（本 PR 暂时仅统计 Python 3.9）：\r\n\r\n| id  | unittest name                                                    | issues                                                 |\r\n| --- | ---------------------------------------------------------------- | ------------------------------------------------------ |\r\n| 1   | test_10_build_unpack.py                                          | 未支持的字节码 LIST_EXTEND                             |\r\n| 2   | test_17_paddle_layer.py、test_resnet.py、test_resnet_backward.py | 未支持的字节码 IS_OP |\r\n\r\n在全部单测支持后，我们会在 CI 中开启 Python 3.9 测试，确保 3.9 支持是没问题的",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-01T03:07:00+00:00",
        "updated_at": "2023-07-11T13:53:18+00:00",
        "closed_at": "2023-06-06T13:25:31+00:00",
        "comments_count": [
            "SigureMo"
        ],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 93,
        "title": "优化 eval_frame 对 Paddle 函数的 skip 机制",
        "body": "目前我们会在 eval frame 的 callback 入口处检查是否是 Paddle 的函数，如果是则直接跳过，相关逻辑如下：\r\n\r\nhttps://github.com/2742195759/paddle-symbolic-trace/blob/6b77ad2326d74a91e80009699b30aa27137f774d/symbolic_trace/opcode_translator/transform.py#L9\r\n\r\nhttps://github.com/2742195759/paddle-symbolic-trace/blob/6b77ad2326d74a91e80009699b30aa27137f774d/symbolic_trace/opcode_translator/skip_files.py#L93\r\n\r\n`paddle.nn.Layer.__call__` 这个函数也会被这个规则跳过，而所有继承自 `Layer` 的网络都会去找到这个 `paddle.nn.Layer.__call__` 来作为函数入口，所以我们现在还不支持使用 `symbolic_trace` 函数直接装饰，需要一些 trick，用函数包装一下，如：\r\n\r\nhttps://github.com/2742195759/paddle-symbolic-trace/blob/6b77ad2326d74a91e80009699b30aa27137f774d/tests/test_17_paddle_layer.py#L18-L19\r\n\r\n我们希望优化 Paddle 相关函数的 skip 机制，以支持直接装饰 `paddle.nn.Layer`\r\n",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-05-24T12:29:02+00:00",
        "updated_at": "2023-06-04T09:56:27+00:00",
        "closed_at": null,
        "comments_count": [
            "SigureMo",
            "zrr1999"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 113,
        "title": "项目结构整理",
        "body": "TODO，稍后写下描述",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-06-02T13:19:02+00:00",
        "updated_at": "2023-06-02T13:19:02+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 117,
        "title": "Bert模型子图数量和质量优化",
        "body": "背景：目前我们已经在Bert模型上跑通了symbolic-trace的训练流程，但是只有两个较小的子图进行了静态图的组网，大部分代码还跑在动态图下\r\n\r\n目标：优化symbolic-trace的代码，消除unsupport的情况，使得Bert模型在symbolic-trace下有更优的子图质量（最理想情况下只有一个子图，并且所有组网相关的代码都在这个子图中）\r\n\r\n思路：目前我们在跑通bert训练流程的过程中，整理了一个文档，记录了遇到的问题、相关排查的思路以及已经暴露的问题。可以重点关注下面PDF中的第二章和第四章了解一下排查的思路，尝试解决第五章中列出的相关问题\r\n\r\n[Bert跑通symbolic_trace.pdf](https://github.com/2742195759/paddle-symbolic-trace/files/11652728/Bert.symbolic_trace.pdf)\r\n",
        "state": "open",
        "user": "0x45f",
        "closed_by": null,
        "created_at": "2023-06-05T13:04:17+00:00",
        "updated_at": "2023-06-05T13:04:17+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 122,
        "title": "在 Variable 里添加变量本身的名字方便 debug",
        "body": "我们现在的 Variable 没有任何属性来表示变量原来的名字的，比如如下代码：\r\n\r\n```python\r\ndef foo(x, y):\r\n   return x + y\r\n```\r\n\r\n我们的 Variable 只有属性 `id` 来唯一标识一个 Variable，以及对于 TensorVariable 有 `var_name` 用以生成 SIR Symbol，但我们无法将 Variable 对应到原来的名字 `\"x\"` 和 `\"y\"`\r\n\r\n为了方便 debug，我们考虑添加一个 `debug_name` 属性（可以考虑使用 `property`），用来表示该 Variable 对应的原始变量名\r\n\r\n这应该需要做出如下修改：\r\n\r\n- 在 `_prepare_virtual_env` 时根据 name 来为 Variable 添加 `debug_name`（增加一个 keyword only arg）\r\n- 在 `STORE_xxx` 时修改这个 `debug_name` 属性\r\n- 在 Variable 的 `__repr__` 体现出这个 `debug_name`，以便在观察模拟栈时直观地看出原始变量名\r\n\r\n可能存在的问题：\r\n\r\n中间变量的变量名是什么呢？比如：\r\n\r\n```python\r\ndef foo(x, y, z):\r\n    return x + y * z\r\n```\r\n\r\n`y * z` 的 `debug_name` 是什么呢？可以考虑使用 `tracker` 来获得其依赖的 name，根据来源来格式化一个变量名，比如\r\n\r\n```\r\ny[0]     --> y_getitem_0\r\nz.attr_1 --> z_getattr_attr_1\r\nx + y    --> tmp_var_x_y\r\n```\r\n\r\n可以考虑这样实现：\r\n\r\n```python\r\nclass VariableBase:\r\n    def __init__(self, ):\r\n        self._debug_name: str | None = None\r\n\r\n    @property\r\n    def debug_name(self):\r\n        if self._debug_name is not None:\r\n            return self._debug_name\r\n        # 根据 tracker 生成\r\n        return ...\r\n```",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-06T09:48:01+00:00",
        "updated_at": "2023-07-11T13:53:19+00:00",
        "closed_at": "2023-06-13T07:45:15+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 114,
        "title": "添加报错体系文档",
        "body": "我们的项目在报错上应该有着严格的要求，不然 Fallback 和子图打断机制可能不能按照预期进行，我们需要一个文档统一梳理一下，并使用**流程图**来说明在何种情况使用哪个报错、会触发什么。\r\n\r\n这里简要整理下都有哪些情况需要报错：\r\n\r\n- 用户错误书写的代码，本应在运行时该报错的\r\n- 我们错误地模拟运行导致的错误\r\n- （暂时懒得想啦，只想这俩，当然不是只有这俩）……",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-06-03T09:20:59+00:00",
        "updated_at": "2023-06-03T18:00:31+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 123,
        "title": "增加对闭包的支持",
        "body": "暂时可参考 https://github.com/2742195759/paddle-symbolic-trace/blob/develop/docs/design/closure.md",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "2742195759",
        "created_at": "2023-06-06T11:03:58+00:00",
        "updated_at": "2023-07-11T13:53:20+00:00",
        "closed_at": "2023-06-29T03:20:47+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 118,
        "title": "🗓️ Python 各版本字节码差异表格",
        "body": "> **Note**\r\n>\r\n> ✅ 是可以点的，可以直达文档～\r\n\r\n| | Python 3.8 | Python 3.9 | Python 3.10 | Python 3.11 | Python 3.12 |\r\n| :-: | :-: | :-: | :-: | :-: | :-: |\r\n| `NOP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-NOP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-NOP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-NOP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-NOP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-NOP) |\r\n| `POP_TOP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_TOP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-POP_TOP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-POP_TOP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_TOP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_TOP) |\r\n| `ROT_TWO` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-ROT_TWO) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-ROT_TWO) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-ROT_TWO) | ❌ | ❌ |\r\n| `ROT_THREE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-ROT_THREE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-ROT_THREE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-ROT_THREE) | ❌ | ❌ |\r\n| `ROT_FOUR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-ROT_FOUR)🆕 |[✅](https://docs.python.org/3.9/library/dis.html#opcode-ROT_FOUR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-ROT_FOUR) | ❌ | ❌ |\r\n| `DUP_TOP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DUP_TOP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DUP_TOP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DUP_TOP) | ❌ | ❌ |\r\n| `DUP_TOP_TWO` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DUP_TOP_TWO) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DUP_TOP_TWO) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DUP_TOP_TWO) | ❌ | ❌ |\r\n| `UNARY_POSITIVE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNARY_POSITIVE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNARY_POSITIVE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNARY_POSITIVE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNARY_POSITIVE) | ❌ |\r\n| `UNARY_NEGATIVE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNARY_NEGATIVE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNARY_NEGATIVE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNARY_NEGATIVE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNARY_NEGATIVE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-UNARY_NEGATIVE) |\r\n| `UNARY_NOT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNARY_NOT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNARY_NOT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNARY_NOT) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNARY_NOT) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-UNARY_NOT) |\r\n| `UNARY_INVERT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNARY_INVERT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNARY_INVERT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNARY_INVERT) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNARY_INVERT) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-UNARY_INVERT) |\r\n| `GET_ITER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-GET_ITER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-GET_ITER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_ITER) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_ITER) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_ITER) |\r\n| `GET_YIELD_FROM_ITER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-GET_YIELD_FROM_ITER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-GET_YIELD_FROM_ITER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_YIELD_FROM_ITER) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_YIELD_FROM_ITER) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_YIELD_FROM_ITER) |\r\n| `BINARY_POWER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_POWER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_POWER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_POWER) | ❌ | ❌ |\r\n| `BINARY_MULTIPLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_MULTIPLY) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_MULTIPLY) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_MULTIPLY) | ❌ | ❌ |\r\n| `BINARY_MATRIX_MULTIPLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_MATRIX_MULTIPLY) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_MATRIX_MULTIPLY) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_MATRIX_MULTIPLY) | ❌ | ❌ |\r\n| `BINARY_FLOOR_DIVIDE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_FLOOR_DIVIDE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_FLOOR_DIVIDE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_FLOOR_DIVIDE) | ❌ | ❌ |\r\n| `BINARY_TRUE_DIVIDE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_TRUE_DIVIDE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_TRUE_DIVIDE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_TRUE_DIVIDE) | ❌ | ❌ |\r\n| `BINARY_MODULO` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_MODULO) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_MODULO) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_MODULO) | ❌ | ❌ |\r\n| `BINARY_ADD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_ADD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_ADD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_ADD) | ❌ | ❌ |\r\n| `BINARY_SUBTRACT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_SUBTRACT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_SUBTRACT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_SUBTRACT) | ❌ | ❌ |\r\n| `BINARY_SUBSCR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_SUBSCR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_SUBSCR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_SUBSCR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BINARY_SUBSCR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BINARY_SUBSCR) |\r\n| `BINARY_LSHIFT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_LSHIFT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_LSHIFT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_LSHIFT) | ❌ | ❌ |\r\n| `BINARY_RSHIFT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_RSHIFT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_RSHIFT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_RSHIFT) | ❌ | ❌ |\r\n| `BINARY_AND` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_AND) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_AND) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_AND) | ❌ | ❌ |\r\n| `BINARY_XOR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_XOR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_XOR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_XOR) | ❌ | ❌ |\r\n| `BINARY_OR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BINARY_OR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BINARY_OR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BINARY_OR) | ❌ | ❌ |\r\n| `INPLACE_POWER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_POWER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_POWER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_POWER) | ❌ | ❌ |\r\n| `INPLACE_MULTIPLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_MULTIPLY) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_MULTIPLY) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_MULTIPLY) | ❌ | ❌ |\r\n| `INPLACE_MATRIX_MULTIPLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_MATRIX_MULTIPLY) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_MATRIX_MULTIPLY) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_MATRIX_MULTIPLY) | ❌ | ❌ |\r\n| `INPLACE_FLOOR_DIVIDE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_FLOOR_DIVIDE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_FLOOR_DIVIDE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_FLOOR_DIVIDE) | ❌ | ❌ |\r\n| `INPLACE_TRUE_DIVIDE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_TRUE_DIVIDE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_TRUE_DIVIDE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_TRUE_DIVIDE) | ❌ | ❌ |\r\n| `INPLACE_MODULO` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_MODULO) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_MODULO) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_MODULO) | ❌ | ❌ |\r\n| `INPLACE_ADD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_ADD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_ADD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_ADD) | ❌ | ❌ |\r\n| `INPLACE_SUBTRACT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_SUBTRACT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_SUBTRACT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_SUBTRACT) | ❌ | ❌ |\r\n| `INPLACE_LSHIFT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_LSHIFT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_LSHIFT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_LSHIFT) | ❌ | ❌ |\r\n| `INPLACE_RSHIFT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_RSHIFT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_RSHIFT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_RSHIFT) | ❌ | ❌ |\r\n| `INPLACE_AND` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_AND) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_AND) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_AND) | ❌ | ❌ |\r\n| `INPLACE_XOR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_XOR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_XOR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_XOR) | ❌ | ❌ |\r\n| `INPLACE_OR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-INPLACE_OR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-INPLACE_OR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-INPLACE_OR) | ❌ | ❌ |\r\n| `STORE_SUBSCR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_SUBSCR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_SUBSCR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_SUBSCR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_SUBSCR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_SUBSCR) |\r\n| `DELETE_SUBSCR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_SUBSCR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_SUBSCR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_SUBSCR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_SUBSCR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_SUBSCR) |\r\n| `GET_AWAITABLE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-GET_AWAITABLE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-GET_AWAITABLE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_AWAITABLE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_AWAITABLE)<br/>Changed in version 3.11: Previously, this instruction did not have an oparg. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_AWAITABLE) |\r\n| `GET_AITER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-GET_AITER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-GET_AITER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_AITER) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_AITER) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_AITER) |\r\n| `GET_ANEXT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-GET_ANEXT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-GET_ANEXT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_ANEXT) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_ANEXT) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_ANEXT) |\r\n| `END_ASYNC_FOR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-END_ASYNC_FOR)🆕 |[✅](https://docs.python.org/3.9/library/dis.html#opcode-END_ASYNC_FOR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-END_ASYNC_FOR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-END_ASYNC_FOR)<br/>Changed in version 3.11: Exception representation on the stack now consist of one, not three, items. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-END_ASYNC_FOR) |\r\n| `BEFORE_ASYNC_WITH` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BEFORE_ASYNC_WITH) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BEFORE_ASYNC_WITH) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BEFORE_ASYNC_WITH) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BEFORE_ASYNC_WITH) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BEFORE_ASYNC_WITH) |\r\n| `SETUP_ASYNC_WITH` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-SETUP_ASYNC_WITH) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SETUP_ASYNC_WITH) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SETUP_ASYNC_WITH) | ❌ | ❌ |\r\n| `PRINT_EXPR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-PRINT_EXPR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-PRINT_EXPR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-PRINT_EXPR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-PRINT_EXPR) | ❌ |\r\n| `SET_ADD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-SET_ADD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SET_ADD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SET_ADD) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-SET_ADD) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SET_ADD) |\r\n| `LIST_APPEND` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LIST_APPEND) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LIST_APPEND) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LIST_APPEND) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LIST_APPEND) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LIST_APPEND) |\r\n| `MAP_ADD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-MAP_ADD)<br/>Changed in version 3.8: Map value is TOS and map key is TOS1. Before, those were reversed. |[✅](https://docs.python.org/3.9/library/dis.html#opcode-MAP_ADD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MAP_ADD) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MAP_ADD) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MAP_ADD) |\r\n| `RETURN_VALUE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-RETURN_VALUE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-RETURN_VALUE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-RETURN_VALUE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-RETURN_VALUE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RETURN_VALUE) |\r\n| `YIELD_VALUE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-YIELD_VALUE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-YIELD_VALUE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-YIELD_VALUE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-YIELD_VALUE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-YIELD_VALUE)<br/>Changed in version 3.12: oparg set to be the exception block depth, for efficient closing of generators. |\r\n| `YIELD_FROM` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-YIELD_FROM) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-YIELD_FROM) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-YIELD_FROM) | ❌ | ❌ |\r\n| `SETUP_ANNOTATIONS` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-SETUP_ANNOTATIONS) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SETUP_ANNOTATIONS) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SETUP_ANNOTATIONS) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-SETUP_ANNOTATIONS) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SETUP_ANNOTATIONS) |\r\n| `IMPORT_STAR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-IMPORT_STAR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-IMPORT_STAR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-IMPORT_STAR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-IMPORT_STAR) | ❌ |\r\n| `POP_BLOCK` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_BLOCK) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-POP_BLOCK) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-POP_BLOCK) | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_BLOCK) |\r\n| `POP_EXCEPT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_EXCEPT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-POP_EXCEPT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-POP_EXCEPT) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_EXCEPT)<br/>Changed in version 3.11: Exception representation on the stack now consist of one, not three, items. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_EXCEPT) |\r\n| `POP_FINALLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_FINALLY)🆕 | ❌ | ❌ | ❌ | ❌ |\r\n| `BEGIN_FINALLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BEGIN_FINALLY)🆕 | ❌ | ❌ | ❌ | ❌ |\r\n| `END_FINALLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-END_FINALLY) | ❌ | ❌ | ❌ | ❌ |\r\n| `LOAD_BUILD_CLASS` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_BUILD_CLASS) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_BUILD_CLASS) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_BUILD_CLASS) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_BUILD_CLASS) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_BUILD_CLASS) |\r\n| `SETUP_WITH` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-SETUP_WITH) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SETUP_WITH) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SETUP_WITH) | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SETUP_WITH) |\r\n| `WITH_CLEANUP_START` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-WITH_CLEANUP_START) | ❌ | ❌ | ❌ | ❌ |\r\n| `WITH_CLEANUP_FINISH` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-WITH_CLEANUP_FINISH) | ❌ | ❌ | ❌ | ❌ |\r\n| `STORE_NAME` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_NAME) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_NAME) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_NAME) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_NAME) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_NAME) |\r\n| `DELETE_NAME` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_NAME) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_NAME) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_NAME) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_NAME) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_NAME) |\r\n| `UNPACK_SEQUENCE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNPACK_SEQUENCE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNPACK_SEQUENCE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNPACK_SEQUENCE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNPACK_SEQUENCE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-UNPACK_SEQUENCE) |\r\n| `UNPACK_EX` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-UNPACK_EX) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-UNPACK_EX) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-UNPACK_EX) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-UNPACK_EX) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-UNPACK_EX) |\r\n| `STORE_ATTR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_ATTR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_ATTR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_ATTR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_ATTR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_ATTR) |\r\n| `DELETE_ATTR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_ATTR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_ATTR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_ATTR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_ATTR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_ATTR) |\r\n| `STORE_GLOBAL` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_GLOBAL) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_GLOBAL) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_GLOBAL) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_GLOBAL) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_GLOBAL) |\r\n| `DELETE_GLOBAL` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_GLOBAL) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_GLOBAL) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_GLOBAL) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_GLOBAL) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_GLOBAL) |\r\n| `LOAD_CONST` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_CONST) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_CONST) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_CONST) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_CONST) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_CONST) |\r\n| `LOAD_NAME` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_NAME) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_NAME) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_NAME) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_NAME) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_NAME) |\r\n| `BUILD_TUPLE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_TUPLE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_TUPLE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_TUPLE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_TUPLE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_TUPLE) |\r\n| `BUILD_LIST` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_LIST) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_LIST) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_LIST) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_LIST) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_LIST) |\r\n| `BUILD_SET` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_SET) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_SET) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_SET) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_SET) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_SET) |\r\n| `BUILD_MAP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_MAP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_MAP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_MAP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_MAP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_MAP) |\r\n| `BUILD_CONST_KEY_MAP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_CONST_KEY_MAP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_CONST_KEY_MAP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_CONST_KEY_MAP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_CONST_KEY_MAP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_CONST_KEY_MAP) |\r\n| `BUILD_STRING` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_STRING) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_STRING) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_STRING) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_STRING) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_STRING) |\r\n| `BUILD_TUPLE_UNPACK` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_TUPLE_UNPACK) | ❌ | ❌ | ❌ | ❌ |\r\n| `BUILD_TUPLE_UNPACK_WITH_CALL` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_TUPLE_UNPACK_WITH_CALL) | ❌ | ❌ | ❌ | ❌ |\r\n| `BUILD_LIST_UNPACK` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_LIST_UNPACK) | ❌ | ❌ | ❌ | ❌ |\r\n| `BUILD_SET_UNPACK` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_SET_UNPACK) | ❌ | ❌ | ❌ | ❌ |\r\n| `BUILD_MAP_UNPACK` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_MAP_UNPACK) | ❌ | ❌ | ❌ | ❌ |\r\n| `BUILD_MAP_UNPACK_WITH_CALL` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_MAP_UNPACK_WITH_CALL) | ❌ | ❌ | ❌ | ❌ |\r\n| `LOAD_ATTR` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_ATTR) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_ATTR) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_ATTR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_ATTR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_ATTR)<br/>Changed in version 3.12: If the low bit of namei is set, then a NULL or self is pushed to the stack before the attribute or unbound method respectively. |\r\n| `COMPARE_OP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-COMPARE_OP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-COMPARE_OP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-COMPARE_OP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-COMPARE_OP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-COMPARE_OP) |\r\n| `IMPORT_NAME` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-IMPORT_NAME) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-IMPORT_NAME) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-IMPORT_NAME) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-IMPORT_NAME) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-IMPORT_NAME) |\r\n| `IMPORT_FROM` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-IMPORT_FROM) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-IMPORT_FROM) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-IMPORT_FROM) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-IMPORT_FROM) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-IMPORT_FROM) |\r\n| `JUMP_FORWARD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-JUMP_FORWARD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-JUMP_FORWARD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-JUMP_FORWARD) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-JUMP_FORWARD) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-JUMP_FORWARD) |\r\n| `POP_JUMP_IF_TRUE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_JUMP_IF_TRUE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-POP_JUMP_IF_TRUE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-POP_JUMP_IF_TRUE) | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_JUMP_IF_TRUE)<br/>Changed in version 3.12: This is no longer a pseudo-instruction. |\r\n| `POP_JUMP_IF_FALSE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-POP_JUMP_IF_FALSE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-POP_JUMP_IF_FALSE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-POP_JUMP_IF_FALSE) | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_JUMP_IF_FALSE)<br/>Changed in version 3.12: This is no longer a pseudo-instruction. |\r\n| `JUMP_IF_TRUE_OR_POP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-JUMP_IF_TRUE_OR_POP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-JUMP_IF_TRUE_OR_POP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-JUMP_IF_TRUE_OR_POP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-JUMP_IF_TRUE_OR_POP)<br/>Changed in version 3.11: The oparg is now a relative delta rather than an absolute target. | ❌ |\r\n| `JUMP_IF_FALSE_OR_POP` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-JUMP_IF_FALSE_OR_POP) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-JUMP_IF_FALSE_OR_POP) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-JUMP_IF_FALSE_OR_POP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-JUMP_IF_FALSE_OR_POP)<br/>Changed in version 3.11: The oparg is now a relative delta rather than an absolute target. | ❌ |\r\n| `JUMP_ABSOLUTE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-JUMP_ABSOLUTE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-JUMP_ABSOLUTE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-JUMP_ABSOLUTE) | ❌ | ❌ |\r\n| `FOR_ITER` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-FOR_ITER) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-FOR_ITER) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-FOR_ITER) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-FOR_ITER) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-FOR_ITER)<br/>Changed in version 3.12: Up until 3.11 the iterator was popped when it was exhausted. |\r\n| `LOAD_GLOBAL` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_GLOBAL) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_GLOBAL) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_GLOBAL) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_GLOBAL)<br/>Changed in version 3.11: If the low bit of namei is set, then a NULL is pushed to the stack before the global variable. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_GLOBAL) |\r\n| `SETUP_FINALLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-SETUP_FINALLY) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SETUP_FINALLY) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SETUP_FINALLY) | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SETUP_FINALLY) |\r\n| `CALL_FINALLY` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-CALL_FINALLY)🆕 | ❌ | ❌ | ❌ | ❌ |\r\n| `LOAD_FAST` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_FAST) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_FAST) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_FAST) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_FAST) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_FAST)<br/>Changed in version 3.12: This opcode is now only used in situations where the local variable is guaranteed to be initialized. It cannot raise UnboundLocalError. |\r\n| `STORE_FAST` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_FAST) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_FAST) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_FAST) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_FAST) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_FAST) |\r\n| `DELETE_FAST` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_FAST) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_FAST) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_FAST) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_FAST) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_FAST) |\r\n| `LOAD_CLOSURE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_CLOSURE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_CLOSURE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_CLOSURE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_CLOSURE)<br/>Changed in version 3.11: i is no longer offset by the length of co_varnames. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_CLOSURE) |\r\n| `LOAD_DEREF` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_DEREF) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_DEREF) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_DEREF) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_DEREF)<br/>Changed in version 3.11: i is no longer offset by the length of co_varnames. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_DEREF) |\r\n| `LOAD_CLASSDEREF` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_CLASSDEREF) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_CLASSDEREF) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_CLASSDEREF) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_CLASSDEREF)<br/>Changed in version 3.11: i is no longer offset by the length of co_varnames. | ❌ |\r\n| `STORE_DEREF` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-STORE_DEREF) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-STORE_DEREF) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-STORE_DEREF) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-STORE_DEREF)<br/>Changed in version 3.11: i is no longer offset by the length of co_varnames. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_DEREF) |\r\n| `DELETE_DEREF` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-DELETE_DEREF) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DELETE_DEREF) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DELETE_DEREF) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DELETE_DEREF)<br/>Changed in version 3.11: i is no longer offset by the length of co_varnames. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DELETE_DEREF) |\r\n| `RAISE_VARARGS` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-RAISE_VARARGS) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-RAISE_VARARGS) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-RAISE_VARARGS) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-RAISE_VARARGS) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RAISE_VARARGS) |\r\n| `CALL_FUNCTION` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-CALL_FUNCTION) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-CALL_FUNCTION) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-CALL_FUNCTION) | ❌ | ❌ |\r\n| `CALL_FUNCTION_KW` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-CALL_FUNCTION_KW) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-CALL_FUNCTION_KW) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-CALL_FUNCTION_KW) | ❌ | ❌ |\r\n| `CALL_FUNCTION_EX` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-CALL_FUNCTION_EX) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-CALL_FUNCTION_EX) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-CALL_FUNCTION_EX) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CALL_FUNCTION_EX) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CALL_FUNCTION_EX) |\r\n| `LOAD_METHOD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-LOAD_METHOD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_METHOD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_METHOD) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_METHOD) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_METHOD) |\r\n| `CALL_METHOD` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-CALL_METHOD) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-CALL_METHOD) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-CALL_METHOD) | ❌ | ❌ |\r\n| `MAKE_FUNCTION` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-MAKE_FUNCTION) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-MAKE_FUNCTION) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MAKE_FUNCTION)<br/>Changed in version 3.10: Flag value 0x04 is a tuple of strings instead of dictionary |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MAKE_FUNCTION)<br/>Changed in version 3.11: Qualified name at TOS was removed. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MAKE_FUNCTION) |\r\n| `BUILD_SLICE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-BUILD_SLICE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-BUILD_SLICE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-BUILD_SLICE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BUILD_SLICE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BUILD_SLICE) |\r\n| `EXTENDED_ARG` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-EXTENDED_ARG) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-EXTENDED_ARG) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-EXTENDED_ARG) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-EXTENDED_ARG) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-EXTENDED_ARG) |\r\n| `FORMAT_VALUE` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-FORMAT_VALUE) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-FORMAT_VALUE) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-FORMAT_VALUE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-FORMAT_VALUE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-FORMAT_VALUE) |\r\n| `HAVE_ARGUMENT` | [✅](https://docs.python.org/3.8/library/dis.html#opcode-HAVE_ARGUMENT) |[✅](https://docs.python.org/3.9/library/dis.html#opcode-HAVE_ARGUMENT) |[✅](https://docs.python.org/3.10/library/dis.html#opcode-HAVE_ARGUMENT) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-HAVE_ARGUMENT) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-HAVE_ARGUMENT)<br/>Changed in version 3.12: Pseudo instructions were added to the dis module, and for them it is not true that comparison with HAVE_ARGUMENT indicates whether they use their arg. |\r\n| `RERAISE` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-RERAISE)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-RERAISE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-RERAISE)<br/>Changed in version 3.11: Exception representation on the stack now consist of one, not three, items. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RERAISE) |\r\n| `WITH_EXCEPT_START` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-WITH_EXCEPT_START)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-WITH_EXCEPT_START) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-WITH_EXCEPT_START)<br/>Changed in version 3.11: The `__exit__` function is in position 4 of the stack rather than 7. Exception representation on the stack now consist of one, not three, items. |[✅](https://docs.python.org/3.12/library/dis.html#opcode-WITH_EXCEPT_START) |\r\n| `LOAD_ASSERTION_ERROR` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LOAD_ASSERTION_ERROR)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LOAD_ASSERTION_ERROR) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LOAD_ASSERTION_ERROR) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_ASSERTION_ERROR) |\r\n| `LIST_TO_TUPLE` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LIST_TO_TUPLE)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LIST_TO_TUPLE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LIST_TO_TUPLE) | ❌ |\r\n| `LIST_EXTEND` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-LIST_EXTEND)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-LIST_EXTEND) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-LIST_EXTEND) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LIST_EXTEND) |\r\n| `SET_UPDATE` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-SET_UPDATE)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-SET_UPDATE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-SET_UPDATE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SET_UPDATE) |\r\n| `DICT_UPDATE` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DICT_UPDATE)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DICT_UPDATE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DICT_UPDATE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DICT_UPDATE) |\r\n| `DICT_MERGE` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-DICT_MERGE)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-DICT_MERGE) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-DICT_MERGE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-DICT_MERGE) |\r\n| `IS_OP` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-IS_OP)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-IS_OP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-IS_OP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-IS_OP) |\r\n| `CONTAINS_OP` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-CONTAINS_OP)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-CONTAINS_OP) |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CONTAINS_OP) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CONTAINS_OP) |\r\n| `JUMP_IF_NOT_EXC_MATCH` |  ❌ |[✅](https://docs.python.org/3.9/library/dis.html#opcode-JUMP_IF_NOT_EXC_MATCH)🆕 |[✅](https://docs.python.org/3.10/library/dis.html#opcode-JUMP_IF_NOT_EXC_MATCH) | ❌ | ❌ |\r\n| `COPY_DICT_WITHOUT_KEYS` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-COPY_DICT_WITHOUT_KEYS)🆕 | ❌ | ❌ |\r\n| `GET_LEN` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GET_LEN)🆕 |[✅](https://docs.python.org/3.11/library/dis.html#opcode-GET_LEN) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-GET_LEN) |\r\n| `MATCH_MAPPING` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MATCH_MAPPING)🆕 |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MATCH_MAPPING) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MATCH_MAPPING) |\r\n| `MATCH_SEQUENCE` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MATCH_SEQUENCE)🆕 |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MATCH_SEQUENCE) |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MATCH_SEQUENCE) |\r\n| `MATCH_KEYS` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MATCH_KEYS)🆕 |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MATCH_KEYS)<br/>Changed in version 3.11: Previously, this instruction also pushed a boolean value indicating success (True) or failure (False). |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MATCH_KEYS) |\r\n| `MATCH_CLASS` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-MATCH_CLASS)🆕 |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MATCH_CLASS)<br/>Changed in version 3.11: Previously, this instruction also pushed a boolean value indicating success (True) or failure (False). |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MATCH_CLASS) |\r\n| `GEN_START` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-GEN_START)🆕 | ❌ | ❌ |\r\n| `ROT_N` |  ❌ | ❌ |[✅](https://docs.python.org/3.10/library/dis.html#opcode-ROT_N)🆕 | ❌ | ❌ |\r\n| `COPY` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-COPY)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-COPY) |\r\n| `SWAP` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-SWAP)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SWAP) |\r\n| `CACHE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CACHE)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CACHE) |\r\n| `BINARY_OP` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BINARY_OP)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BINARY_OP) |\r\n| `PUSH_EXC_INFO` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-PUSH_EXC_INFO)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-PUSH_EXC_INFO) |\r\n| `CHECK_EXC_MATCH` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CHECK_EXC_MATCH)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CHECK_EXC_MATCH) |\r\n| `CHECK_EG_MATCH` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CHECK_EG_MATCH)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CHECK_EG_MATCH) |\r\n| `PREP_RERAISE_STAR` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-PREP_RERAISE_STAR)🆕 | ❌ |\r\n| `BEFORE_WITH` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-BEFORE_WITH)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BEFORE_WITH) |\r\n| `JUMP_BACKWARD` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-JUMP_BACKWARD)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-JUMP_BACKWARD) |\r\n| `JUMP_BACKWARD_NO_INTERRUPT` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-JUMP_BACKWARD_NO_INTERRUPT)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-JUMP_BACKWARD_NO_INTERRUPT) |\r\n| `POP_JUMP_FORWARD_IF_TRUE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_FORWARD_IF_TRUE)🆕 | ❌ |\r\n| `POP_JUMP_BACKWARD_IF_TRUE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_BACKWARD_IF_TRUE)🆕 | ❌ |\r\n| `POP_JUMP_FORWARD_IF_FALSE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_FORWARD_IF_FALSE)🆕 | ❌ |\r\n| `POP_JUMP_BACKWARD_IF_FALSE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_BACKWARD_IF_FALSE)🆕 | ❌ |\r\n| `POP_JUMP_FORWARD_IF_NOT_NONE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_FORWARD_IF_NOT_NONE)🆕 | ❌ |\r\n| `POP_JUMP_BACKWARD_IF_NOT_NONE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_BACKWARD_IF_NOT_NONE)🆕 | ❌ |\r\n| `POP_JUMP_FORWARD_IF_NONE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_FORWARD_IF_NONE)🆕 | ❌ |\r\n| `POP_JUMP_BACKWARD_IF_NONE` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-POP_JUMP_BACKWARD_IF_NONE)🆕 | ❌ |\r\n| `MAKE_CELL` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-MAKE_CELL)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-MAKE_CELL) |\r\n| `COPY_FREE_VARS` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-COPY_FREE_VARS)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-COPY_FREE_VARS) |\r\n| `CALL` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-CALL)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CALL) |\r\n| `PRECALL` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-PRECALL)🆕 | ❌ |\r\n| `PUSH_NULL` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-PUSH_NULL)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-PUSH_NULL) |\r\n| `KW_NAMES` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-KW_NAMES)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-KW_NAMES) |\r\n| `RESUME` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-RESUME)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RESUME) |\r\n| `RETURN_GENERATOR` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-RETURN_GENERATOR)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RETURN_GENERATOR) |\r\n| `SEND` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-SEND)🆕 |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SEND) |\r\n| `ASYNC_GEN_WRAP` |  ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.11/library/dis.html#opcode-ASYNC_GEN_WRAP)🆕 | ❌ |\r\n| `END_FOR` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-END_FOR)🆕 |\r\n| `BINARY_SLICE` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-BINARY_SLICE)🆕 |\r\n| `STORE_SLICE` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-STORE_SLICE)🆕 |\r\n| `CLEANUP_THROW` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CLEANUP_THROW)🆕 |\r\n| `RETURN_CONST` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-RETURN_CONST)🆕 |\r\n| `LOAD_LOCALS` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_LOCALS)🆕 |\r\n| `LOAD_FROM_DICT_OR_GLOBALS` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_FROM_DICT_OR_GLOBALS)🆕 |\r\n| `LOAD_SUPER_ATTR` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_SUPER_ATTR)🆕 |\r\n| `POP_JUMP_IF_NOT_NONE` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_JUMP_IF_NOT_NONE)<br/>Changed in version 3.12: This is no longer a pseudo-instruction. |\r\n| `POP_JUMP_IF_NONE` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-POP_JUMP_IF_NONE)<br/>Changed in version 3.12: This is no longer a pseudo-instruction. |\r\n| `LOAD_FAST_CHECK` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_FAST_CHECK)🆕 |\r\n| `LOAD_FAST_AND_CLEAR` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_FAST_AND_CLEAR)🆕 |\r\n| `LOAD_FROM_DICT_OR_DEREF` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-LOAD_FROM_DICT_OR_DEREF)🆕 |\r\n| `CALL_INTRINSIC_1` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CALL_INTRINSIC_1)🆕 |\r\n| `CALL_INTRINSIC_2` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-CALL_INTRINSIC_2)🆕 |\r\n| `SETUP_CLEANUP` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-SETUP_CLEANUP) |\r\n| `JUMP` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-JUMP) |\r\n| `JUMP_NO_INTERRUPT` |  ❌ | ❌ | ❌ | ❌ |[✅](https://docs.python.org/3.12/library/dis.html#opcode-JUMP_NO_INTERRUPT) |\r\n",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-06-06T05:00:16+00:00",
        "updated_at": "2023-09-02T08:05:37+00:00",
        "closed_at": null,
        "comments_count": [
            "SigureMo",
            "SigureMo"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 128,
        "title": "优化字节码模拟执行过程中的报错信息",
        "body": "我们现阶段如果在模拟执行过程中发生了报错的话，很难直接对应到源码，为了能够方便对应到源码，我们可以在报错时额外展示报错时的源码，比如\r\n\r\n```\r\nXxxError: xxxxx\r\n\r\n 0 def foo(x, y, z):\r\n 1     x[0] += 1\r\n   ~~~~~~~~~~~~~~> here （大概就这样吧，可参考动转静下的报错）\r\n 2     return y[0] + z\r\n```\r\n\r\n可考虑利用 https://docs.python.org/3.8/library/dis.html#dis.Instruction.starts_line 来定位源码，可通过 CodeObject 和 FrameObject 上的一些属性获取到源码",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "Aurelius84",
        "created_at": "2023-06-07T08:34:17+00:00",
        "updated_at": "2023-07-11T13:53:22+00:00",
        "closed_at": "2023-06-16T03:20:07+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 120,
        "title": "调整 `paddle.jit.not_to_static` 装饰范围",
        "body": "我们目前会将整个 SIR 函数用 `paddle.jit.to_static` 包装\r\n\r\nhttps://github.com/PaddlePaddle/PaddleSOT/blob/3ca867a6ac2254063ff103ca0b53e63f0d014d50/symbolic_trace/symbolic/compile_cache.py#L43-L48\r\n\r\n将其转换为动转静的 StaticFunction，转换的函数中主体逻辑就是利用 Interpreter 解释 SIR，进行组网，由于这部分可能有些动转静会出问题的语法，因此使用了 `paddle.jit.not_to_static` 进行装饰\r\n\r\nhttps://github.com/PaddlePaddle/PaddleSOT/blob/3ca867a6ac2254063ff103ca0b53e63f0d014d50/symbolic_trace/symbolic/interpreter.py#L71-L83\r\n\r\n然而实际情况我们有些 API 仍然需要 `to_static` 的代码转换，比如 `paddle.to_tensor`，因此我们希望不利用 `paddle.jit.not_to_static` 将整个函数装饰，而是只装饰部分，避免部分代码动转静转写出问题，并将组网代码进行转换",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-06-06T07:20:58+00:00",
        "updated_at": "2023-06-27T07:29:58+00:00",
        "closed_at": null,
        "comments_count": [
            "Aurelius84"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 125,
        "title": "优化输入分析逻辑，使其能够在不同分支分别读写变量时分析得到正确结果",
        "body": "在发生子图打断的时刻，我们需要在该时刻分析之后可能用到的，且当前已存在的变量，将其作为输入传入到打断子图后抽取的函数之中\r\n\r\n比如对于如下函数：\r\n\r\n```python\r\ndef foo(x):\r\n    y = x + 1\r\n    # 如果此时分析，应该只有 y，因为 z 是后面产生的变量\r\n    z = y + 1\r\n    # 如果此时分析，应该只有 z\r\n    return z\r\n```\r\n\r\n目前相关算法逻辑写在了\r\n\r\nhttps://github.com/2742195759/paddle-symbolic-trace/blob/5df3221b692ed7282c73e864a381bb23148e6ca7/symbolic_trace/opcode_translator/instruction_utils/opcode_analysis.py#L39-L71\r\n\r\n目前在少数情况下会出现分析错误的问题，比如对于如下代码\r\n\r\n```python\r\ndef case6(x):\r\n    y = x + 1\r\n    z = x + 2\r\n\r\n    # 如果此时分析，应该为 a 和 z，虽然本代码是可以过的，但是下面的代码是过不了的\r\n    if z:\r\n        a = 1\r\n    else:\r\n        a += 1\r\n    return z\r\n\r\ndef case7(x):\r\n    y = x + 1\r\n    z = x + 2\r\n\r\n    # 如果此时分析，这里同样应该是 a 和 z，但是分析后只有 z\r\n    if not z:\r\n        a += 1\r\n    else:\r\n        a = 1\r\n    return z\r\n```\r\n\r\n本任务希望你能够修改这里输入分析时 JUMP 相关逻辑，以适配上述情况",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-07T05:14:03+00:00",
        "updated_at": "2023-07-11T13:53:21+00:00",
        "closed_at": "2023-06-20T01:41:12+00:00",
        "comments_count": [
            "SigureMo",
            "Difers",
            "SigureMo"
        ],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 129,
        "title": "PaddleLayerVariable 支持 Subscribe ",
        "body": "## Task: [Easy] 给 PaddleLayerVariable 支持 Subscribe 调用\r\n\r\n目前的 PaddleLayerVariable 不支持 Subscript 索引，但是用户可能自己重写 `__getitem__` 魔法函数。PaddleLayerVariable对于用户而言是一个可以拓展的组件，因此 getitem 需要考虑到用户的自定义情况，此任务就是给 VariableBase 和PaddleLayerVariable 支持 getitem 的 inline call 调用。\r\n\r\n##### 什么是 inline call ？\r\n\r\n具体可以查看 OpInlineExecutor 代码和 源码 inline call 函数。这里举一个例子来进行说明：\r\n\r\n```python\r\ndef func(x): \r\n    if x > 1 : \r\n        return True\r\n    elsel: \r\n        return False\r\n\r\n# Case1: \r\nsymoblic_trace(func)(2)\r\n\r\n# Case2: \r\ndef father(x):\r\n    return func(x)\r\nsymoblic_trace(father)(2)\r\n```\r\n\r\n1. 对于Case1，上述函数如果被直接 symbolic trace，那么我们会使用一个 OpExecutor来进行执行。\r\n2. 对于Case2，上述代码不是直接调用，而是使用 father function 来进行调用，那么Father会有一个OpExecutor来负责模拟执行，而对于 func 的调用，会使用一个称为 InlineExecutor 的执行器来进行执行。\r\n\r\n为什么要使用一个新的类来进行执行呢，因为我们希望将 func 的调用中的信息同步回 father 中。比如在 func 内部，我们发现 x 的值会影响最终执行的结果。那么最后这个 x 的判断会同步回 father 中。这样会对 x = 1 和 x = 2 会命中不同的缓存。\r\n\r\n##### 什么时候使用 inline call ？\r\n\r\n如果在 OpExecutor 中，我们遇到了一个函数调用（或者是魔法函数调用），如果这个函数可能存在用户自定义的代码，那么**必须**使用 inline call，如果我们确定这个函数没有用户自定义代码，而且直接调用就可以达到相同的效果，那么我们可以直接调用。比如对 operator.add(1, 2) ，我们明确这个就是一个常量的加法，不会对 guard，function graph 等产生影响(无组网代码) ，那么我们可以直接使用Python的call。\r\n\r\n##### 回到 PaddleLayerVariable\r\n\r\n因为 PaddleLayerVariable 存在两个情况，一个是Paddle仓库提供的 Layer，比如nn.Linear，这类我们是明确它没有任何的自定义行为的（准静态假设），所以我们直接将他们放入 SIR 中，而非Paddle的Layer，以及 nn.Sequential 等容器存在用户自定义行为，所以我们需要使用 InlineCall 来实现。其中也包括 getitem 和 getattr 等操作。\r\n\r\n***对应单测：test_param_guard.py***",
        "state": "closed",
        "user": "2742195759",
        "closed_by": "SigureMo",
        "created_at": "2023-06-07T08:41:22+00:00",
        "updated_at": "2023-07-11T13:53:23+00:00",
        "closed_at": "2023-06-19T14:41:57+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 130,
        "title": "`LOAD_METHOD`、`CALL_METHOD` 行为对齐 CPython",
        "body": "我们目前 `LOAD_METHOD` 的实现仅仅考虑了是一个函数的情况（如 `paddle.abs`），而没有考虑 bound method 的情况，因此在某些情况下会出现问题\r\n\r\nhttps://github.com/PaddlePaddle/PaddleSOT/blob/d0198c09e29b7d6c4fffa958adcb2de0c6619392/symbolic_trace/opcode_translator/executor/opcode_executor.py#L455-L461\r\n\r\nhttps://github.com/PaddlePaddle/PaddleSOT/blob/d0198c09e29b7d6c4fffa958adcb2de0c6619392/symbolic_trace/opcode_translator/executor/opcode_executor.py#L696-L707\r\n\r\n因此这里考虑对齐 CPython 行为：\r\n\r\nhttps://github.com/python/cpython/blob/40ea37ddae465d7046e2a6b8d9fd80c27f8b2da6/Python/ceval.c#L3410-L3494\r\n\r\n修复后下述单测应该通过：\r\n\r\nhttps://github.com/PaddlePaddle/Paddle/blob/develop/test/dygraph_to_static/test_param_guard.py",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "2742195759",
        "created_at": "2023-06-07T09:27:20+00:00",
        "updated_at": "2023-07-11T13:53:24+00:00",
        "closed_at": "2023-06-13T08:59:10+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "error": "'NoneType' object has no attribute 'repository'",
        "issue_number": 149
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 132,
        "title": "优化 tracker viewer",
        "body": "#82 添加了一个极简的用于可视化 Variable 和 Tracker 直接关系的工具，仍然还有很多值得优化的地方：\r\n\r\n- 没有针对不同 Tracker 进行不同的着色\r\n- 无法准确判断一个 Variable 是否参与组网，见 https://github.com/2742195759/paddle-symbolic-trace/blob/develop/CONTRIBUTING.md#guard-%E5%8F%8A%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6 ，其中的 NOTE 里就有一个错误例子\r\n- 可以允许用户传入对于某一个/某一类 Tracker 来进行高亮，提高 debug 效率\r\n\r\n本任务希望你能够参考以上优化点，做出一个或多个优化，细节可以在 comment 里讨论～",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "Aurelius84",
        "created_at": "2023-06-07T12:39:55+00:00",
        "updated_at": "2023-07-11T13:53:25+00:00",
        "closed_at": "2023-06-20T09:38:02+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 133,
        "title": "🐾 PaddleSOT 快乐喵喵开源任务 🚀",
        "body": "### 一、Background 📚\r\n\r\n喵！为了能够进一步提高动转静的成功率，并为用户提供更好的使用体验，我们启动了 PaddleSOT 项目（Paddle Symbolic Opcode Translator），关于该项目的详情可参见 [PaddleSOT 孵化项目介绍](https://github.com/PaddlePaddle/community/tree/master/pfcc/paddle-code-reading/symbolic_opcode_translator)。\r\n\r\n经过两个月的开发，我们的 PaddleSOT 项目已经初具雏形，主体机制已经完善，但是还有很多细节需要优化，我们在开发过程中记录了一些已知的问题和有趣的想法，欢迎大家来一起完善这个项目～\r\n\r\n### 二、Motivation 🚀\r\n\r\n**参与本项目你可以了解到这些神奇的事情：**\r\n\r\n-  深入了解 Python 底层数据结构以及虚拟机 VM 执行流程～\r\n-  深入了解编程语言层面的 「指令」和「数据栈」交互执行的内在原理~\r\n-  了解 Python 中 JIT 的实现方式，以及最前沿的动转静技术～\r\n-  了解 Paddle 动转静的实现原理，参与到最新的动转静技术的开发中～\r\n\r\n### 三、Issue Tasks 🙌\r\n\r\n我们在 [issues](../issues) 中准备了一些容易上手的任务（ https://github.com/PaddlePaddle/PaddleSOT/labels/%F0%9F%90%BE%20meow ），希望各位有兴趣的同学一起来玩：\r\n\r\n<!-- prettier-ignore -->\r\n| 序号 | 任务名 | 难度 | issue 链接 | 指导人 | 认领人 | 提交 PR |\r\n| - | - | - | - | - | - | - |\r\n| 1 | ✅ 重构 Variable `from_value` register 机制，增加优先级 | 简单 | #83 | @SigureMo | @zrr1999 | #110 |\r\n| 2 | ✅ 重构 Variable，拆分成多个文件 | 简单 | #84 | @SigureMo | @zrr1999 | #110 |\r\n| 3 | ✅ Python 3.9 版本支持 | 简单 | #105 | @SigureMo | @gouzil | #109 |\r\n| 4 | ✅ 优化输入分析逻辑，使其能够在不同分支分别读写变量时分析得到正确结果 | 简单 | #125 | @SigureMo | @Difers | #158 (reverted), #173 |\r\n| 5 | ✅ 在 Variable 里添加变量本身的名字方便 debug | 简单 | #122 | @SigureMo | @zrr1999 | #138 |\r\n| 6 | ✅ 增加对闭包的支持 | 中等 | #123 | @2742195759 | @gouzil | #139 |\r\n| 7 | ✅ 优化字节码模拟执行过程中的报错信息 | 简单 | #128 | @SigureMo | @zrr1999 | #141 |\r\n| 8 | ✅ PaddleLayerVariable 支持 Subscribe | 简单 | #129 | @0x45f | @0x45f | #150 |\r\n| 9 | 调整 `paddle.jit.not_to_static` 装饰范围 | 中等 | #120 | @Aurelius84 | @zrr1999 | |\r\n| 10 | Bert 模型子图数量和质量优化 | 困难 | #117 | @0x45f | | |\r\n| 11 | 优化 eval_frame 对 Paddle 函数的 skip 机制 | 中等 | #93 | |  | |\r\n| 12 | ✅ 优化 tracker viewer | 简单 | #132 | @SigureMo | @GreatV | #175 |\r\n| 13 | ✅ 为所有入栈出栈操作添加检查，确保栈内所有内容均是 Variable | 简单 | #142 | @SigureMo | @NotHaozi | #155 |\r\n| 14 | ✅ `LOAD_METHOD`、`CALL_METHOD` 行为对齐 CPython | 简单 | #130 | @SigureMo | @gouzil | #144 |\r\n| 15 | ✅ 对 TensorVariable 中的 property 属性进行处理 | 中等 | #151 | @2742195759 | @zrr1999 | #170 |\r\n| 16 | ✅ 提升 XXXVariable 的 `__repr__` 简洁性 | 简单 | #179 | @Aurelius84 | @GreatV | #183 |\r\n| 17 | ✅ 利用 Dispatch 机制替换掉现有的魔法函数自动派发机制 | 中等 | #194 | @SigureMo | @gouzil | #198 |\r\n| 18 | ✅ 为 PaddleSOT repo 增加 xdoctest 流水线 | 简单 | #195 | @SigureMo | @NotHaozi | #199 |\r\n| 19 | ✅ 增加 Paddle 自动编译流水线 | 中等 | #242 | @SigureMo | @gouzil | #247 |\r\n| 20 | ✅ 优化 GitHub Actions Log 信息 | 简单 | #243 | @SigureMo | @zrr1999 | #246 |\r\n| 21 | ✅ 容器类型 Variable 方法补全 | 中等 | #244 | @SigureMo | @gouzil | #236, #259, #255, #257, #236 |\r\n| 22 | `_C_ops` 断言检查功能 | 简单 | #248 | @SigureMo | @zrr1999 | |\r\n| 23 | ✅ 全局变量 Side Effect 恢复功能 | 困难 | #249 | @SigureMo | @gouzil  | #278 |\r\n| 24 | ✅ 为动转静单测流水线优化 GitHub Actions Log 信息 | 简单 | #324 | @SigureMo | @zrr1999 | #347 |\r\n| ... | 持续更新中... | | | | | |\r\n\r\n列表内容会随着开发过程持续更新～如果你没找到感兴趣的，或者感觉这些任务太简单了，也欢迎直接提一个 issue 来描述你想要做的(●• ̀ω•́ )✧，如果合适的话我们也会加入到列表中～\r\n\r\n如果你还不了解如何上手，可以参考我们的[贡献指南](https://github.com/2742195759/paddle-symbolic-trace/blob/develop/CONTRIBUTING.md)，里面有详细的示例哦～\r\n\r\n> **Note**\r\n>\r\n> 有人认领但迟迟没有提 PR 的任务也是可以做的哦，不过要 @ 下原来的认领人避免冲突～\r\n",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-07T13:45:38+00:00",
        "updated_at": "2023-10-13T14:22:20+00:00",
        "closed_at": "2023-10-13T14:22:20+00:00",
        "comments_count": [
            "GreatV",
            "Liyulingyue",
            "0x45f",
            "NotHaozi",
            "Difers",
            "gouzil",
            "gouzil",
            "SigureMo"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 147,
        "title": "无组网代码时缓存不符合预期",
        "body": "```python\r\ndef foo(x, y):\r\n    return x + y\r\n\r\nsymbolic_trace(foo)(1, 2)\r\nsymbolic_trace(foo)(1, 1) # cache should miss, but hit\r\n```\r\n\r\n原因是无组网代码，Guard 为空，无条件命中，Guard 机制需要调整",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "Aurelius84",
        "created_at": "2023-06-10T11:26:59+00:00",
        "updated_at": "2023-06-12T08:15:26+00:00",
        "closed_at": "2023-06-12T08:15:26+00:00",
        "comments_count": [],
        "labels": [
            "🐛 bug"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 142,
        "title": "为所有入栈出栈操作添加检查，确保栈内所有内容均是Variable",
        "body": "在 OpcodeExecutor 的栈内，应该所有内容均是Variable，但是现在我们有很多时候混入了一些其他类型变量，所以我们考虑在所有入栈出栈操作上都加上 isinstance(val, VariableBase) 的检查，这可以通过如下方式实现：\r\n\r\n简化栈操作，栈操作只允许访问栈顶，只包含 push、pop 等简单操作，不允许直接访问和替换栈\r\n在有限的栈操作上加上检查项，确保入栈出栈都是 Variable（其实只需要保证入栈是就好了）\r\n\r\n相关讨论见 https://github.com/PaddlePaddle/PaddleSOT/pull/138#issuecomment-1584151810",
        "state": "closed",
        "user": "zrr1999",
        "closed_by": "SigureMo",
        "created_at": "2023-06-09T08:25:40+00:00",
        "updated_at": "2023-07-11T13:53:26+00:00",
        "closed_at": "2023-06-13T10:43:26+00:00",
        "comments_count": [
            "NotHaozi",
            "SigureMo",
            "NotHaozi"
        ],
        "labels": [
            "PFCC",
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 151,
        "title": "支持对 TensorVariable 中的 property 属性进行处理",
        "body": "### 一、背景\r\nSymbolic Translate 对于 `Tensor` 中的method调用，比如 a + b，我们会调用对应的 tensor variable 的魔法函数进行组网。但是 tensor 中存在一些方法调用行为不通用，比如 tensor.size 返回所有的 elements 个数（ConstVariable），并且在存在 -1 时需要进行子图打断。这类情况我们需要进行特殊处理。\r\n\r\n### 二、 任务目标\r\n\r\n任务目标：先验的考虑所有的 Tensor 的属性和方法，考察所有的属性是否『动静统一』：\r\n\r\n- 如果 Tensor 和 Variable 有同样的接口，并且返回的值都是 Tensor，那么可以动静统一。\r\n\r\n- 如果 Tensor 和 Variable 接口存在diff，或者是返回值不是 Tensor，而是int，比如 size, shape 等，我们考虑子图打断。\r\n\r\n- 最后可以考虑动态图 fallback， raise NotImplementException 异常。\r\n\r\n\r\n### 三、 Hint \r\n\r\n1. 查看所有的属性方法：\r\n\r\n```python\r\nimport paddle\r\na = paddle.to_tensor([1])\r\ndir (a.__class__) # 查看所有的属性和方法\r\nprint (a.__class__.size) # 查看属性的类型，可以看到是 method / unbound fuction / property\r\n```\r\n\r\n2. TensorVariable 中的代码\r\n\r\n``` python\r\n    def __getattr__(self, name: str):\r\n        if name in paddle_tensor_methods:\r\n            from .callable import TensorMethodVariable\r\n\r\n            return TensorMethodVariable(\r\n                self, name, self.graph, tracker=GetAttrTracker(self, name)\r\n            )\r\n        elif name in [\"shape\", \"dtype\", \"stop_gradient\"]:\r\n            return VariableFactory.from_value(\r\n                getattr(self.meta, name),\r\n                self.graph,\r\n                tracker=GetAttrTracker(self, name),\r\n            )\r\n        elif name in [\"T\", \"ndim\", \"size\"]:\r\n            return getattr(self, name)\r\n        else:\r\n            raise InnerError(f\"Unknown Tensor attribute: {name}\")\r\n\r\n```\r\n这里的  'T', 'ndim', 'size' 就是对应的处理。然后需要在 TensorVariable下实现一个。比如 shape ： \r\n\r\n```python\r\n    @property\r\n    def shape(self):\r\n        return ConstantVariable.wrap_literal(len(self.meta.shape))\r\n```",
        "state": "closed",
        "user": "2742195759",
        "closed_by": "Aurelius84",
        "created_at": "2023-06-13T02:59:38+00:00",
        "updated_at": "2023-07-11T13:53:27+00:00",
        "closed_at": "2023-06-25T09:15:47+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 143,
        "title": "PaddleSOT repo 中存在的一些问题",
        "body": "这里将会记录一些我们 repo 明显存在的问题（主要是开发相关的），欢迎大家在下面的 Comment 里指出，我们会不断迭代优化～\r\n\r\n- 单元测试太少，大多是端到端测试，应该针对子功能增加完备的单元测试",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-06-09T09:01:10+00:00",
        "updated_at": "2023-06-12T09:59:07+00:00",
        "closed_at": null,
        "comments_count": [
            "jzhang533"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 179,
        "title": "提升 XXXVariable的__repr__ 简洁性",
        "body": "@GreatV 在 https://github.com/PaddlePaddle/PaddleSOT/pull/175 优化了 tracker viewer的可视化逻辑，但是可以看出TensorVariable 的字符串表示会比较长，在保持可读性的同时，可以考虑提升简洁性，如：\r\n`TensorVariable([2,3], float32, True, var_13, a, object_528)`",
        "state": "closed",
        "user": "Aurelius84",
        "closed_by": "SigureMo",
        "created_at": "2023-06-19T09:22:55+00:00",
        "updated_at": "2023-07-11T13:53:28+00:00",
        "closed_at": "2023-06-20T05:48:26+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 169,
        "title": "部分涉及property的运算存在问题",
        "body": "```py\r\ndef foo(cond: paddle.Tensor, x: paddle.Tensor):\r\n    x += 1\r\n    return x + x.size\r\n\r\n\r\ndef main():\r\n    cond = paddle.to_tensor(True)\r\n    x = paddle.to_tensor(0)\r\n    dygraph_out = foo(cond, x)\r\n    print(\"dygraph_out:\", dygraph_out)\r\n\r\n    symbolic_translate_out = symbolic_translate(foo)(cond, x)\r\n    print(\"symbolic_translate_out:\", symbolic_translate_out)\r\n    np.testing.assert_allclose(\r\n        dygraph_out.numpy(), symbolic_translate_out.numpy()\r\n    )\r\n```\r\n期望和动态图有相同结果\r\n<img width=\"937\" alt=\"image\" src=\"https://github.com/PaddlePaddle/PaddleSOT/assets/46243324/e2b485d7-7f65-480b-a424-241b5e50c0ff\">\r\n\r\n实际上会报错\r\n<img width=\"913\" alt=\"image\" src=\"https://github.com/PaddlePaddle/PaddleSOT/assets/46243324/fcea1ae3-8b09-47af-868e-13773e341982\">\r\n\r\n此时如果是 x + x.size() 结果会是正确的，但是动态图会报错（因为x.size是整数）\r\n\r\n@SigureMo @2742195759 ",
        "state": "closed",
        "user": "zrr1999",
        "closed_by": "2742195759",
        "created_at": "2023-06-16T05:00:31+00:00",
        "updated_at": "2023-06-16T07:54:08+00:00",
        "closed_at": "2023-06-16T07:54:08+00:00",
        "comments_count": [
            "SigureMo",
            "zrr1999"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 194,
        "title": "利用 Dispatch 机制替换掉现有的魔法函数自动派发机制",
        "body": "我们在 #157 实现了 Builtin 函数的派发机制，并在 #182 将大多数现有的魔法函数自动派发派发机制替换成了我们自己的 Dispatch 机制，但仍然存留部分在 Variable 上的魔法函数，为了能够更好地复用代码，我们计划将这些部分也替换成 Builtin Dispatch 实现，这主要包含：\r\n\r\n- `operator.getitem` -> `VariableBase/TensorVariable/ListVariable/TupleVariable/DictVariable.__getitem__`\r\n- `operator.setitem` -> `VariableBase/TensorVariable/ListVariable/TupleVariable/DictVariable.__setitem__`\r\n- `operator.delitem` -> `ListVariable/TupleVariable/DictVariable.__delitem__`\r\n- `bool` -> `ConstantVariable.__bool__`（不要直接删掉，参考 #157 对 ContainerVariable 的修改）\r\n\r\n目前应该就这些，`__call__` 是不需要转发的\r\n\r\n具体实现可参考第一个实现 PR #157 和机制替换 PR #182，以及设计文档 https://github.com/PaddlePaddle/PaddleSOT/blob/develop/docs/design/builtin-dispatcher.md",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "2742195759",
        "created_at": "2023-06-22T17:35:18+00:00",
        "updated_at": "2023-07-11T13:53:29+00:00",
        "closed_at": "2023-06-27T02:52:38+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 174,
        "title": "NumPy 1.25.0 更新导致 3.9、3.10 流水线失败",
        "body": "几个小时前 NumPy 发布了 1.25.0（见 https://github.com/numpy/numpy/releases/tag/v1.25.0 ），该版本仅支持 3.9、3.10、3.11，因此不会影响我们的 3.8 流水线，而我们 Paddle 最新 Nightly 仅仅要求了 NumPy >= 1.13，不会要求上限版本，因此 CI 会自动装最新版本\r\n\r\nhttps://github.com/PaddlePaddle/Paddle/blob/develop/python/requirements.txt#L2\r\n\r\n最新版本 NumPy 有如下变动：\r\n\r\n> ### Most NumPy functions are wrapped into a C-callable\r\n>\r\n> To speed up the `__array_function__` dispatching, most NumPy functions\r\n> are now wrapped into C-callables and are not proper Python functions or\r\n> C methods. They still look and feel the same as before (like a Python\r\n> function), and this should only improve performance and user experience\r\n> (cleaner tracebacks). However, please inform the NumPy developers if\r\n> this change confuses your program for some reason.\r\n\r\n简单来说就是将 Python API 移交到了 C 端，Python 端只是 wrapper，关于 `__array_function__` 可参见 [NEP 18](https://numpy.org/neps/nep-0018-array-function-protocol.html)\r\n\r\n这导致我们的单测 `test_break_graph.py` 失败，因为该单测调用了 `np.sum` API，这应该通过 `from_value` 生成 `UserDefinedFunctionVariable`（因为其类型是 `FunctionType`），但是 NumPy 1.25.0 已经不是了，`np.sum` 只是一个 Dispatcher：\r\n\r\n```python\r\nPython 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:38:11) \r\n[Clang 14.0.6 ] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numpy as np\r\n>>> np.sum\r\n<function sum at 0x1015f3a30>\r\n>>> type(np.sum)\r\n<class 'numpy._ArrayFunctionDispatcher'>\r\n>>>\r\n```\r\n\r\n可选的解决方案：\r\n\r\n- `requirements.txt` 里强制 numpy<1.25.0，延迟解决\r\n- 对该类进行特判处理（具体方案需周一讨论）",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-17T19:50:46+00:00",
        "updated_at": "2023-06-19T07:50:26+00:00",
        "closed_at": "2023-06-19T07:50:26+00:00",
        "comments_count": [
            "Aurelius84",
            "SigureMo"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 230,
        "title": "The oneDNN segment fault error",
        "body": "在单测验证场景中，发现在动转静的单测：test_resnet_v2.py 中，如果将\r\n\r\n```\r\n    def forward(self, inputs):\r\n        y = self.conv0(inputs)\r\n        conv1 = self.conv1(y)\r\n        conv2 = self.conv2(conv1)\r\n\r\n        if self.shortcut:\r\n            short = inputs\r\n        else:\r\n            short = self.short(inputs)\r\n\r\n        y = paddle.add(x=short, y=conv2)\r\n\r\n        # TODO: uncomment this lines to reproduce the oneDNN segment fault error.\r\n        #layer_helper = paddle.fluid.layer_helper.LayerHelper(\r\n            #self.full_name(), act='relu'\r\n        #)\r\n        #return layer_helper.append_activation(y)\r\n        return paddle.nn.functional.relu(y)\r\n```\r\n上述的 relu 改为 append op 的情况，那么会出现因为子图个数过多，而导致的 one dnn segment fault 的问题。这个问题目前是通过移出 legacy api 调用，使得子图个数为1规避了。后续还是需要基础查明这个问题的，应该是ProgramOp的一个bug。",
        "state": "open",
        "user": "2742195759",
        "closed_by": null,
        "created_at": "2023-07-03T07:43:29+00:00",
        "updated_at": "2023-07-03T07:43:29+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 186,
        "title": "📚 PaddleSOT 源码阅读 CRC 快乐喵喵之路 🎉",
        "body": "### 一、Background 📚\r\n\r\n自6月初 PaddleSOT 第一次与各位小伙伴完成技术分享和讨论之后，发布了[PaddleSOT 快乐喵喵开源任务](https://github.com/PaddlePaddle/PaddleSOT/issues/133)，真切感受到了小伙伴们的热情，也陆续收到了 @zrr1999 、@gouzil、@Difers、@GreatV、@NotHaozi 等同学贡献的 PR 👏🏻。\r\n\r\n### 二、Motivation 🚀\r\n\r\n为了进一步营造 PaddleSOT 快乐开源的的社区氛围，与各位小伙伴们一同学习、成长，我们计划开启「新·篇章」，即 **PaddleSOT 源码阅读 Code Reading and Comment （简称 CRC）快乐喵喵之路**。\r\n\r\n在这里，小伙伴们可以一起阅读 PaddleSOT 的源码，并鼓励提出自己的疑惑到 [Disscussions](https://github.com/PaddlePaddle/PaddleSOT/discussions/149) ，我们会不定期组织答疑分享。我们将以 **「✏️ CRC 代码标注赛  ✏️」** 的形式来组织：\r\n\r\n+  「源码研读」依照自己的兴趣选择某个模块深入研读源码实现 🧐  \r\n+  「提出疑惑」在 Code Reading 过程中遇到任何问题可以发布到 Disscussion 🙌\r\n+  「思考沉淀」可以在源码文件里的 `Class` 或者 `Funciton` 下贡献自己的「理解注释」，欢迎提交 PR 给 PaddleSOT 🤩 \r\n\r\n\r\n**通过 「CRC 快乐喵喵之路」，小伙伴可以：**\r\n\r\n+  **「Committer 资格」对于贡献质量优秀 Comment 的小伙伴，可以获得百度 PaddlePaddle 组织的 Committer 资格** 👸🏻，详见[飞桨框架代码仓库的角色及权限介绍](https://github.com/PaddlePaddle/community/blob/master/contributors/community-membership.md)\r\n+  「飞桨 架构机制」PaddleSOT 是纯 Python 实现，可以由浅入深地了解 Python 底层数据结构以及虚拟机 VM 执行流程，以及 PaddlePaddle 的动态图转静态图的机制\r\n\r\n### 三、 CRC Tasks 🙋🏻‍♀️ （整体进展：37/37）\r\n> 排名不分先后：@sanbuphy (3) @zrr1999 (6) @jjyaoao (3) @gouzil (10) @GreatV (4) @ccsuzzh (3) @enkilee (3) @Difers (2) @RedContritio (3)\r\n\r\n> 注：\r\n> + 部分序号任务可能涉及多个数据结构，可以拆分为多个 PR 提交\r\n> + 【重要】[docs/design目录](https://github.com/PaddlePaddle/PaddleSOT/tree/develop/docs/design)有一些核心数据结构设计相关的文档，可以参考。\r\n\r\n|   序号  | 类别 |  名称 |  难度  | 认领人 |  提交 PR |\r\n|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|\r\n| 1 | ✅ Function | eval_frame_callback | 简单 |  @sanbuphy   | #226 |\r\n| 2 | ✅ Class | InstructionTranslatorCache | 中等 | @zrr1999 | #212 |\r\n| 3 | ✅ Class  | Tracker/Dummy/Dangling(`tracker.py`) | 中等| @jjyaoao | #196 |\r\n| 4 | ✅ Class | Dispatcher 相关类 | 困难 |  @gouzil | #193 |\r\n| 5 | ✅ Method | FunctionGraph 相关函数 | 中等 | @gouzil |  #234 |\r\n| 6 | ✅ Function | make_guard | 简单 | @gouzil  | #293 |\r\n| 7 | ✅ Class | OpcodeExecutorBase | 中等 | @zrr1999 | #212 |\r\n| 8 | ✅ Class | OpcodeExecutor | 中等 | @zrr1999 |  #212 |\r\n| 9 | ✅ Class | OpcodeInlineExecutor | 中等 |  @zrr1999 | #225 |\r\n| 10 | ✅ Class | VariableBase相关（`base.py`） | 中等 | @zrr1999 | #205 |\r\n| 11 |  ✅Class | PyCodeGen | 中等 | @zrr1999  | #295 \r\n| 12 | ✅ Function | view_tracker | 简单 | @GreatV | #192 |\r\n| 13 | ✅ Function | get_instructions | 简单 | @GreatV | #202 |\r\n| 14 | ✅ Function | modify_instrs 等 | 简单 | @sanbuphy | #227 |\r\n| 15 | ✅ Function | analysis_inputs | 中等 | @sanbuphy| #228 |\r\n| 16 | ✅ Function | need_skip_path | 中等 | @gouzil  | #189 |\r\n| 17 | ✅ Class | FallbackWrapper | 简单 | @gouzil | #277 |\r\n| 18 | ✅ Class | CompileSIRCache | 简单 | @gouzil | #277 |\r\n| 20 | ✅ Class | Interpreter | 中等 |@GreatV | #223 |\r\n| 21 | ✅ Function | compile_sir | 简单 | @gouzil | #189 |\r\n| 22 | ✅ Class | Symbol | 简单 |  @GreatV| #223 |\r\n| 23 | ✅ Class  | Statement | 简单 | @ccsuzzh  | #211 |\r\n| 24 | ✅ Class | StatementIR | 简单 | @ccsuzzh  | #211 |\r\n| 25 | ✅ Class | StatementIRFactory | 简单 |  @ccsuzzh | #211 |\r\n| 26 | ✅Class | SIRRuntimeCache | 简单 | @gouzil | #298 |\r\n| 27 | ✅Class | SymbolicTraceContext | 中等 |@gouzil | #297 |\r\n| 28 | ✅ Class | VariableCreator | 简单 | @enkilee | #191 |\r\n| 29 | ✅ Class | SpecialInferMeta | 简单 | @enkilee | #191 |\r\n| 30 | ✅ Function | symbolic_translate | 简单 | @enkilee  | #191 |\r\n| 31 | ✅ Class | Constant/Tensor/Object/Slice(`basic.py`) | 中等 | @Difers | #206 |\r\n| 32 | ✅ Class | Module/DygraphTracer/Numpy/Dummy(`basic.py`）)| 中等 | @Difers | #206 |\r\n| 33 | ✅ Class | Callable/Function/UDFunction/PaddleAPI(`callable.py`) | 中等 | @RedContritio | #296, #313 |\r\n| 34 | ✅ Class | TensorFunction/Method/Layer/UDLayer(`callable.py`) | 中等 | @RedContritio |#296, #314 |\r\n| 35 | ✅ Class | Builtin/UDGenerator/PaddleLayer(`callable.py`) | 中等 | @RedContritio | #296, #315 |\r\n| 36 | ✅ Class | Container/List/Tuple/Dict（`container.py`） | 中等 | @gouzil | #302 |\r\n| 37 | ✅ Class  | Local/Global/Builtin(`tracker.py`) | 中等 | @jjyaoao | #196 |\r\n| 38 | ✅ Class  | Const/GetAttr/Item/Iter(`tracker.py`) | 中等 | @jjyaoao | #196 |\r\n\r\n\r\n\r\n### 四、Comment 规范 🌲\r\n\r\n#### 4.1 Class 的注释\r\n\r\n对于核心模块的 `Class` ，一般可以考虑从如下几个维度来添加注解：\r\n```python\r\nclass MyClass:\r\n   \"\"\"\r\n   {类的作用、或角色。一般2~3句英文表述。}\r\n\r\n   {类的设计原理，或设计的背景、技术考虑（可选），无句数限制}\r\n\r\n   {类的特别标注，即 NOTE: (可选)}\r\n   \"\"\"\r\n```\r\n\r\n如下是框架的一个参考样例：\r\n```python\r\nclass Program:\r\n    \"\"\"\r\n    Create Python Program.  It has at least one :ref:`api_guide_Block_en`, when the\r\n    control flow op like conditional_block, while :ref:`api_paddle_fluid_layers_While` is included,\r\n    it will contain nested block.\r\n\r\n    Please reference the\r\n    `framework.proto <https://github.com/PaddlePaddle/Paddle/blob/develop/paddle/fluid/framework/framework.proto>`_\r\n    for details.\r\n\r\n    A set of Program usually contains startup program and main program.\r\n    A startup program is set to contain some initial work, eg. initialize the ``Parameter``, and the main\r\n    program will contain the network structure and vars for train.\r\n\r\n    A set of Program can be used for test or train, in train program ,\r\n    Paddle will contain all content to build a train network,  in test\r\n    program Paddle will prune some content which is irrelevant to test, eg.\r\n    backward ops and vars.\r\n\r\n    **Notes**:\r\n        **we have** :ref:`api_paddle_fluid_framework_default_startup_program` **and** :ref:`api_paddle_fluid_framework_default_main_program`\r\n        **by default, a pair of them will shared the parameters. The** :ref:`api_paddle_fluid_framework_default_startup_program` **only run once to initialize parameters,**\r\n        :ref:`api_paddle_fluid_framework_default_main_program` **run in every mini batch and adjust the weights.**\r\n    \"\"\"\r\n```\r\n#### 4.2 函数的注释\r\n\r\n对于核心模块的`Function` 或者类的 `method`，一般从如下几个维度来添加注释：\r\n```python\r\ndef my_function(x, y):\r\n    \"\"\"\r\n    {函数的作用、或角色。一般2~3句表述}\r\n\r\n    {类的特别标注，即 NOTE: (可选)}\r\n\r\n    {Returns 类型标注}\r\n    \"\"\"\r\n```\r\n如下是框架的一个参考样例：\r\n```python\r\n\r\n    def prune_with_input(self, feeded_var_names, targets):\r\n        \"\"\"\r\n        Prune operators and variables which are not needed to generate\r\n        :code:`targets`. Prune operators and variables which are needed\r\n        to generate feeded_var\r\n\r\n        Notes: This is a very low level API. Users should not use this API\r\n        directly. This API is in flux and not stable.\r\n\r\n        Args:\r\n            feeded_var_names(list|str): A list of variable names from where\r\n                pruning start. If it is set as [], this API works just like _prune()\r\n            targets(list|Variable|Operator): A list of variables, operators, or variable names\r\n                need to be pruned\r\n\r\n        Returns:\r\n            Program:  A new, pruned program.\r\n        \"\"\"\r\n```\r\n\r\n#### 4.3 类型提示\r\n\r\n我们代码里已经包含了大量的类型提示，但是部分早期的代码类型提示信息仍然不完整，因此希望在完善注释的同时完善类型提示信息：\r\n\r\n```diff\r\n- def foo(x, y):\r\n+ def foo(x: str, y: list[int]) -> bool:\r\n      ...\r\n```\r\n\r\n应当注意仅类型提示的第一方模块在引用时应尽可能放在 `if TYPE_CHECKING:` 下，以消除运行时影响，降低循环依赖的可能性，比如：\r\n\r\nhttps://github.com/PaddlePaddle/PaddleSOT/blob/d0ede5e71f709601bcf8276ec6c80f5f5e65d014/sot/opcode_translator/executor/opcode_inline_executor.py#L13-L15\r\n\r\n如非必要应当尽可能使用 `list` 等容器类型而非 `List`，使用不带引号的类别名而非带引号的类别名：\r\n\r\n```diff\r\n+ from __future__ import annotations # enable PEP 563 Postponed Evaluation of Annotations\r\n\r\n- from typing import List, Dict\r\n- def foo(x: List[int], Dict[str, int]) -> \"Bar\":\r\n+ def foo(x: list[int], dict[str, int]) -> Bar:\r\n      ...\r\n\r\n  class Bar:\r\n      ...\r\n```\r\n\r\n详情可参考 [typing docs](https://docs.python.org/3.8/library/typing.html)、[PEP 484](https://peps.python.org/pep-0484/)\r\n\r\n> **Note**\r\n>\r\n> - 相关 PR 标题请以 `[CRC] ` 作为前缀\r\n> - 相关 PR 描述请链接本 PR `#186`\r\n> - 关于文档规范，详情可参考 [API 文档书写规范](https://www.paddlepaddle.org.cn/documentation/docs/zh/develop/dev_guides/api_contributing_guides/api_docs_guidelines_cn.html)，如上述示例与该规范有冲突，以该规范为准",
        "state": "closed",
        "user": "Aurelius84",
        "closed_by": "SigureMo",
        "created_at": "2023-06-20T03:51:04+00:00",
        "updated_at": "2023-08-08T11:12:06+00:00",
        "closed_at": "2023-08-08T11:12:05+00:00",
        "comments_count": [
            "sanbuphy",
            "enkilee",
            "gouzil",
            "ccsuzzh",
            "mrcangye",
            "mrcangye",
            "zrr1999",
            "zrr1999",
            "gouzil",
            "SigureMo"
        ],
        "labels": [
            "HappyOpenSource"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 242,
        "title": "增加 Paddle 自动编译流水线",
        "body": "## 背景\r\n\r\n我们在 #218 引入了 Paddle 侧动转静的单测流水线，但由于目前依赖于部分动转静接口上的修改，这些修改只在 PaddlePaddle/Paddle#54202 应用，尚未合入主线，所以如果想要测试这些单测必须编译一下 Paddle 的 wheel 包\r\n\r\n目前我们是手动编译好 Paddle 的包之后，上传到 BOS，并在 GitHub Actions 中下载相关包，以执行单测\r\n\r\n为了确保多版本的兼容性，我们在 #238 上线了（稍后 merge）3.9、3.10 的监控，但是这就需要三个版本都手动编译并上传 BOS，较为繁琐\r\n\r\n## 任务描述\r\n\r\n因此我们考虑增加一条编译流水线（Nightly Build），专门用来编译 PaddlePaddle/Paddle#54202，并将编译好的 wheel 包上传至 Release 或者 GitHub Actions 的存储空间（也许可参考 [actions/upload-artifact](https://github.com/actions/upload-artifact)，这个优先于 Release）\r\n\r\n之后修改 Paddle 动转静单测流水线，在该流水线中下载上述流水线 Nightly Build 的包，以确保多版本的流水线正确运行",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-07-05T07:25:00+00:00",
        "updated_at": "2023-07-12T10:26:08+00:00",
        "closed_at": "2023-07-12T10:26:07+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 243,
        "title": "优化 GitHub Actions Log 信息",
        "body": "## 背景\r\n\r\n为了提高开发效率，简化开发流程，我们添加了多条 GitHub Actions 流水线，但目前 Log 信息，emmm，较为单调，本任务希望能够利用 GitHub Actions 的 Commands 来稍微优化一下报错信息～\r\n\r\n## 任务描述\r\n\r\n可参考 https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions\r\n\r\n本任务较为自由，可以尝试阅读下上述文档，设计一个较为适合的 GitHub 报错信息 Log，比如：\r\n\r\n- 利用 group 命令为单测信息分组，每个单测为一组\r\n- 利用 error 展示最终错误的几个单测（也可以考虑利用 error 命令的 file 参数直接展示到源码中哦～）\r\n\r\n总之可以任意发挥，但需要确保非 GitHub 流水线直接运行脚本（即本地执行）也有较为清晰可读的信息",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-07-05T07:36:29+00:00",
        "updated_at": "2023-07-21T02:41:39+00:00",
        "closed_at": "2023-07-21T02:41:39+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 195,
        "title": "为 PaddleSOT repo 增加 xdoctest 流水线",
        "body": "## 动机\r\n\r\n相比于文字描述，示例代码可以更快地让开发者了解到一个 API 是如何使用的，其重要性不言而喻\r\n\r\n目前 Paddle 主 repo 已经准备引入 xdoctest，见 [中国软件开源创新大赛：飞桨框架任务挑战赛](https://github.com/PaddlePaddle/Paddle/issues/53172#paddlepaddle05)、[tracking issue](https://github.com/PaddlePaddle/Paddle/issues/54705)，另外我们 PaddleSOT 合入 Paddle 也还有一段时间，我们可以尽可能使我们的代码风格更加现代，因此这里建议在 PaddleSOT 中增加流水线用于示例代码的检查\r\n\r\n目前我已经在 #193 上验证了 xdoctest 的引入可行性，运行如下命令即可检查全部示例代码：\r\n\r\n```bash\r\nxdoctest sot\r\n\r\n=====================================\r\n_  _ ___  ____ ____ ___ ____ ____ ___\r\n \\/  |  \\ |  | |     |  |___ [__   |\r\n_/\\_ |__/ |__| |___  |  |___ ___]  |\r\n\r\n=====================================\r\n\r\nStart doctest_module('sot')\r\nListing tests\r\ngathering tests\r\nrunning 2 test(s)\r\n====== <exec> ======\r\n* DOCTEST : sot/opcode_translator/executor/dispatcher.py::Dispatcher:0, line 126 <- wrt source file\r\nDOCTEST SOURCE\r\n2 >>> def builtin_add(a: int, b: int) -> int:\r\n3 ...     ...\r\n4 ...\r\n5 >>> Dispatcher.register(builtin_add, (\"int\", \"int\"), {}, lambda a, b: a + b)\r\n6 >>> handler = Dispatcher.dispatch(builtin_add, 1, 2)\r\n7 >>> handler(1, 2)\r\n  3\r\nDOCTEST STDOUT/STDERR\r\nDOCTEST RESULT\r\n* SUCCESS: sot/opcode_translator/executor/dispatcher.py::Dispatcher:0\r\n====== </exec> ======\r\n====== <exec> ======\r\n* DOCTEST : sot/opcode_translator/executor/dispatcher.py::Dispatcher.register_decorator:0, line 170 <- wrt source file\r\nDOCTEST SOURCE\r\n 1 >>> def builtin_add(a: int, b: int) -> int:\r\n 2 ...     ...\r\n 3 ...\r\n 4 >>> @Dispatcher.register_decorator(builtin_add)\r\n 5 ... def builtin_add_dispatcher(a: int, b: int) -> int:\r\n 6 ...     return a + b\r\n 7 ...\r\n 8 >>> handler = Dispatcher.dispatch(builtin_add, 1, 2)\r\n 9 >>> handler(1, 2)\r\n   3\r\nDOCTEST STDOUT/STDERR\r\nDOCTEST RESULT\r\n* SUCCESS: sot/opcode_translator/executor/dispatcher.py::Dispatcher.register_decorator:0\r\n====== </exec> ======\r\n============\r\nFinished doctests\r\n2 / 2 passed\r\n=== 2 passed in 1.17 seconds ===\r\n```\r\n\r\n两段示例代码均被正确提取，而且能够检测输出的正确性，~~本任务应在 #193 合入后开展，以确保正确性测试~~（已合入）\r\n\r\n## 一些建议\r\n\r\n- ~~如果有合适的 pre-commit 可以直接集成~~ 因为所有版本都要测，还是不要用 pre-commit 了\r\n- 如果没有就直接加一条流水线，可以考虑在 test 流水线里集成\r\n- Python 3.8、3.9、3.10 都应该测试\r\n\r\n另外可以顺便升级一下 pre-commit 中的 common hooks 的版本，与 PaddlePaddle/Paddle#54796 同步\r\n\r\n另外开发相关依赖应该放在 `pyproject.toml` 中的 `project.optional-dependencies.dev`\r\n\r\n```toml\r\n[project.optional-dependencies]\r\ndev = [\r\n    \"xdoctest\"\r\n]\r\n```\r\n\r\n使用如下命令安装开发依赖：\r\n\r\n```bash\r\npip install -e \".[dev]\"\r\n```\r\n\r\n`requirements.txt` 不再使用，可以移除",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-06-23T04:22:22+00:00",
        "updated_at": "2023-07-11T13:53:30+00:00",
        "closed_at": "2023-06-25T10:50:43+00:00",
        "comments_count": [
            "NotHaozi"
        ],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 244,
        "title": "容器类型 Variable 方法补全",
        "body": "## 背景\r\n\r\n我们的 ListVariable、DictVariable 已经实现了部分方法，但仍然有很多方法是不支持的，本任务希望补全 list、dict、tuple 三个容器类型的方法（非 `_` 开头），以确保模拟执行的正确\r\n\r\n## 任务描述\r\n\r\n- 了解 Dispatch 机制\r\n- 实现其余方法\r\n- 添加单测",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-07-05T07:55:10+00:00",
        "updated_at": "2023-07-11T13:53:32+00:00",
        "closed_at": "2023-07-11T10:59:55+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 248,
        "title": "`_C_ops` 断言检查功能",
        "body": "## 背景\r\n\r\n我们在模拟执行的时候，会判断一个函数是否是 Paddle 组网 API，将组网 API 放入 SIR 中，而非组网 API 则会 inline call 模拟执行字节码\r\n\r\n但由于我们现在用于判读一个 API 是否是组网 API 的逻辑仍然不够 robust，总有一些情况会导致部分组网 API 误走模拟执行逻辑\r\n\r\n我们的组网 API 基本都是动静统一的，这些 API 长这个样子：\r\n\r\n```python\r\ndef foo():\r\n    if in_dygraph_mode():\r\n        _C_ops.xxx()\r\n    else:\r\n        append_op(\"xxx\")\r\n```\r\n\r\n我们模拟执行的时候一定会走动态图分支，即运行到 `_C_ops`，而模拟执行到 `_C_ops` 我们也是可以跑的，但会导致一些难以定位的问题，因此希望能够检测这一问题\r\n\r\n## 任务描述\r\n\r\n当模拟执行遇到 `_C_ops`、`_legacy_C_ops` 时候报错，即添加断言不允许模拟执行 `_C_ops` 逻辑，提前暴露问题",
        "state": "open",
        "user": "SigureMo",
        "closed_by": null,
        "created_at": "2023-07-06T05:59:19+00:00",
        "updated_at": "2023-07-11T13:53:33+00:00",
        "closed_at": null,
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 307,
        "title": "`ObjectVariable` setattr side effect 支持",
        "body": "## 任务描述\r\n\r\n同 #249，我们已经在 #210 和 #220 支持了 dict 和 list 的 Side Effect 恢复功能，全局变量的 Side Effect 也已经在支持中了，但是对于 `ObjectVariable` 的 Side Effect 还没有支持，这里需要大家来实现一下～\r\n\r\n## 任务要求\r\n\r\n-  了解 SideEffect 原理，可参考 https://github.com/PaddlePaddle/PaddleSOT/blob/develop/docs/design/side-effect.md\r\n-  了解 SideEffect 实现，及中间层 MutableData 的设计，可直接参考 #210、#220\r\n-  实现全局变量的 SideEffect 恢复\r\n\r\n## 参考资料\r\n\r\n-  #210\r\n-  #220\r\n-  #278 中的一些讨论很有用\r\n\r\n> **Note**\r\n>\r\n> 建议 #278 合入后再做，避免冲突",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-08-02T12:38:05+00:00",
        "updated_at": "2023-09-26T15:45:51+00:00",
        "closed_at": "2023-09-26T15:45:51+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 249,
        "title": "全局变量 Side Effect 恢复功能",
        "body": "## 背景\r\n\r\n我们分别在 #210 和 #220 支持了 dict 和 list 的 Side Effect 恢复功能，但对于全局变量、自定义对象的 SideEffect 还没有处理\r\n\r\n## 任务描述\r\n\r\n- 了解 SideEffect 原理，可参考 https://github.com/PaddlePaddle/PaddleSOT/blob/develop/docs/design/side-effect.md\r\n- 了解 SideEffect 实现，及中间层 MutableData 的设计，可直接参考 #210、#220\r\n- 实现全局变量的 SideEffect 恢复\r\n\r\n## 一些些提示\r\n\r\nMutableData 的中间层设计是为了统一各种各样发生 SideEffect 的 Variable 的，MutableDictLikeData 是为了统一 dict、全局变量、自定义对象三者的 SideEffect，因此本任务的全局变量即可复用 MutableDictLikeData\r\n\r\n而由于全局变量的特殊性，可以将其看作一个特殊的 Variable，其数据域为 MutableDictLikeData，而 MutableData 的可恢复、可重现特性将会帮助我们实现 SideEffect 的功能\r\n\r\n在恢复 SideEffect 时，不应类似 dict 直接 update（全量更新），而是应该根据 record 一条一条更新（增量更新），这里可能涉及到 SideEffect 恢复函数代码逻辑的组织（目前是使用递归实现的），可以考虑下如何做（目前个人设想是增加 pre-hooks、post-hooks），当然非常欢迎更棒的想法～",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-07-06T06:19:12+00:00",
        "updated_at": "2023-08-23T11:06:46+00:00",
        "closed_at": "2023-08-23T11:06:46+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 308,
        "title": "`TensorVariable` unpack 支持",
        "body": "## 任务描述\r\n\r\n我们已经对 `UNPACK_SEQUENCE` 这条字节码对于常见数据结构的处理进行了支持，但是目前发现还有一个比较常见的场景我们还不支持，就是 `TensorVariable` 的 unpack，例如：\r\n\r\n```python\r\ndef foo(x: paddle.Tensor):\r\n    a, b = x\r\n    return a + b\r\n\r\nfoo(paddle.ones([2]))\r\n```\r\n\r\n我们目前会抛出一个 `NotImplementException` 进而 Fallback 回动态图\r\n\r\n## 任务要求\r\n\r\n-  在 `UNPACK_SEQUENCE` 的实现中，对 `TensorVariable` 的 unpack 进行支持\r\n-  经实验，任意 Object 实现了 `__getitem__` 即可支持 unpack，可以看看是否可以直接利用 `TensorVariable.getitem`\r\n-  可以看看是否可以优化现有代码，复用一些逻辑，比如可以考虑复用 `BuiltinVariable(operator.getitem)`\r\n-  增加相应单测到 `tests/` 下（如果可以复用已有文件的话最好不要新建文件）\r\n\r\n## 参考资料\r\n\r\n-  其他数据结构 unpack 的实现（如 list、tuple）",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-08-02T13:06:08+00:00",
        "updated_at": "2023-08-06T13:12:40+00:00",
        "closed_at": "2023-08-06T13:12:40+00:00",
        "comments_count": [],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 324,
        "title": "为动转静单测流水线优化 GitHub Actions Log 信息",
        "body": "## 任务描述\r\n\r\n同 #243，不过我们希望为 https://github.com/PaddlePaddle/PaddleSOT/blob/develop/.github/workflows/paddle_ci.yaml 添加同样的效果，因为这条流水线 log 太多了，每次报错找问题都得找一会\r\n\r\n## 任务详情\r\n\r\n以下使用配置名称来代指流水线\r\n\r\n- paddle_ci 添加折叠功能，不需要添加 `error` 优化\r\n\r\n非高优，是否合入需要看一下效果",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-08-10T06:20:43+00:00",
        "updated_at": "2023-08-27T10:57:47+00:00",
        "closed_at": "2023-08-27T10:57:47+00:00",
        "comments_count": [],
        "labels": [
            "🐾 meow"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 305,
        "title": "🪄 PaddleSOT 喵喵大入侵计划 💥",
        "body": "## 🌌 前情提要\r\n\r\n喵！距快乐喵喵开源任务 #133 发布已经过去两个月了，在各位大佬的帮助下，PaddleSOT 目前在「功能性」上已经基本打磨完备，我们下一阶段将会冲击「性能」优化，以及进行下 Python 3.11 版本的支持，以推动 Paddle 启用 SOT 动转静的能力，为之后的发（ru）布（qin）做准备～\r\n\r\n## ⚡️ 性能优化项 1 —— Builtin 函数调用支持\r\n\r\n### 任务描述\r\n\r\n对于 Python 一些 C 语言中定义的原生函数，我们在模拟执行阶段是需要针对每一个函数进行特殊处理的，而对于没有支持的函数，我们会进行 Break Graph 处理，使该函数运行在动态图下，以保证 SOT 的正确性。\r\n\r\n这种方式的好处是我们可以较为容易地实现 100% 的转静成功率，但在初期会有较为多的子图打断出现，因此我们需要对一些常用的函数进行支持，以减少子图打断，增大子图，提高性能。\r\n\r\n这里统计了一些较为常用但却没有支持的 Builtin 函数，欢迎大家尝试支持一下～\r\n\r\n### 任务要求\r\n\r\n-  为不支持的 builtin 函数添加 dispatch（即 `Dispatcher.register`），并实现相应的模拟执行逻辑\r\n-  增加相应单测到 `tests/` 下（如果可以复用已有文件的话最好不要新建文件）\r\n-  提交 PR，CI 测试通过\r\n-  注意所需支持的函数签名，大多函数只需要支持部分签名即可\r\n\r\n### 参考资料\r\n\r\n-  关于 Builtin 函数 Dispatch 原理及设计理念，可以参考 [Builtin Dispatcher 设计文档](https://github.com/PaddlePaddle/PaddleSOT/blob/develop/docs/design/builtin-dispatcher.md)\r\n-  可以参考的 PR\r\n   -  功能引入：#157\r\n   -  Dispatch 替换：#182、#198\r\n   -  容器类型 builtin 方法补全：#255、#257、#236\r\n\r\n### 任务详情\r\n\r\n<!-- prettier-ignore -->\r\n| 序号 | 任务名 | 难度 | 认领人 | 提交 PR |\r\n| - | - | - | - | - |\r\n| 1.1 | ✅ `str.format` 支持 | 中等 | @zrr1999 | #310 |\r\n| 1.2 | ✅ `hasattr` 支持 <p title=\"hasattr 与 getattr 相关性较高，Python 里实现是当 getattr 报错就会返回 False，可以考虑复用 getattr 的 dispatch 逻辑\">💡</p> | 简单 | @enkilee | #327 |\r\n| 1.3 | `zip` 支持 <p title=\"可参考 enumerate 实现，可以认为 enumerate 是 zip 的一个特例\">💡</p> | 中等 | @GreatV |\r\n| 1.4 | ✅ `list` 无参数调用（`list()`）支持 <p title=\"`VariableFactory.from_value` 直接创建一个 ListVariable 即可\">💡</p> | 简单 | @jjyaoao | #326 |\r\n| 1.5 | ✅ `dict` 无参数调用（`dict()`）支持 <p title=\"`VariableFactory.from_value` 直接创建一个 DictVariable 即可\">💡</p> | 简单 | @jjyaoao | #326 |\r\n| 1.6 | ✅ `str.lower` 无参数调用支持 | 简单 | @zrr1999  | #310 |\r\n| 1.7 | ✅ `sum` List[Const] 和 Tensor 支持 <p title=\"简单支持的话，Tensor 可以利用 paddle.sum(x, axis=-1)，如果想要完善支持所有类型，可以考虑利用 BuiltinVariable(operator.getitem) 和 BuiltinVariable(operator.add)\">💡</p> | 中等 | @gouzil | #321\r\n| 1.8 | ✅ `pow` 支持 <p title=\"转发到 BuiltinVariable(operator.pow) 即可\">💡</p> | 简单 | @gouzil | #321\r\n| 1.9 | ✅ `reversed` List 支持 <p title=\"直接返回 reversed(wrapped_items) 应该就行了\">💡</p> | 中等 | @GreatV | #318 |\r\n| 1.10 | ✅ `math.ceil` Const 支持 | 简单 | @AndPuQing | #311 |\r\n| 1.11 | ✅ `math.floor` Const 支持 | 简单 | @AndPuQing | #311 |\r\n| 1.12 | ✅ `chr` Const 支持 <p title=\"可参考 str.lower\">💡</p> | 简单 | @gouzil  | #321 |\r\n| 1.13 | ✅ `ord` Const 支持 <p title=\"可参考 str.lower\">💡</p> | 简单 | @gouzil | #321 |\r\n| 1.14 | ✅ `max` List 支持 <p title=\"简单支持的话，通过 get_py_value 找最大值即可，也可以参考 ListVariable.count 通过 dispatch 到 eq 的实现，这个可以 dispatch 到 ge\">💡</p> | 中等 | @gouzil  | #321 |\r\n| 1.15 | ✅ `min` List 支持 <p title=\"同 max\">💡</p> | 中等 | @gouzil  | #321 |\r\n| 1.16 | ✅ `math.sqrt` Const 支持 <p title=\"类似 ceil\">💡</p> | 简单 | @gouzil  | #341 |\r\n| 1.17 | `map` 支持 <p title=\"类似 reversed、enumerate，需要支持对其进行 unpack 和 for 循环\">💡</p> | 中等 | @ranchongzhi | |\r\n\r\n## ⚙️ 性能优化项 2 —— 字节码支持\r\n\r\n### 任务描述\r\n\r\n对于用户传入的函数，我们会取出其 CodeObject，对其中每一条字节码进行模拟执行，当然我们并不可能一开始就支持所有字节码，因此我们的策略是当遇到不支持的字节码时，整个函数 Fallback 回动态图执行，以保证 SOT 的正确性和转静的成功率。\r\n\r\n当然，为了保证 SOT 的性能，我们需要尽可能地支持更多的字节码，以减少 Fallback 的次数（毕竟全 Fallback 就没意义了嘛），这里整理了一些常用但却没有支持的字节码，欢迎大家尝试实现一下～\r\n\r\n### 任务要求\r\n\r\n-  为不支持的字节码实现模拟执行逻辑，即在 `sot/opcode_translator/executor/opcode_executor.py` 中的 `OpcodeExecutor` 类中实现相应的函数\r\n-  增加相应单测到 `tests/` 下（如果可以复用已有文件的话最好不要新建文件）\r\n-  提交 PR，CI 测试通过\r\n\r\n### 参考资料\r\n\r\n-  #118\r\n-  [Python `ceval.c` 源码](https://github.com/python/cpython/blob/3.8/Python/ceval.c)\r\n-  `sot/opcode_translator/executor/opcode_executor.py` 中其他字节码的实现\r\n\r\n### 任务详情\r\n\r\n<!-- prettier-ignore -->\r\n| 序号 | 任务名 | 难度 | 认领人 | 提交 PR |\r\n| - | - | - | - | - |\r\n| ~~2.1~~ | ~~`LOAD_NAME`~~ | ~~中等~~ | | |\r\n| 2.2 | ✅ `MAP_ADD`（dictcomp） | 简单 | @AndPuQing | #319 |\r\n| 2.3 | ✅ `UNARY_NOT` | 简单 | @2742195759 | #301 |\r\n| 2.4 | ✅ `UNPACK_EX`（`a, *b = c`） | 中等 | @zrr1999 | #320 |\r\n| 2.5 | `IMPORT_NAME` | 中等 | | |\r\n\r\n## ✨ 性能优化项 3 —— 其他\r\n\r\n<!-- prettier-ignore -->\r\n| 序号 | 任务名 | 难度 | issue 链接 | 认领人 | 提交 PR |\r\n| - | - | - | - | - | - |\r\n| 3.1 | ✅ `TensorVariable` unpack 支持 | 中等 | #308 | @gouzil  | #312 |\r\n| 3.2 | ✅ `ObjectVariable` setattr side effect 支持 | 困难 | #307 | @gouzil | #393 |\r\n\r\n> **Note**\r\n> \r\n> 任务描述在哪里呢？详情见具体 issue 啦\r\n\r\n## 🔥 Python 3.11 支持\r\n\r\n即 [中国软件开源创新大赛：飞桨框架任务挑战赛 赛题十：为 PaddleSOT 项目添加 Python3.11 版本支持](https://github.com/PaddlePaddle/Paddle/issues/55663#paddlepaddle10)，tracking issue 见 #360\r\n\r\n## 💥 合入 Paddle\r\n\r\n本 repo 只是用于孵化项目，快速迭代的临时 repo，PaddleSOT 将会在近期合入 Paddle，完成「入侵」～\r\n\r\n## 🥷 刺探军情\r\n\r\n欢迎各位喵喵参与其他任务包括 [Paddle 之艾尔登（IR Dialect）快乐勇士挑战赛](https://github.com/PaddlePaddle/Paddle/issues/55205)、[在飞桨框架中引入 clang-tidy](https://github.com/PaddlePaddle/Paddle/issues/54073)、[\\[xdoctest\\] 分批次修改已有代码的示例](https://github.com/PaddlePaddle/Paddle/issues/55629)（啊不对这是自家的，不需要刺探）等等，成为全能型喵喵～\r\n\r\n> **Note**\r\n>\r\n> 不太了解的小伙伴们，可以先学习一下 [PaddleSOT 孵化项目介绍](https://github.com/PaddlePaddle/community/tree/master/pfcc/paddle-code-reading/symbolic_opcode_translator) 和 [部分机制设计文档](https://github.com/PaddlePaddle/PaddleSOT/tree/develop/docs/design)，以及我们的[贡献指南](https://github.com/2742195759/paddle-symbolic-trace/blob/develop/CONTRIBUTING.md)，里面有详细的示例哦～\r\n>\r\n> 另外，可以尝试鼠标悬浮在 💡 上哦～",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-08-02T12:09:40+00:00",
        "updated_at": "2023-10-13T14:22:28+00:00",
        "closed_at": "2023-10-13T14:22:27+00:00",
        "comments_count": [
            "jjyaoao",
            "ranchongzhi",
            "SigureMo"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 357,
        "title": "🚧 Python 3.11 支持总体规划",
        "body": "## Motivation\r\n\r\n为了保证 PaddleSOT 能够顺利合入 Paddle，保证 2.6 的顺利发布，我们需要在 10 月前支持 Python 3.11，保证现有机制适配完善，全量 SOT 单测 + 动转静单测跑通\r\n\r\n## Roadmap\r\n\r\n整体规划分为三部分\r\n\r\n<p align=\"center\">\r\n    <img src=\"https://github.com/PaddlePaddle/PaddleSOT/assets/38436475/0f41b25a-d37d-48b8-a5db-dd03dbee4e76\" width=\"500px\"/>\r\n</p>\r\n\r\nPython 3.11 单测验证进度见下方 Comment",
        "state": "closed",
        "user": "SigureMo",
        "closed_by": "SigureMo",
        "created_at": "2023-08-30T09:08:51+00:00",
        "updated_at": "2023-10-13T14:27:42+00:00",
        "closed_at": "2023-10-13T14:27:41+00:00",
        "comments_count": [
            "SigureMo",
            "SigureMo",
            "SigureMo"
        ],
        "labels": []
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 360,
        "title": "Python3.11 支持任务汇总",
        "body": "Python 3.11 支持总体规划见 https://github.com/PaddlePaddle/PaddleSOT/issues/357\r\n针对特定的单测可能需要实现新的字节码或修改已有字节码以支持Python3.11，因此每认领一个A任务需要搭配若干个BC任务。\r\n\r\n## 单测任务\r\n\r\n| 序号 | 单测名称 | 报错信息 | 错误初步分析 | 参考难度 | 认领人 | PR 链接 |\r\n| - | - | - | - | - | - | - |\r\n| A.1 | ✅ `test_10_build_unpack.py` | `AssertionError: Stack must have one element, but get 2 elements.` | Python 3.11 在 LOAD 时候多 PUSH 了一个 NULL，因此在最后需要 POP 掉，可参考 Python 3.10 和 3.11 `CALL_FUNCTION_EX` 实现差异 | ⭐ | @gouzil | #362 |\r\n| A.2 | ✅ `test_11_jumps.py` | `sot.utils.exceptions.NotImplementException: opcode: POP_JUMP_FORWARD_IF_FALSE is not supported.` | Python 3.11 增加了很多新的 JUMP 相关字节码，需要对相关字节码进行实现，也要对现有的字节码进行适配，新增字节码应该增加新的单测 | ⭐⭐ | @zrr1999 | #361 |\r\n| A.3 | ✅ `test_11_jumps.py` | `sot.utils.exceptions.NotImplementException: [Fallback] An exception occurred when processing break graph, fallback to dygraph, error message is: <class 'KeyError'> : 'JUMP_ABSOLUTE'` | Python 3.11 移除了 `JUMP_ABSOLUTE` 原有的子图打断逻辑中使用的 `JUMP_ABSOLUTE` 已经不再适用了，需要对子图打断逻辑进行适配 | ⭐⭐⭐ | @zrr1999 | #368|\r\n| A.4 | ✅ `test_12_for_loop.py` | `KeyError: 'JUMP_ABSOLUTE'` | For 循环逻辑需要适配 | ⭐⭐⭐⭐🐾 | @zrr1999 | #371 |\r\n| A.5 | ✅ `test_13_make_function.py` | `IndexError: pop from empty list` | 可以查看下 `MAKE_FUNCTION` 的差异 | ⭐ | @gouzil | #356 |\r\n| A.6 | ✅ `test_14_operators.py` | `AttributeError: 'OpcodeExecutor' object has no attribute 'BINARY_REMAINDER'` | 修改`BINARY_OP` 中 opname 处理方式，将 `REMAINDER` 替换为 Python 字节码中的 `MUDULO` 即可 | ⭐ | @gouzil | #358 |\r\n| A.7 | ✅ `test_15_slice.py` | `KeyError: 'JUMP_ABSOLUTE'` | 同样依赖于子图打断 | ⭐ | @zrr1999 | #371 |\r\n| A.8 | ✅ `test_17_paddle_layer.py` | `[BreakGraph] call function Break graph: <function Layer.__call__ at 0x1307ec9a0> is raise a inline call error. opcode: POP_JUMP_FORWARD_IF_TRUE is not supported.` | 应该只是新的 JUMP 字节码没支持，但不知道还有没有其他问题 | ⭐⭐🐾 | @gouzil | #365 |\r\n| A.9 | ✅ `test_str_format.py` | `KeyError: 'JUMP_ABSOLUTE'` | 同样是发生了子图打断，可以从两方面入手，一是考虑是否能够避免子图打断，另一方面就是等待子图打断功能完成 | ⭐⭐ | @zrr1999 | #369 |\r\n| A.10 | ✅ `test_side_effects.py` | `KeyError: 'CALL_METHOD'` | SideEffect 场景生成的 `CALL_METHOD` 在 Python 3.11 已经删除了，需要适配生成的代码 | ⭐ | @SigureMo | #355 |\r\n| A.11 | ✅ `test_19_closure.py` | `opcode: MAKE_CELL is not supported.` | Closure 实现需要适配，需要实现新增的字节码 | ⭐⭐⭐ | @gouzil | #372 |\r\n| A.12 | ✅ `test_21_global.py` | `KeyError: 'JUMP_ABSOLUTE'` | 需要对 For 循环进行适配 | ⭐ | @zrr1999 | #371 |\r\n| A.13 | ✅ `test_constant_graph.py` | 段错误 | 待查明 | 🐾 | @SigureMo | #375 |\r\n| A.14 | ✅ `test_enumerate.py` | `KeyError: 'JUMP_ABSOLUTE'` | 需要对 For 循环进行适配 | ⭐ | @zrr1999 | #371 |\r\n| A.15 | ✅ `test_guard_user_defined_fn.py` | `sot.utils.exceptions.NotImplementException: Currently don't support predicate a non-const / non-tensor obj, but got PaddleApiVariable(relu, fn, object_0)` | 看样子像是模拟执行跑错了 | ⭐⭐⭐ | @SigureMo | #377 |\r\n| A.16 | ✅ `test_inplace_api.py` | `KeyError: 'JUMP_ABSOLUTE'` | 需要对 For 循环进行适配 | ⭐ | @zrr1999 | #371 |\r\n| A.17 | ✅ `test_range.py` | `KeyError: 'JUMP_ABSOLUTE'` | 需要对 For 循环进行适配 | ⭐ | @zrr1999 | #371 |\r\n| A.18 | ✅ `test_tensor_dtype_in_guard.py` | 段错误 | 疑似 with 引发的段错误 | ⭐⭐⭐⭐⭐⭐⭐⭐ | @SigureMo | PaddlePaddle/Paddle#57490 |\r\n\r\n## 字节码优化任务\r\n\r\n| 序号 | 字节码名称 | 认领人 | PR |                    \r\n| - | - | - | - |                    \r\n| B.1 | GET_AWAITABLE              | | |              \r\n| B.2 | POP_EXCEPT                 | | |    \r\n| B.3 | ✅ JUMP_IF_TRUE_OR_POP        | @zrr1999 | #361 |             \r\n| B.4 | ✅ JUMP_IF_FALSE_OR_POP       | @zrr1999 | #361 |              \r\n| B.5 | ✅ LOAD_GLOBAL              | @SigureMo| #303 |    \r\n| B.6 | DELETE_DEREF               | | |     \r\n| B.7 | ✅ STORE_DEREF                | @gouzil | #372 |    \r\n| B.8 | LOAD_CLASSDEREF            | | |        \r\n| B.9 | ✅ LOAD_DEREF                 | @gouzil | #372 |   \r\n| B.10 | ✅ LOAD_CLOSURE              | @gouzil | #372 |      \r\n| B.11 | RERAISE                   | | | \r\n| B.12 | END_ASYNC_FOR             | | |       \r\n| B.13 | MATCH_CLASS               | | |     \r\n| B.14 | MATCH_KEYS                | | |    \r\n\r\n## 字节码实现任务\r\n| 序号 | 字节码名称 | 认领人 | PR |\r\n| - | - | - | - |\r\n| C.1  | ✅ COPY                             | @SigureMo | #339 |\r\n| C.2  | ✅ SWAP                              | @SigureMo | #339 |\r\n| C.3  | ~~CACHE~~ 辅助数据，非指令           | | |\r\n| C.4  | ✅ BINARY_OP                         | @SigureMo | #303 |\r\n| C.5  | PUSH_EXC_INFO                     | | |\r\n| C.6  | CHECK_EXC_MATCH                   | | |\r\n| C.7  | CHECK_EG_MATCH                    | | |\r\n| C.8  | PREP_RERAISE_STAR                 | | |\r\n| C.9  | BEFORE_WITH                       | | |\r\n| C.11 | ✅ JUMP_BACKWARD                     | @zrr1999 | #361 |\r\n| C.12 | ✅ JUMP_BACKWARD_NO_INTERRUPT        | @zrr1999 | #361 |\r\n| C.13 | ✅ POP_JUMP_FORWARD_IF_TRUE          | @zrr1999 | #361 |\r\n| C.14 | ✅ POP_JUMP_BACKWARD_IF_TRUE         | @zrr1999 | #361 |\r\n| C.15 | ✅ POP_JUMP_FORWARD_IF_FALSE         | @zrr1999 | #361 |\r\n| C.16 | ✅ POP_JUMP_BACKWARD_IF_FALSE        | @zrr1999 | #361 |\r\n| C.17 | ✅ POP_JUMP_FORWARD_IF_NOT_NONE      | @zrr1999 | #361 |\r\n| C.18 | ✅ POP_JUMP_BACKWARD_IF_NOT_NONE     | @zrr1999 | #361 |\r\n| C.19 | ✅ POP_JUMP_FORWARD_IF_NONE          | @zrr1999 | #361 |\r\n| C.20 | ✅ POP_JUMP_BACKWARD_IF_NONE         | @zrr1999 | #361 |\r\n| C.21 | ✅ MAKE_CELL                         | @gouzil | #372 |\r\n| C.22 | ✅ COPY_FREE_VARS                    | @gouzil | #372 |\r\n| C.23 | ✅ CALL                              | @SigureMo | #339 |\r\n| C.24 | ✅ PRECALL                           | @SigureMo | #339 |\r\n| C.25 | ✅ PUSH_NULL                         | @SigureMo | #339 |\r\n| C.26 | ✅ KW_NAMES                          | @SigureMo | #339 |\r\n| C.27 | ✅ RESUME                            | @SigureMo | #303 |\r\n| C.28 | RETURN_GENERATOR                  | | |\r\n| C.29 | SEND                              | | |\r\n| C.30 | ASYNC_GEN_WRAP                    | | |\r\n\r\n",
        "state": "closed",
        "user": "zrr1999",
        "closed_by": "SigureMo",
        "created_at": "2023-08-30T14:00:40+00:00",
        "updated_at": "2023-10-13T14:25:59+00:00",
        "closed_at": "2023-10-13T14:25:59+00:00",
        "comments_count": [
            "SigureMo"
        ],
        "labels": [
            "PFCC"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 392,
        "title": "【提问】关于 SOT 的问题",
        "body": "想请教一下 SOT 是如何去追踪子层的。例如 layer1 内有 sublayer1， sublayer1 里有基础的 linear、relu 算子，要如何去获取 sublayer 中的基础算子。",
        "state": "closed",
        "user": "yangguohao",
        "closed_by": "SigureMo",
        "created_at": "2023-09-14T11:40:52+00:00",
        "updated_at": "2023-09-17T03:37:53+00:00",
        "closed_at": "2023-09-17T03:37:53+00:00",
        "comments_count": [
            "gouzil",
            "yangguohao",
            "SigureMo",
            "yangguohao"
        ],
        "labels": [
            "PFCC"
        ]
    },
    {
        "repo": "PaddlePaddle/PaddleSOT",
        "number": 417,
        "title": "cannot work with `FLAGS_enable_pir_api=1`",
        "body": "开启 `FLAGS_enable_pir_api=1` 时 `examples/trace_basic.py` 报错\r\n\r\n```\r\n# export FLAGS_enable_pir_api=1\r\n\r\n# python examples/trace_basic.py\r\n[Cost Model] New step start, current state is StepState.RUN_SOT\r\n[eval_frame_callback] start to translate: <code object foo at 0x7f7bdb4310b0, file \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 7>\r\n[transform] OriginCode: foo\r\n  8           0 LOAD_FAST                0 (x)\r\n              2 LOAD_FAST                1 (y)\r\n              4 BINARY_ADD\r\n              6 STORE_FAST               2 (z)\r\n\r\n  9           8 LOAD_FAST                2 (z)\r\n             10 LOAD_CONST               1 (1)\r\n             12 BINARY_ADD\r\n             14 RETURN_VALUE\r\n[Cache]: Firstly call <code object foo at 0x7f7bdb4310b0, file \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 7>\r\n[Executor] code options: co_cellvars=()\r\nstart execute opcode: <code object foo at 0x7f7bdb4310b0, file \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 7>\r\n[Translate Executor]: (line   8) LOAD_FAST    x, stack is []\r\n[Translate Executor]: (line   8) LOAD_FAST    y, stack is [TensorVariable([2, 3], float32, True, var_0, x, object_0)]\r\n[Translate Executor]: (line   8) BINARY_ADD   None, stack is [TensorVariable([2, 3], float32, True, var_0, x, object_0), TensorVariable([2, 3], float32, True, var_1, y, object_1)]\r\nTraceback (most recent call last):\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/exceptions.py\", line 40, in impl\r\n    return func(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/function_graph.py\", line 454, in symbolic_call\r\n    out_metas = infer_meta_fn(func, *metas, **kwmetas)\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 245, in __call__\r\n    value = self.value_fn(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 243, in value_fn\r\n    return infer_meta(func, *args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 164, in infer_meta\r\n    return VariableCreator().infer_meta(func, *args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 113, in infer_meta\r\n    args, kwargs = convert_meta_to_variable(\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 131, in convert_meta_to_variable\r\n    return map_if_extend(\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 215, in map_if_extend\r\n    return map_if(\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 187, in map_if\r\n    return map_structure(replace, *structures)\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in map_structure\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in <listcomp>\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 184, in replace\r\n    return true_fn(*args)\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 213, in wrapped_true_fn\r\n    return true_fn(x)\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 134, in <lambda>\r\n    true_fn=lambda x: VariableCreator().get_variable(x),\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 106, in get_variable\r\n    self.var_cache[var_feature_name] = self.create_var(meta)\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 93, in create_var\r\n    var = self.main_program.global_block().create_var(\r\nAttributeError: 'paddle.base.libpaddle.pir.Block' object has no attribute 'create_var'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/executor_cache.py\", line 180, in start_translate\r\n    new_custom_code, guard_fn = simulator.transform()\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/opcode_executor.py\", line 1688, in transform\r\n    self.run()\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/opcode_executor.py\", line 497, in run\r\n    is_stop = self.step(cur_instr)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/opcode_executor.py\", line 537, in step\r\n    return getattr(self, instr.opname)(instr)  # run single step.\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/opcode_executor.py\", line 245, in wrapper\r\n    return call_fn(self, instr)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/opcode_executor.py\", line 115, in inner\r\n    res = BuiltinVariable(fn, graph=self._graph, tracker=DanglingTracker())(\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/variables/callable.py\", line 68, in __call__\r\n    return self.call_function(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/variables/callable.py\", line 594, in call_function\r\n    return handler(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/variable_dispatch.py\", line 876, in <lambda>\r\n    lambda magic_name, var, other: var.graph.call_tensor_method(\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/function_graph.py\", line 370, in call_tensor_method\r\n    return inner_error_default_handler(self.symbolic_call, message_handler)(\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/exceptions.py\", line 46, in impl\r\n    raise InnerError(\r\nsot.utils.exceptions.InnerError: Call tensor_method error: Tensor.__add__, may be not a valid operator api ?.\r\nOrigin Exception is: \r\n Traceback (most recent call last):\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/exceptions.py\", line 40, in impl\r\n    return func(*args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/function_graph.py\", line 454, in symbolic_call\r\n    out_metas = infer_meta_fn(func, *metas, **kwmetas)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 245, in __call__\r\n    value = self.value_fn(*args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 243, in value_fn\r\n    return infer_meta(func, *args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 164, in infer_meta\r\n    return VariableCreator().infer_meta(func, *args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 113, in infer_meta\r\n    args, kwargs = convert_meta_to_variable(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 131, in convert_meta_to_variable\r\n    return map_if_extend(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 215, in map_if_extend\r\n    return map_if(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 187, in map_if\r\n    return map_structure(replace, *structures)\r\n\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in map_structure\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in <listcomp>\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 184, in replace\r\n    return true_fn(*args)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 213, in wrapped_true_fn\r\n    return true_fn(x)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 134, in <lambda>\r\n    true_fn=lambda x: VariableCreator().get_variable(x),\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 106, in get_variable\r\n    self.var_cache[var_feature_name] = self.create_var(meta)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 93, in create_var\r\n    var = self.main_program.global_block().create_var(\r\n\r\nAttributeError: 'paddle.base.libpaddle.pir.Block' object has no attribute 'create_var'\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 26, in <module>\r\n    main()\r\n  File \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 16, in main\r\n    symbolic_translate_out = symbolic_translate(foo)(x, y)\r\n  File \"/alleng/repos/PaddleSOT/sot/translate.py\", line 107, in impl\r\n    return impl_sot(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/translate.py\", line 91, in impl_sot\r\n    raise e\r\n  File \"/alleng/repos/PaddleSOT/sot/translate.py\", line 89, in impl_sot\r\n    outs = fn(*args, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/translate.py\", line 79, in callback\r\n    return eval_frame_callback(frame, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/transform.py\", line 69, in eval_frame_callback\r\n    custom_code = OpcodeExecutorCache()(frame, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/executor_cache.py\", line 61, in __call__\r\n    new_custom_code, guard_fn = self.translate(frame, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/executor_cache.py\", line 132, in translate\r\n    custom_new_code, guard_fn = start_translate(frame, **kwargs)\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/executor_cache.py\", line 214, in start_translate\r\n    raise InnerError(OpcodeExecutorBase.error_message_summary(e)) from e\r\nsot.utils.exceptions.InnerError: In simulate execution:\r\n\r\n    File \"/alleng/repos/PaddleSOT/examples/trace_basic.py\", line 8, in foo\r\n        z = x + y\r\n    sot.utils.exceptions.InnerError: Call tensor_method error: Tensor.__add__, may be not a valid operator api ?.\r\nOrigin Exception is: \r\n Traceback (most recent call last):\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/exceptions.py\", line 40, in impl\r\n    return func(*args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/opcode_translator/executor/function_graph.py\", line 454, in symbolic_call\r\n    out_metas = infer_meta_fn(func, *metas, **kwmetas)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 245, in __call__\r\n    value = self.value_fn(*args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 243, in value_fn\r\n    return infer_meta(func, *args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 164, in infer_meta\r\n    return VariableCreator().infer_meta(func, *args, **kwargs)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 113, in infer_meta\r\n    args, kwargs = convert_meta_to_variable(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 131, in convert_meta_to_variable\r\n    return map_if_extend(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 215, in map_if_extend\r\n    return map_if(\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 187, in map_if\r\n    return map_structure(replace, *structures)\r\n\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in map_structure\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n\r\n  File \"/alleng/repos/Paddle/python/paddle/utils/layers_utils.py\", line 263, in <listcomp>\r\n    return pack_sequence_as(structure[0], [func(*x) for x in entries])\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 184, in replace\r\n    return true_fn(*args)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/utils/utils.py\", line 213, in wrapped_true_fn\r\n    return true_fn(x)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 134, in <lambda>\r\n    true_fn=lambda x: VariableCreator().get_variable(x),\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 106, in get_variable\r\n    self.var_cache[var_feature_name] = self.create_var(meta)\r\n\r\n  File \"/alleng/repos/PaddleSOT/sot/infer_meta.py\", line 93, in create_var\r\n    var = self.main_program.global_block().create_var(\r\n\r\nAttributeError: 'paddle.base.libpaddle.pir.Block' object has no attribute 'create_var'\r\n```",
        "state": "open",
        "user": "gglin001",
        "closed_by": null,
        "created_at": "2023-10-10T15:09:30+00:00",
        "updated_at": "2023-10-12T06:32:46+00:00",
        "closed_at": null,
        "comments_count": [
            "2742195759"
        ],
        "labels": [
            "PFCC"
        ]
    }
]